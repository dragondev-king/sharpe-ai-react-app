{
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_pool",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_protocolFee",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_maxTotalSupply",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "feesToVault0",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "feesToVault1",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "feesToProtocol0",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "feesToProtocol1",
            "type": "uint256"
          }
        ],
        "name": "CollectFees",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "shares",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount0",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount1",
            "type": "uint256"
          }
        ],
        "name": "Deposit",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "int24",
            "name": "tick",
            "type": "int24"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "totalAmount0",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "totalAmount1",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "totalSupply",
            "type": "uint256"
          }
        ],
        "name": "Snapshot",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "shares",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount0",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount1",
            "type": "uint256"
          }
        ],
        "name": "Withdraw",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "SharpeKeeper",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "acceptGovernance",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "accruedProtocolFees0",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "accruedProtocolFees1",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "baseLower",
        "outputs": [
          {
            "internalType": "int24",
            "name": "",
            "type": "int24"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "baseUpper",
        "outputs": [
          {
            "internalType": "int24",
            "name": "",
            "type": "int24"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount0",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount1",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          }
        ],
        "name": "collectProtocol",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount0Desired",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount1Desired",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount0Min",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount1Min",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          }
        ],
        "name": "deposit",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "shares",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount0",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount1",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "int24",
            "name": "tickLower",
            "type": "int24"
          },
          {
            "internalType": "int24",
            "name": "tickUpper",
            "type": "int24"
          },
          {
            "internalType": "uint128",
            "name": "liquidity",
            "type": "uint128"
          }
        ],
        "name": "emergencyBurn",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getBalance0",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getBalance1",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "int24",
            "name": "tickLower",
            "type": "int24"
          },
          {
            "internalType": "int24",
            "name": "tickUpper",
            "type": "int24"
          }
        ],
        "name": "getPositionAmounts",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "amount0",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount1",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getTotalAmounts",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "total0",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "total1",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "governance",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "limitLower",
        "outputs": [
          {
            "internalType": "int24",
            "name": "",
            "type": "int24"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "limitUpper",
        "outputs": [
          {
            "internalType": "int24",
            "name": "",
            "type": "int24"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "maxTotalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "pendingGovernance",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "pool",
        "outputs": [
          {
            "internalType": "contract IUniswapV3Pool",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "protocolFee",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "int256",
            "name": "swapAmount",
            "type": "int256"
          },
          {
            "internalType": "uint160",
            "name": "sqrtPriceLimitX96",
            "type": "uint160"
          },
          {
            "internalType": "int24",
            "name": "_baseLower",
            "type": "int24"
          },
          {
            "internalType": "int24",
            "name": "_baseUpper",
            "type": "int24"
          },
          {
            "internalType": "int24",
            "name": "_bidLower",
            "type": "int24"
          },
          {
            "internalType": "int24",
            "name": "_bidUpper",
            "type": "int24"
          },
          {
            "internalType": "int24",
            "name": "_askLower",
            "type": "int24"
          },
          {
            "internalType": "int24",
            "name": "_askUpper",
            "type": "int24"
          }
        ],
        "name": "rebalance",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_governance",
            "type": "address"
          }
        ],
        "name": "setGovernance",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_maxTotalSupply",
            "type": "uint256"
          }
        ],
        "name": "setMaxTotalSupply",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_protocolFee",
            "type": "uint256"
          }
        ],
        "name": "setProtocolFee",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_SharpeKeeper",
            "type": "address"
          }
        ],
        "name": "setSharpeKeeper",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract IERC20",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          }
        ],
        "name": "sweep",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "tickSpacing",
        "outputs": [
          {
            "internalType": "int24",
            "name": "",
            "type": "int24"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "token0",
        "outputs": [
          {
            "internalType": "contract IERC20",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "token1",
        "outputs": [
          {
            "internalType": "contract IERC20",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount0",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount1",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "uniswapV3MintCallback",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "int256",
            "name": "amount0Delta",
            "type": "int256"
          },
          {
            "internalType": "int256",
            "name": "amount1Delta",
            "type": "int256"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "uniswapV3SwapCallback",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "shares",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount0Min",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount1Min",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          }
        ],
        "name": "withdraw",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "amount0",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount1",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "allSourcePaths": {
      "0": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
      "1": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
      "10": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
      "11": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
      "12": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
      "13": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
      "14": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
      "15": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
      "16": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
      "17": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolState.sol",
      "18": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FixedPoint96.sol",
      "19": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FullMath.sol",
      "2": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
      "20": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
      "21": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/LiquidityAmounts.sol",
      "22": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/PositionKey.sol",
      "23": "contracts/SharpeAI.sol",
      "25": "interfaces/IVault.sol",
      "3": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "4": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
      "5": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
      "6": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
      "7": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
      "8": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
      "9": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol"
    },
    "ast": {
      "absolutePath": "contracts/SharpeAI.sol",
      "exportedSymbols": {
        "Address": [
          4592
        ],
        "Context": [
          4614
        ],
        "ERC20": [
          3970
        ],
        "FixedPoint96": [
          5461
        ],
        "FullMath": [
          5637
        ],
        "IERC20": [
          4048
        ],
        "IERC20Metadata": [
          4073
        ],
        "IUniswapV3MintCallback": [
          5028
        ],
        "IUniswapV3Pool": [
          563
        ],
        "IUniswapV3PoolActions": [
          3018
        ],
        "IUniswapV3PoolDerivedState": [
          3049
        ],
        "IUniswapV3PoolEvents": [
          3168
        ],
        "IUniswapV3PoolImmutables": [
          3208
        ],
        "IUniswapV3PoolOwnerActions": [
          3234
        ],
        "IUniswapV3PoolState": [
          3342
        ],
        "IUniswapV3SwapCallback": [
          5042
        ],
        "IVault": [
          5451
        ],
        "LiquidityAmounts": [
          5382
        ],
        "Math": [
          4702
        ],
        "PositionKey": [
          5407
        ],
        "ReentrancyGuard": [
          3382
        ],
        "SafeERC20": [
          4297
        ],
        "SafeMath": [
          5014
        ],
        "SharpeAI": [
          2922
        ],
        "TickMath": [
          1088
        ]
      },
      "id": 2923,
      "license": "Unlicense",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 1090,
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "41:23:23"
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
          "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
          "id": 1091,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 3383,
          "src": "66:62:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
          "file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
          "id": 1092,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 5029,
          "src": "130:83:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
          "file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
          "id": 1093,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 5043,
          "src": "215:83:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "id": 1094,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 3971,
          "src": "300:55:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "id": 1095,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 4049,
          "src": "357:56:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "id": 1096,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 4298,
          "src": "415:65:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
          "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
          "id": 1097,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 5015,
          "src": "482:57:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
          "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
          "id": 1098,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 564,
          "src": "541:66:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
          "file": "@openzeppelin/contracts/utils/math/Math.sol",
          "id": 1099,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 4703,
          "src": "609:53:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
          "file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
          "id": 1100,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 1089,
          "src": "664:59:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "id": 1101,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 4074,
          "src": "725:75:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
          "file": "@openzeppelin/contracts/utils/Context.sol",
          "id": 1102,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 4615,
          "src": "802:51:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
          "file": "@openzeppelin/contracts/utils/Address.sol",
          "id": 1103,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 4593,
          "src": "855:51:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "id": 1104,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 4298,
          "src": "908:65:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
          "file": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
          "id": 1105,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 3209,
          "src": "975:81:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolState.sol",
          "file": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
          "id": 1106,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 3343,
          "src": "1058:76:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
          "file": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
          "id": 1107,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 3050,
          "src": "1136:83:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
          "file": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
          "id": 1108,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 3019,
          "src": "1221:78:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
          "file": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
          "id": 1109,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 3235,
          "src": "1301:83:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
          "file": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
          "id": 1110,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 3169,
          "src": "1386:77:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/LiquidityAmounts.sol",
          "file": "@uniswap/v3-periphery/contracts/libraries/LiquidityAmounts.sol",
          "id": 1111,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 5383,
          "src": "1465:72:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "C:/Users/SAGE/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/PositionKey.sol",
          "file": "@uniswap/v3-periphery/contracts/libraries/PositionKey.sol",
          "id": 1112,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 5408,
          "src": "1539:67:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "interfaces/IVault.sol",
          "file": "../interfaces/IVault.sol",
          "id": 1113,
          "nodeType": "ImportDirective",
          "scope": 2923,
          "sourceUnit": 5452,
          "src": "1608:34:23",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 1114,
                "name": "IVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5451,
                "src": "1674:6:23"
              },
              "id": 1115,
              "nodeType": "InheritanceSpecifier",
              "src": "1674:6:23"
            },
            {
              "baseName": {
                "id": 1116,
                "name": "IUniswapV3MintCallback",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5028,
                "src": "1687:22:23"
              },
              "id": 1117,
              "nodeType": "InheritanceSpecifier",
              "src": "1687:22:23"
            },
            {
              "baseName": {
                "id": 1118,
                "name": "IUniswapV3SwapCallback",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5042,
                "src": "1716:22:23"
              },
              "id": 1119,
              "nodeType": "InheritanceSpecifier",
              "src": "1716:22:23"
            },
            {
              "baseName": {
                "id": 1120,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3970,
                "src": "1745:5:23"
              },
              "id": 1121,
              "nodeType": "InheritanceSpecifier",
              "src": "1745:5:23"
            },
            {
              "baseName": {
                "id": 1122,
                "name": "ReentrancyGuard",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3382,
                "src": "1757:15:23"
              },
              "id": 1123,
              "nodeType": "InheritanceSpecifier",
              "src": "1757:15:23"
            }
          ],
          "contractDependencies": [
            3382,
            3970,
            4048,
            4073,
            4614,
            5028,
            5042,
            5451
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "id": 2922,
          "linearizedBaseContracts": [
            2922,
            3382,
            3970,
            4073,
            4048,
            4614,
            5042,
            5028,
            5451
          ],
          "name": "SharpeAI",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "id": 1127,
              "libraryName": {
                "id": 1124,
                "name": "SafeERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4297,
                "src": "1787:9:23"
              },
              "nodeType": "UsingForDirective",
              "src": "1781:27:23",
              "typeName": {
                "id": 1126,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1125,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4048,
                  "src": "1801:6:23"
                },
                "referencedDeclaration": 4048,
                "src": "1801:6:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$4048",
                  "typeString": "contract IERC20"
                }
              }
            },
            {
              "id": 1130,
              "libraryName": {
                "id": 1128,
                "name": "SafeMath",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5014,
                "src": "1820:8:23"
              },
              "nodeType": "UsingForDirective",
              "src": "1814:27:23",
              "typeName": {
                "id": 1129,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1833:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            {
              "anonymous": false,
              "id": 1142,
              "name": "Deposit",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 1141,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1132,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "sender",
                    "nodeType": "VariableDeclaration",
                    "scope": 1142,
                    "src": "1873:22:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1131,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1873:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1134,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "to",
                    "nodeType": "VariableDeclaration",
                    "scope": 1142,
                    "src": "1906:18:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1133,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1906:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1136,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "shares",
                    "nodeType": "VariableDeclaration",
                    "scope": 1142,
                    "src": "1935:14:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1135,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1935:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1138,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 1142,
                    "src": "1960:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1137,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1960:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1140,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1142,
                    "src": "1986:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1139,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1986:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1862:146:23"
              },
              "src": "1849:160:23"
            },
            {
              "anonymous": false,
              "id": 1154,
              "name": "Withdraw",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 1153,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1144,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "sender",
                    "nodeType": "VariableDeclaration",
                    "scope": 1154,
                    "src": "2042:22:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1143,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2042:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1146,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "to",
                    "nodeType": "VariableDeclaration",
                    "scope": 1154,
                    "src": "2075:18:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1145,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2075:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1148,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "shares",
                    "nodeType": "VariableDeclaration",
                    "scope": 1154,
                    "src": "2104:14:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1147,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2104:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1150,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 1154,
                    "src": "2129:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1149,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2129:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1152,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1154,
                    "src": "2155:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1151,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2155:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2031:146:23"
              },
              "src": "2017:161:23"
            },
            {
              "anonymous": false,
              "id": 1164,
              "name": "CollectFees",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 1163,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1156,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "feesToVault0",
                    "nodeType": "VariableDeclaration",
                    "scope": 1164,
                    "src": "2214:20:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1155,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2214:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1158,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "feesToVault1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1164,
                    "src": "2245:20:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1157,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2245:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1160,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "feesToProtocol0",
                    "nodeType": "VariableDeclaration",
                    "scope": 1164,
                    "src": "2276:23:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1159,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2276:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1162,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "feesToProtocol1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1164,
                    "src": "2310:23:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1161,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2310:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2203:137:23"
              },
              "src": "2186:155:23"
            },
            {
              "anonymous": false,
              "id": 1174,
              "name": "Snapshot",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 1173,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1166,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "tick",
                    "nodeType": "VariableDeclaration",
                    "scope": 1174,
                    "src": "2364:10:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1165,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "2364:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1168,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "totalAmount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 1174,
                    "src": "2376:20:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1167,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2376:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1170,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "totalAmount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1174,
                    "src": "2398:20:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1169,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2398:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1172,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "totalSupply",
                    "nodeType": "VariableDeclaration",
                    "scope": 1174,
                    "src": "2420:19:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1171,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2420:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2363:77:23"
              },
              "src": "2349:92:23"
            },
            {
              "constant": false,
              "functionSelector": "16f0115b",
              "id": 1177,
              "mutability": "immutable",
              "name": "pool",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2449:36:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                "typeString": "contract IUniswapV3Pool"
              },
              "typeName": {
                "id": 1176,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1175,
                  "name": "IUniswapV3Pool",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 563,
                  "src": "2449:14:23"
                },
                "referencedDeclaration": 563,
                "src": "2449:14:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                  "typeString": "contract IUniswapV3Pool"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "0dfe1681",
              "id": 1180,
              "mutability": "immutable",
              "name": "token0",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2492:30:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4048",
                "typeString": "contract IERC20"
              },
              "typeName": {
                "id": 1179,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1178,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4048,
                  "src": "2492:6:23"
                },
                "referencedDeclaration": 4048,
                "src": "2492:6:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$4048",
                  "typeString": "contract IERC20"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "d21220a7",
              "id": 1183,
              "mutability": "immutable",
              "name": "token1",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2529:30:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4048",
                "typeString": "contract IERC20"
              },
              "typeName": {
                "id": 1182,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1181,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4048,
                  "src": "2529:6:23"
                },
                "referencedDeclaration": 4048,
                "src": "2529:6:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$4048",
                  "typeString": "contract IERC20"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "d0c93a7c",
              "id": 1185,
              "mutability": "immutable",
              "name": "tickSpacing",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2566:34:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              },
              "typeName": {
                "id": 1184,
                "name": "int24",
                "nodeType": "ElementaryTypeName",
                "src": "2566:5:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "b0e21e8a",
              "id": 1187,
              "mutability": "mutable",
              "name": "protocolFee",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2609:26:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1186,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2609:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "2ab4d052",
              "id": 1189,
              "mutability": "mutable",
              "name": "maxTotalSupply",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2642:29:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1188,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2642:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "0c42383a",
              "id": 1191,
              "mutability": "mutable",
              "name": "SharpeKeeper",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2678:27:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 1190,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2678:7:23",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "5aa6e675",
              "id": 1193,
              "mutability": "mutable",
              "name": "governance",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2712:25:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 1192,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2712:7:23",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "f39c38a0",
              "id": 1195,
              "mutability": "mutable",
              "name": "pendingGovernance",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2744:32:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 1194,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2744:7:23",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "fa082743",
              "id": 1197,
              "mutability": "mutable",
              "name": "baseLower",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2785:22:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              },
              "typeName": {
                "id": 1196,
                "name": "int24",
                "nodeType": "ElementaryTypeName",
                "src": "2785:5:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "888a9134",
              "id": 1199,
              "mutability": "mutable",
              "name": "baseUpper",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2814:22:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              },
              "typeName": {
                "id": 1198,
                "name": "int24",
                "nodeType": "ElementaryTypeName",
                "src": "2814:5:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "51e87af7",
              "id": 1201,
              "mutability": "mutable",
              "name": "limitLower",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2843:23:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              },
              "typeName": {
                "id": 1200,
                "name": "int24",
                "nodeType": "ElementaryTypeName",
                "src": "2843:5:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "0f35bcac",
              "id": 1203,
              "mutability": "mutable",
              "name": "limitUpper",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2873:23:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              },
              "typeName": {
                "id": 1202,
                "name": "int24",
                "nodeType": "ElementaryTypeName",
                "src": "2873:5:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "eae989a2",
              "id": 1205,
              "mutability": "mutable",
              "name": "accruedProtocolFees0",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2903:35:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1204,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2903:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "a00fa77f",
              "id": 1207,
              "mutability": "mutable",
              "name": "accruedProtocolFees1",
              "nodeType": "VariableDeclaration",
              "scope": 2922,
              "src": "2945:35:23",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1206,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2945:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "body": {
                "id": 1275,
                "nodeType": "Block",
                "src": "3377:402:23",
                "statements": [
                  {
                    "expression": {
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1221,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "3388:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 1223,
                            "name": "_pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "3410:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1222,
                          "name": "IUniswapV3Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 563,
                          "src": "3395:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$563_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        },
                        "id": 1224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3395:21:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "src": "3388:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "id": 1226,
                    "nodeType": "ExpressionStatement",
                    "src": "3388:28:23"
                  },
                  {
                    "expression": {
                      "id": 1235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1227,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "3427:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4048",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1230,
                                    "name": "_pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1210,
                                    "src": "3458:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1229,
                                  "name": "IUniswapV3Pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 563,
                                  "src": "3443:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$563_$",
                                    "typeString": "type(contract IUniswapV3Pool)"
                                  }
                                },
                                "id": 1231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3443:21:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 1232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token0",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3183,
                              "src": "3443:28:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3443:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1228,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4048,
                          "src": "3436:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$4048_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3436:38:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4048",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "3427:47:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4048",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 1236,
                    "nodeType": "ExpressionStatement",
                    "src": "3427:47:23"
                  },
                  {
                    "expression": {
                      "id": 1245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1237,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1183,
                        "src": "3485:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4048",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1240,
                                    "name": "_pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1210,
                                    "src": "3516:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1239,
                                  "name": "IUniswapV3Pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 563,
                                  "src": "3501:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$563_$",
                                    "typeString": "type(contract IUniswapV3Pool)"
                                  }
                                },
                                "id": 1241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3501:21:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 1242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3189,
                              "src": "3501:28:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3501:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1238,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4048,
                          "src": "3494:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$4048_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3494:38:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4048",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "3485:47:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4048",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 1246,
                    "nodeType": "ExpressionStatement",
                    "src": "3485:47:23"
                  },
                  {
                    "expression": {
                      "id": 1253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1247,
                        "name": "tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "3543:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1249,
                                "name": "_pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1210,
                                "src": "3572:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1248,
                              "name": "IUniswapV3Pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 563,
                              "src": "3557:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$563_$",
                                "typeString": "type(contract IUniswapV3Pool)"
                              }
                            },
                            "id": 1250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3557:21:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tickSpacing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3201,
                          "src": "3557:33:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                            "typeString": "function () view external returns (int24)"
                          }
                        },
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3557:35:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "3543:49:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 1254,
                    "nodeType": "ExpressionStatement",
                    "src": "3543:49:23"
                  },
                  {
                    "expression": {
                      "id": 1257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1255,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "3605:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1256,
                        "name": "_protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "3619:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3605:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1258,
                    "nodeType": "ExpressionStatement",
                    "src": "3605:26:23"
                  },
                  {
                    "expression": {
                      "id": 1261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1259,
                        "name": "maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "3642:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1260,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1214,
                        "src": "3659:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3642:32:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1262,
                    "nodeType": "ExpressionStatement",
                    "src": "3642:32:23"
                  },
                  {
                    "expression": {
                      "id": 1266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1263,
                        "name": "governance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "3685:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "id": 1264,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3698:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3698:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3685:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1267,
                    "nodeType": "ExpressionStatement",
                    "src": "3685:23:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1269,
                            "name": "_protocolFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1212,
                            "src": "3737:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "316536",
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3752:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          },
                          "src": "3737:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "70726f746f636f6c466565",
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3757:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                            "typeString": "literal_string \"protocolFee\""
                          },
                          "value": "protocolFee"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                            "typeString": "literal_string \"protocolFee\""
                          }
                        ],
                        "id": 1268,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "3729:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3729:42:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1274,
                    "nodeType": "ExpressionStatement",
                    "src": "3729:42:23"
                  }
                ]
              },
              "documentation": {
                "id": 1208,
                "nodeType": "StructuredDocumentation",
                "src": "2989:250:23",
                "text": " dev After deploying, strategy needs to be set by offchain devs\n param _pool Underlying Uniswap V3 pool\n param _protocolFee Protocol fee expressed as multiple of 1e-6\n param _maxTotalSupply Cap on total supply"
              },
              "id": 1276,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [
                {
                  "arguments": [
                    {
                      "hexValue": "5368617270654149",
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3359:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_2d75843b79c39784c9b02df86f2846fcde1bf1ff1624dc4158c8fb324de5c889",
                        "typeString": "literal_string \"SharpeAI\""
                      },
                      "value": "SharpeAI"
                    },
                    {
                      "hexValue": "4149",
                      "id": 1218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3371:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_78dda996de494b599fdb66c8365826df9b80d101d1cea931b5fa3753fca7ab85",
                        "typeString": "literal_string \"AI\""
                      },
                      "value": "AI"
                    }
                  ],
                  "id": 1219,
                  "modifierName": {
                    "id": 1216,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3970,
                    "src": "3353:5:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "3353:23:23"
                }
              ],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1215,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1210,
                    "mutability": "mutable",
                    "name": "_pool",
                    "nodeType": "VariableDeclaration",
                    "scope": 1276,
                    "src": "3267:13:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1209,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3267:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1212,
                    "mutability": "mutable",
                    "name": "_protocolFee",
                    "nodeType": "VariableDeclaration",
                    "scope": 1276,
                    "src": "3291:20:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1211,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3291:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1214,
                    "mutability": "mutable",
                    "name": "_maxTotalSupply",
                    "nodeType": "VariableDeclaration",
                    "scope": 1276,
                    "src": "3322:23:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1213,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3322:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3256:96:23"
              },
              "returnParameters": {
                "id": 1220,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3377:0:23"
              },
              "scope": 2922,
              "src": "3245:534:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                5428
              ],
              "body": {
                "id": 1422,
                "nodeType": "Block",
                "src": "4979:1043:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1300,
                              "name": "amount0Desired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1279,
                              "src": "4998:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5015:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4998:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1303,
                              "name": "amount1Desired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1281,
                              "src": "5020:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5037:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5020:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4998:40:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "616d6f756e743044657369726564206f7220616d6f756e743144657369726564",
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5040:34:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_71d3c6311517a09fc5373cdb0e09405ca4ad5deb8d1023014ac31914a4906b20",
                            "typeString": "literal_string \"amount0Desired or amount1Desired\""
                          },
                          "value": "amount0Desired or amount1Desired"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_71d3c6311517a09fc5373cdb0e09405ca4ad5deb8d1023014ac31914a4906b20",
                            "typeString": "literal_string \"amount0Desired or amount1Desired\""
                          }
                        ],
                        "id": 1299,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "4990:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4990:85:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1309,
                    "nodeType": "ExpressionStatement",
                    "src": "4990:85:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1311,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1287,
                              "src": "5094:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5108:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5100:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1312,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5100:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5100:10:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5094:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1317,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1287,
                              "src": "5114:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 1320,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5128:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                    "typeString": "contract SharpeAI"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                    "typeString": "contract SharpeAI"
                                  }
                                ],
                                "id": 1319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5120:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1318,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5120:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5120:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5114:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5094:39:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "746f",
                          "id": 1324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5135:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                            "typeString": "literal_string \"to\""
                          },
                          "value": "to"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                            "typeString": "literal_string \"to\""
                          }
                        ],
                        "id": 1310,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "5086:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5086:54:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1326,
                    "nodeType": "ExpressionStatement",
                    "src": "5086:54:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1328,
                          "name": "baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "5229:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1329,
                          "name": "baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5240:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 1327,
                        "name": "_poke",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1452,
                        "src": "5223:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$returns$__$",
                          "typeString": "function (int24,int24)"
                        }
                      },
                      "id": 1330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5223:27:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1331,
                    "nodeType": "ExpressionStatement",
                    "src": "5223:27:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1333,
                          "name": "limitLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1201,
                          "src": "5267:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1334,
                          "name": "limitUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "5279:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 1332,
                        "name": "_poke",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1452,
                        "src": "5261:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$returns$__$",
                          "typeString": "function (int24,int24)"
                        }
                      },
                      "id": 1335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5261:29:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1336,
                    "nodeType": "ExpressionStatement",
                    "src": "5261:29:23"
                  },
                  {
                    "expression": {
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "components": [
                          {
                            "id": 1337,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1293,
                            "src": "5367:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1338,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1295,
                            "src": "5375:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1339,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "5384:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1340,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "TupleExpression",
                        "src": "5366:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256)"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 1342,
                            "name": "amount0Desired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1279,
                            "src": "5417:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1343,
                            "name": "amount1Desired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1281,
                            "src": "5433:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1341,
                          "name": "_calcSharesAndAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1613,
                          "src": "5395:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (uint256,uint256) view returns (uint256,uint256,uint256)"
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5395:53:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256)"
                        }
                      },
                      "src": "5366:82:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1346,
                    "nodeType": "ExpressionStatement",
                    "src": "5366:82:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1348,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1293,
                            "src": "5467:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5476:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5467:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "736861726573",
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5479:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                            "typeString": "literal_string \"shares\""
                          },
                          "value": "shares"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                            "typeString": "literal_string \"shares\""
                          }
                        ],
                        "id": 1347,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "5459:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5459:29:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1353,
                    "nodeType": "ExpressionStatement",
                    "src": "5459:29:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1355,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1295,
                            "src": "5507:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1356,
                            "name": "amount0Min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1283,
                            "src": "5518:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5507:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "616d6f756e74304d696e",
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5530:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                            "typeString": "literal_string \"amount0Min\""
                          },
                          "value": "amount0Min"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                            "typeString": "literal_string \"amount0Min\""
                          }
                        ],
                        "id": 1354,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "5499:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5499:44:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1360,
                    "nodeType": "ExpressionStatement",
                    "src": "5499:44:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1362,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "5562:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1363,
                            "name": "amount1Min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1285,
                            "src": "5573:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5562:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "616d6f756e74314d696e",
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5585:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                            "typeString": "literal_string \"amount1Min\""
                          },
                          "value": "amount1Min"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                            "typeString": "literal_string \"amount1Min\""
                          }
                        ],
                        "id": 1361,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "5554:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5554:44:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1367,
                    "nodeType": "ExpressionStatement",
                    "src": "5554:44:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1368,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "5654:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5664:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5654:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1383,
                    "nodeType": "IfStatement",
                    "src": "5650:76:23",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1374,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5691:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5691:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1378,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5711:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                  "typeString": "contract SharpeAI"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                  "typeString": "contract SharpeAI"
                                }
                              ],
                              "id": 1377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5703:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1376,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5703:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5703:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1380,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1295,
                            "src": "5718:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1371,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "5667:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4130,
                          "src": "5667:23:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                            "typeString": "function (contract IERC20,address,address,uint256)"
                          }
                        },
                        "id": 1381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5667:59:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1382,
                      "nodeType": "ExpressionStatement",
                      "src": "5667:59:23"
                    }
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1384,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1297,
                        "src": "5741:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5751:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5741:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1399,
                    "nodeType": "IfStatement",
                    "src": "5737:76:23",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1390,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5778:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5778:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1394,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5798:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                  "typeString": "contract SharpeAI"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                  "typeString": "contract SharpeAI"
                                }
                              ],
                              "id": 1393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5790:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1392,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5790:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5790:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1396,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "5805:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1387,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "5754:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4130,
                          "src": "5754:23:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                            "typeString": "function (contract IERC20,address,address,uint256)"
                          }
                        },
                        "id": 1397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5754:59:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1398,
                      "nodeType": "ExpressionStatement",
                      "src": "5754:59:23"
                    }
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1401,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1287,
                          "src": "5869:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1402,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "5873:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1400,
                        "name": "_mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3787,
                        "src": "5863:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 1403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5863:17:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1404,
                    "nodeType": "ExpressionStatement",
                    "src": "5863:17:23"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1406,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5904:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5904:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1408,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1287,
                          "src": "5916:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1409,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "5920:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1410,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1295,
                          "src": "5928:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1411,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1297,
                          "src": "5937:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1405,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1142,
                        "src": "5896:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256,uint256,uint256)"
                        }
                      },
                      "id": 1412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5896:49:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1413,
                    "nodeType": "EmitStatement",
                    "src": "5891:54:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1415,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3467,
                              "src": "5964:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5964:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1417,
                            "name": "maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "5981:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5964:31:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "6d6178546f74616c537570706c79",
                          "id": 1419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5997:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_df1d326ab919e08f08d226da9d9bb7a4aae45db082594b3c99f595a5eec6dbed",
                            "typeString": "literal_string \"maxTotalSupply\""
                          },
                          "value": "maxTotalSupply"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_df1d326ab919e08f08d226da9d9bb7a4aae45db082594b3c99f595a5eec6dbed",
                            "typeString": "literal_string \"maxTotalSupply\""
                          }
                        ],
                        "id": 1414,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "5956:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5956:58:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1421,
                    "nodeType": "ExpressionStatement",
                    "src": "5956:58:23"
                  }
                ]
              },
              "documentation": {
                "id": 1277,
                "nodeType": "StructuredDocumentation",
                "src": "3793:830:23",
                "text": " @notice Deposits tokens in proportion to the vault's current holdings.\n @dev These tokens sit in the vault and are not used for liquidity on\n Uniswap until the next rebalance. Also note it's not necessary to check\n if user manipulated price to deposit cheaper, as the value of range\n orders can only by manipulated higher.\n @param amount0Desired Max amount of token0 to deposit\n @param amount1Desired Max amount of token1 to deposit\n @param amount0Min Revert if resulting `amount0` is less than this\n @param amount1Min Revert if resulting `amount1` is less than this\n @param to Recipient of shares\n @return shares Number of shares minted\n @return amount0 Amount of token0 deposited\n @return amount1 Amount of token1 deposited"
              },
              "functionSelector": "365d0ed7",
              "id": 1423,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 1291,
                  "modifierName": {
                    "id": 1290,
                    "name": "nonReentrant",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3381,
                    "src": "4843:12:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "4843:12:23"
                }
              ],
              "name": "deposit",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 1289,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "4825:8:23"
              },
              "parameters": {
                "id": 1288,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1279,
                    "mutability": "mutable",
                    "name": "amount0Desired",
                    "nodeType": "VariableDeclaration",
                    "scope": 1423,
                    "src": "4656:22:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1278,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4656:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1281,
                    "mutability": "mutable",
                    "name": "amount1Desired",
                    "nodeType": "VariableDeclaration",
                    "scope": 1423,
                    "src": "4689:22:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1280,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4689:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1283,
                    "mutability": "mutable",
                    "name": "amount0Min",
                    "nodeType": "VariableDeclaration",
                    "scope": 1423,
                    "src": "4722:18:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1282,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4722:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1285,
                    "mutability": "mutable",
                    "name": "amount1Min",
                    "nodeType": "VariableDeclaration",
                    "scope": 1423,
                    "src": "4751:18:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1284,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4751:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1287,
                    "mutability": "mutable",
                    "name": "to",
                    "nodeType": "VariableDeclaration",
                    "scope": 1423,
                    "src": "4780:10:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1286,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4780:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4645:152:23"
              },
              "returnParameters": {
                "id": 1298,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1293,
                    "mutability": "mutable",
                    "name": "shares",
                    "nodeType": "VariableDeclaration",
                    "scope": 1423,
                    "src": "4888:14:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1292,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4888:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1295,
                    "mutability": "mutable",
                    "name": "amount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 1423,
                    "src": "4917:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1294,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4917:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1297,
                    "mutability": "mutable",
                    "name": "amount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1423,
                    "src": "4947:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1296,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4947:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4873:100:23"
              },
              "scope": 2922,
              "src": "4629:1393:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 1451,
                "nodeType": "Block",
                "src": "6260:170:23",
                "statements": [
                  {
                    "assignments": [
                      1432,
                      null,
                      null,
                      null,
                      null
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1432,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1451,
                        "src": "6272:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1431,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "6272:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      null,
                      null,
                      null,
                      null
                    ],
                    "id": 1437,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 1434,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1426,
                          "src": "6311:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1435,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1428,
                          "src": "6322:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 1433,
                        "name": "_position",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2516,
                        "src": "6301:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "id": 1436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6301:31:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6271:61:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 1440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1438,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "6347:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6359:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6347:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1450,
                    "nodeType": "IfStatement",
                    "src": "6343:80:23",
                    "trueBody": {
                      "id": 1449,
                      "nodeType": "Block",
                      "src": "6362:61:23",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1444,
                                "name": "tickLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1426,
                                "src": "6387:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1445,
                                "name": "tickUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1428,
                                "src": "6398:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 1446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6409:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 1441,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1177,
                                "src": "6377:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 1443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "burn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2981,
                              "src": "6377:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                              }
                            },
                            "id": 1447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6377:34:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "id": 1448,
                          "nodeType": "ExpressionStatement",
                          "src": "6377:34:23"
                        }
                      ]
                    }
                  }
                ]
              },
              "documentation": {
                "id": 1424,
                "nodeType": "StructuredDocumentation",
                "src": "6030:166:23",
                "text": "@dev Do zero-burns to poke a position on Uniswap so earned fees are\n updated. Should be called if total amounts needs to include up-to-date\n fees."
              },
              "id": 1452,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_poke",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1429,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1426,
                    "mutability": "mutable",
                    "name": "tickLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 1452,
                    "src": "6217:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1425,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "6217:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1428,
                    "mutability": "mutable",
                    "name": "tickUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 1452,
                    "src": "6234:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1427,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "6234:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "6216:34:23"
              },
              "returnParameters": {
                "id": 1430,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "6260:0:23"
              },
              "scope": 2922,
              "src": "6202:228:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 1612,
                "nodeType": "Block",
                "src": "6892:1114:23",
                "statements": [
                  {
                    "assignments": [
                      1467
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1467,
                        "mutability": "mutable",
                        "name": "totalSupply",
                        "nodeType": "VariableDeclaration",
                        "scope": 1612,
                        "src": "6903:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1466,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6903:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1470,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1468,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3467,
                        "src": "6925:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6925:13:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6903:35:23"
                  },
                  {
                    "assignments": [
                      1472,
                      1474
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1472,
                        "mutability": "mutable",
                        "name": "total0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1612,
                        "src": "6950:14:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1471,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6950:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1474,
                        "mutability": "mutable",
                        "name": "total1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1612,
                        "src": "6966:14:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1473,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6966:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1477,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1475,
                        "name": "getTotalAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "6984:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function () view returns (uint256,uint256)"
                        }
                      },
                      "id": 1476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6984:17:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6949:52:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1479,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1467,
                                "src": "7075:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7090:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7075:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1482,
                                "name": "total0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1472,
                                "src": "7095:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7104:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7095:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7075:30:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1486,
                              "name": "total1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "7109:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7118:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7109:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7075:44:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1478,
                        "name": "assert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -3,
                        "src": "7068:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 1490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7068:52:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1491,
                    "nodeType": "ExpressionStatement",
                    "src": "7068:52:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1492,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "7137:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7152:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7137:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1512,
                          "name": "total0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1472,
                          "src": "7369:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7379:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7369:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1530,
                            "name": "total1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1474,
                            "src": "7503:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7513:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7503:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1608,
                          "nodeType": "Block",
                          "src": "7633:366:23",
                          "statements": [
                            {
                              "assignments": [
                                1549
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1549,
                                  "mutability": "mutable",
                                  "name": "cross",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1608,
                                  "src": "7648:13:23",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1548,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7648:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1561,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1554,
                                        "name": "total1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1474,
                                        "src": "7692:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1552,
                                        "name": "amount0Desired",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1455,
                                        "src": "7673:14:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1553,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4908,
                                      "src": "7673:18:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1555,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7673:26:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1558,
                                        "name": "total0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1472,
                                        "src": "7720:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1556,
                                        "name": "amount1Desired",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1457,
                                        "src": "7701:14:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1557,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4908,
                                      "src": "7701:18:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1559,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7701:26:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1550,
                                    "name": "Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4702,
                                    "src": "7664:4:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Math_$4702_$",
                                      "typeString": "type(library Math)"
                                    }
                                  },
                                  "id": 1551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "min",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4653,
                                  "src": "7664:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7664:64:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7648:80:23"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1563,
                                      "name": "cross",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1549,
                                      "src": "7751:5:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1564,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7759:1:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "7751:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "63726f7373",
                                    "id": 1566,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7762:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b7b16ad9ab1bdad53bb85b6df7f84773941bf7861c37b33336b827a1a37db175",
                                      "typeString": "literal_string \"cross\""
                                    },
                                    "value": "cross"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_b7b16ad9ab1bdad53bb85b6df7f84773941bf7861c37b33336b827a1a37db175",
                                      "typeString": "literal_string \"cross\""
                                    }
                                  ],
                                  "id": 1562,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "7743:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7743:27:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1568,
                              "nodeType": "ExpressionStatement",
                              "src": "7743:27:23"
                            },
                            {
                              "expression": {
                                "id": 1580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1569,
                                  "name": "amount0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1462,
                                  "src": "7820:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 1578,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7859:1:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1575,
                                          "name": "total1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1474,
                                          "src": "7847:6:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "31",
                                              "id": 1572,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "7840:1:23",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              }
                                            ],
                                            "expression": {
                                              "id": 1570,
                                              "name": "cross",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1549,
                                              "src": "7830:5:23",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1571,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sub",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4893,
                                            "src": "7830:9:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1573,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7830:12:23",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1574,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4923,
                                        "src": "7830:16:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1576,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7830:24:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4878,
                                    "src": "7830:28:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7830:31:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7820:41:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1581,
                              "nodeType": "ExpressionStatement",
                              "src": "7820:41:23"
                            },
                            {
                              "expression": {
                                "id": 1593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1582,
                                  "name": "amount1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1464,
                                  "src": "7876:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 1591,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7915:1:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1588,
                                          "name": "total0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1472,
                                          "src": "7903:6:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "31",
                                              "id": 1585,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "7896:1:23",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              }
                                            ],
                                            "expression": {
                                              "id": 1583,
                                              "name": "cross",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1549,
                                              "src": "7886:5:23",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1584,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sub",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4893,
                                            "src": "7886:9:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1586,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7886:12:23",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1587,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4923,
                                        "src": "7886:16:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1589,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7886:24:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4878,
                                    "src": "7886:28:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7886:31:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7876:41:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1594,
                              "nodeType": "ExpressionStatement",
                              "src": "7876:41:23"
                            },
                            {
                              "expression": {
                                "id": 1606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1595,
                                  "name": "shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1460,
                                  "src": "7932:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1604,
                                      "name": "total1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1474,
                                      "src": "7980:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1601,
                                          "name": "total0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1472,
                                          "src": "7968:6:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 1598,
                                              "name": "totalSupply",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1467,
                                              "src": "7951:11:23",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 1596,
                                              "name": "cross",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1549,
                                              "src": "7941:5:23",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1597,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4908,
                                            "src": "7941:9:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1599,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7941:22:23",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1600,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4923,
                                        "src": "7941:26:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1602,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7941:34:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1603,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4923,
                                    "src": "7941:38:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1605,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7941:46:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7932:55:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1607,
                              "nodeType": "ExpressionStatement",
                              "src": "7932:55:23"
                            }
                          ]
                        },
                        "id": 1609,
                        "nodeType": "IfStatement",
                        "src": "7499:500:23",
                        "trueBody": {
                          "id": 1547,
                          "nodeType": "Block",
                          "src": "7516:111:23",
                          "statements": [
                            {
                              "expression": {
                                "id": 1535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1533,
                                  "name": "amount0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1462,
                                  "src": "7531:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1534,
                                  "name": "amount0Desired",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1455,
                                  "src": "7541:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7531:24:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1536,
                              "nodeType": "ExpressionStatement",
                              "src": "7531:24:23"
                            },
                            {
                              "expression": {
                                "id": 1545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1537,
                                  "name": "shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1460,
                                  "src": "7570:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1543,
                                      "name": "total0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1472,
                                      "src": "7608:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1540,
                                          "name": "totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1467,
                                          "src": "7591:11:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1538,
                                          "name": "amount0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1462,
                                          "src": "7579:7:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1539,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4908,
                                        "src": "7579:11:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1541,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7579:24:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1542,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4923,
                                    "src": "7579:28:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1544,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7579:36:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7570:45:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1546,
                              "nodeType": "ExpressionStatement",
                              "src": "7570:45:23"
                            }
                          ]
                        }
                      },
                      "id": 1610,
                      "nodeType": "IfStatement",
                      "src": "7365:634:23",
                      "trueBody": {
                        "id": 1529,
                        "nodeType": "Block",
                        "src": "7382:111:23",
                        "statements": [
                          {
                            "expression": {
                              "id": 1517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1515,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1464,
                                "src": "7397:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 1516,
                                "name": "amount1Desired",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1457,
                                "src": "7407:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7397:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1518,
                            "nodeType": "ExpressionStatement",
                            "src": "7397:24:23"
                          },
                          {
                            "expression": {
                              "id": 1527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1519,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1460,
                                "src": "7436:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 1525,
                                    "name": "total1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1474,
                                    "src": "7474:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1522,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1467,
                                        "src": "7457:11:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1520,
                                        "name": "amount1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1464,
                                        "src": "7445:7:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1521,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4908,
                                      "src": "7445:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7445:24:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1524,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4923,
                                  "src": "7445:28:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7445:36:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7436:45:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1528,
                            "nodeType": "ExpressionStatement",
                            "src": "7436:45:23"
                          }
                        ]
                      }
                    },
                    "id": 1611,
                    "nodeType": "IfStatement",
                    "src": "7133:866:23",
                    "trueBody": {
                      "id": 1511,
                      "nodeType": "Block",
                      "src": "7155:204:23",
                      "statements": [
                        {
                          "expression": {
                            "id": 1497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1495,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1462,
                              "src": "7234:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1496,
                              "name": "amount0Desired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1455,
                              "src": "7244:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7234:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1498,
                          "nodeType": "ExpressionStatement",
                          "src": "7234:24:23"
                        },
                        {
                          "expression": {
                            "id": 1501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1499,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "7273:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1500,
                              "name": "amount1Desired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1457,
                              "src": "7283:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7273:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1502,
                          "nodeType": "ExpressionStatement",
                          "src": "7273:24:23"
                        },
                        {
                          "expression": {
                            "id": 1509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1503,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1460,
                              "src": "7312:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1506,
                                  "name": "amount0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1462,
                                  "src": "7330:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1507,
                                  "name": "amount1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1464,
                                  "src": "7339:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1504,
                                  "name": "Math",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4702,
                                  "src": "7321:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Math_$4702_$",
                                    "typeString": "type(library Math)"
                                  }
                                },
                                "id": 1505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4635,
                                "src": "7321:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7321:26:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7312:35:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1510,
                          "nodeType": "ExpressionStatement",
                          "src": "7312:35:23"
                        }
                      ]
                    }
                  }
                ]
              },
              "documentation": {
                "id": 1453,
                "nodeType": "StructuredDocumentation",
                "src": "6438:214:23",
                "text": "@dev Calculates the largest possible `amount0` and `amount1` such that\n they're in the same proportion as total amounts, but not greater than\n `amount0Desired` and `amount1Desired` respectively."
              },
              "id": 1613,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_calcSharesAndAmounts",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1458,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1455,
                    "mutability": "mutable",
                    "name": "amount0Desired",
                    "nodeType": "VariableDeclaration",
                    "scope": 1613,
                    "src": "6689:22:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1454,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6689:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1457,
                    "mutability": "mutable",
                    "name": "amount1Desired",
                    "nodeType": "VariableDeclaration",
                    "scope": 1613,
                    "src": "6713:22:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1456,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6713:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "6688:48:23"
              },
              "returnParameters": {
                "id": 1465,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1460,
                    "mutability": "mutable",
                    "name": "shares",
                    "nodeType": "VariableDeclaration",
                    "scope": 1613,
                    "src": "6801:14:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1459,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6801:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1462,
                    "mutability": "mutable",
                    "name": "amount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 1613,
                    "src": "6830:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1461,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6830:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1464,
                    "mutability": "mutable",
                    "name": "amount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1613,
                    "src": "6860:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1463,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6860:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "6786:100:23"
              },
              "scope": 2922,
              "src": "6658:1348:23",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "baseFunctions": [
                5443
              ],
              "body": {
                "id": 1776,
                "nodeType": "Block",
                "src": "8663:1304:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1633,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1616,
                            "src": "8682:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8691:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8682:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "736861726573",
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8694:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                            "typeString": "literal_string \"shares\""
                          },
                          "value": "shares"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                            "typeString": "literal_string \"shares\""
                          }
                        ],
                        "id": 1632,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "8674:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8674:29:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1638,
                    "nodeType": "ExpressionStatement",
                    "src": "8674:29:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1640,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1622,
                              "src": "8722:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8736:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8728:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1641,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8728:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8728:10:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8722:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1646,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1622,
                              "src": "8742:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 1649,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8756:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                    "typeString": "contract SharpeAI"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                    "typeString": "contract SharpeAI"
                                  }
                                ],
                                "id": 1648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8748:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1647,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8748:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8748:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8742:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8722:39:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "746f",
                          "id": 1653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8763:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                            "typeString": "literal_string \"to\""
                          },
                          "value": "to"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                            "typeString": "literal_string \"to\""
                          }
                        ],
                        "id": 1639,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "8714:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8714:54:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1655,
                    "nodeType": "ExpressionStatement",
                    "src": "8714:54:23"
                  },
                  {
                    "assignments": [
                      1657
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1657,
                        "mutability": "mutable",
                        "name": "totalSupply",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "8779:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8779:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1660,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1658,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3467,
                        "src": "8801:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8801:13:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8779:35:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1662,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8857:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8857:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1664,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1616,
                          "src": "8869:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1661,
                        "name": "_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3859,
                        "src": "8851:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 1665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8851:25:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1666,
                    "nodeType": "ExpressionStatement",
                    "src": "8851:25:23"
                  },
                  {
                    "assignments": [
                      1668
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1668,
                        "mutability": "mutable",
                        "name": "unusedAmount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "8957:21:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1667,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8957:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1677,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 1675,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "9011:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1672,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1616,
                              "src": "8999:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1669,
                                "name": "getBalance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2462,
                                "src": "8981:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8981:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4908,
                            "src": "8981:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8981:25:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4923,
                        "src": "8981:29:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8981:42:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8957:66:23"
                  },
                  {
                    "assignments": [
                      1679
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1679,
                        "mutability": "mutable",
                        "name": "unusedAmount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "9034:21:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9034:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1688,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 1686,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "9088:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1683,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1616,
                              "src": "9076:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1680,
                                "name": "getBalance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2480,
                                "src": "9058:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9058:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4908,
                            "src": "9058:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9058:25:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4923,
                        "src": "9058:29:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9058:42:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9034:66:23"
                  },
                  {
                    "assignments": [
                      1690,
                      1692
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1690,
                        "mutability": "mutable",
                        "name": "baseAmount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "9177:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9177:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1692,
                        "mutability": "mutable",
                        "name": "baseAmount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "9198:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1691,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9198:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1699,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 1694,
                          "name": "baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "9254:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1695,
                          "name": "baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "9265:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1696,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1616,
                          "src": "9276:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1697,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "9284:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1693,
                        "name": "_burnLiquidityShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1861,
                        "src": "9234:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (int24,int24,uint256,uint256) returns (uint256,uint256)"
                        }
                      },
                      "id": 1698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9234:62:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9176:120:23"
                  },
                  {
                    "assignments": [
                      1701,
                      1703
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1701,
                        "mutability": "mutable",
                        "name": "limitAmount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "9308:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1700,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9308:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1703,
                        "mutability": "mutable",
                        "name": "limitAmount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "9330:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1702,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9330:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1710,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 1705,
                          "name": "limitLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1201,
                          "src": "9387:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1706,
                          "name": "limitUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "9399:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1707,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1616,
                          "src": "9411:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1708,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "9419:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1704,
                        "name": "_burnLiquidityShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1861,
                        "src": "9367:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (int24,int24,uint256,uint256) returns (uint256,uint256)"
                        }
                      },
                      "id": 1709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9367:64:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9307:124:23"
                  },
                  {
                    "expression": {
                      "id": 1719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1711,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "9495:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 1717,
                            "name": "limitAmount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1701,
                            "src": "9540:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1714,
                                "name": "baseAmount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1690,
                                "src": "9523:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1712,
                                "name": "unusedAmount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1668,
                                "src": "9505:13:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4878,
                              "src": "9505:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9505:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4878,
                          "src": "9505:34:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9505:48:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9495:58:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1720,
                    "nodeType": "ExpressionStatement",
                    "src": "9495:58:23"
                  },
                  {
                    "expression": {
                      "id": 1729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1721,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1630,
                        "src": "9564:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 1727,
                            "name": "limitAmount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1703,
                            "src": "9609:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1724,
                                "name": "baseAmount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1692,
                                "src": "9592:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1722,
                                "name": "unusedAmount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1679,
                                "src": "9574:13:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4878,
                              "src": "9574:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9574:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4878,
                          "src": "9574:34:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9574:48:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9564:58:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1730,
                    "nodeType": "ExpressionStatement",
                    "src": "9564:58:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1732,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1628,
                            "src": "9641:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1733,
                            "name": "amount0Min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1618,
                            "src": "9652:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9641:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "616d6f756e74304d696e",
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9664:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                            "typeString": "literal_string \"amount0Min\""
                          },
                          "value": "amount0Min"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                            "typeString": "literal_string \"amount0Min\""
                          }
                        ],
                        "id": 1731,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "9633:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9633:44:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1737,
                    "nodeType": "ExpressionStatement",
                    "src": "9633:44:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1739,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1630,
                            "src": "9696:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1740,
                            "name": "amount1Min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1620,
                            "src": "9707:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9696:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "616d6f756e74314d696e",
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9719:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                            "typeString": "literal_string \"amount1Min\""
                          },
                          "value": "amount1Min"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                            "typeString": "literal_string \"amount1Min\""
                          }
                        ],
                        "id": 1738,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "9688:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9688:44:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1744,
                    "nodeType": "ExpressionStatement",
                    "src": "9688:44:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1745,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "9786:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9796:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9786:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1755,
                    "nodeType": "IfStatement",
                    "src": "9782:49:23",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1751,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1622,
                            "src": "9819:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1752,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1628,
                            "src": "9823:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1748,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "9799:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4104,
                          "src": "9799:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                            "typeString": "function (contract IERC20,address,uint256)"
                          }
                        },
                        "id": 1753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9799:32:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1754,
                      "nodeType": "ExpressionStatement",
                      "src": "9799:32:23"
                    }
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1756,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1630,
                        "src": "9846:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9856:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9846:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1766,
                    "nodeType": "IfStatement",
                    "src": "9842:49:23",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1762,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1622,
                            "src": "9879:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1763,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1630,
                            "src": "9883:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1759,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "9859:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4104,
                          "src": "9859:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                            "typeString": "function (contract IERC20,address,uint256)"
                          }
                        },
                        "id": 1764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9859:32:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1765,
                      "nodeType": "ExpressionStatement",
                      "src": "9859:32:23"
                    }
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1768,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9918:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9918:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1770,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1622,
                          "src": "9930:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1771,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1616,
                          "src": "9934:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1772,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1628,
                          "src": "9942:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1773,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1630,
                          "src": "9951:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1767,
                        "name": "Withdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "9909:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256,uint256,uint256)"
                        }
                      },
                      "id": 1774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9909:50:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1775,
                    "nodeType": "EmitStatement",
                    "src": "9904:55:23"
                  }
                ]
              },
              "documentation": {
                "id": 1614,
                "nodeType": "StructuredDocumentation",
                "src": "8014:440:23",
                "text": " @notice Withdraws tokens in proportion to the vault's holdings.\n @param shares Shares burned by sender\n @param amount0Min Revert if resulting `amount0` is smaller than this\n @param amount1Min Revert if resulting `amount1` is smaller than this\n @param to Recipient of tokens\n @return amount0 Amount of token0 sent to recipient\n @return amount1 Amount of token1 sent to recipient"
              },
              "functionSelector": "d331bef7",
              "id": 1777,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 1626,
                  "modifierName": {
                    "id": 1625,
                    "name": "nonReentrant",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3381,
                    "src": "8607:12:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "8607:12:23"
                }
              ],
              "name": "withdraw",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 1624,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "8598:8:23"
              },
              "parameters": {
                "id": 1623,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1616,
                    "mutability": "mutable",
                    "name": "shares",
                    "nodeType": "VariableDeclaration",
                    "scope": 1777,
                    "src": "8488:14:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1615,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8488:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1618,
                    "mutability": "mutable",
                    "name": "amount0Min",
                    "nodeType": "VariableDeclaration",
                    "scope": 1777,
                    "src": "8513:18:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1617,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8513:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1620,
                    "mutability": "mutable",
                    "name": "amount1Min",
                    "nodeType": "VariableDeclaration",
                    "scope": 1777,
                    "src": "8542:18:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1619,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8542:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1622,
                    "mutability": "mutable",
                    "name": "to",
                    "nodeType": "VariableDeclaration",
                    "scope": 1777,
                    "src": "8571:10:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1621,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8571:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8477:111:23"
              },
              "returnParameters": {
                "id": 1631,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1628,
                    "mutability": "mutable",
                    "name": "amount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 1777,
                    "src": "8629:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1627,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8629:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1630,
                    "mutability": "mutable",
                    "name": "amount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1777,
                    "src": "8646:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1629,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8646:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "8628:34:23"
              },
              "scope": 2922,
              "src": "8460:1507:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 1860,
                "nodeType": "Block",
                "src": "10243:550:23",
                "statements": [
                  {
                    "assignments": [
                      1794,
                      null,
                      null,
                      null,
                      null
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1794,
                        "mutability": "mutable",
                        "name": "totalLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1860,
                        "src": "10255:22:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1793,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "10255:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      null,
                      null,
                      null,
                      null
                    ],
                    "id": 1799,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 1796,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1780,
                          "src": "10299:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1797,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1782,
                          "src": "10310:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 1795,
                        "name": "_position",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2516,
                        "src": "10289:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "id": 1798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10289:31:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10254:66:23"
                  },
                  {
                    "assignments": [
                      1801
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1801,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1860,
                        "src": "10331:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1800,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10331:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1812,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 1810,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1786,
                          "src": "10391:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1807,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1784,
                              "src": "10379:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1804,
                                  "name": "totalLiquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1794,
                                  "src": "10359:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                ],
                                "id": 1803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10351:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1802,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10351:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10351:23:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4908,
                            "src": "10351:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10351:35:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4923,
                        "src": "10351:39:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10351:52:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10331:72:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1813,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1801,
                        "src": "10420:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10432:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10420:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1859,
                    "nodeType": "IfStatement",
                    "src": "10416:370:23",
                    "trueBody": {
                      "id": 1858,
                      "nodeType": "Block",
                      "src": "10435:351:23",
                      "statements": [
                        {
                          "assignments": [
                            1817,
                            1819,
                            1821,
                            1823
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1817,
                              "mutability": "mutable",
                              "name": "burned0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1858,
                              "src": "10451:15:23",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1816,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10451:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 1819,
                              "mutability": "mutable",
                              "name": "burned1",
                              "nodeType": "VariableDeclaration",
                              "scope": 1858,
                              "src": "10468:15:23",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1818,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10468:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 1821,
                              "mutability": "mutable",
                              "name": "fees0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1858,
                              "src": "10485:13:23",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1820,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10485:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 1823,
                              "mutability": "mutable",
                              "name": "fees1",
                              "nodeType": "VariableDeclaration",
                              "scope": 1858,
                              "src": "10500:13:23",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1822,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10500:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1831,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 1825,
                                "name": "tickLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1780,
                                "src": "10550:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1826,
                                "name": "tickUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1782,
                                "src": "10561:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1828,
                                    "name": "liquidity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1801,
                                    "src": "10583:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1827,
                                  "name": "_toUint128",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2611,
                                  "src": "10572:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                                    "typeString": "function (uint256) pure returns (uint128)"
                                  }
                                },
                                "id": 1829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10572:21:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "id": 1824,
                              "name": "_burnAndCollect",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2289,
                              "src": "10534:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (int24,int24,uint128) returns (uint256,uint256,uint256,uint256)"
                              }
                            },
                            "id": 1830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10534:60:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256,uint256,uint256)"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10450:144:23"
                        },
                        {
                          "expression": {
                            "id": 1843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1832,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1789,
                              "src": "10645:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1840,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1786,
                                      "src": "10689:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1837,
                                          "name": "shares",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1784,
                                          "src": "10677:6:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1835,
                                          "name": "fees0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1821,
                                          "src": "10667:5:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1836,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4908,
                                        "src": "10667:9:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1838,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10667:17:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4923,
                                    "src": "10667:21:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10667:34:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1833,
                                  "name": "burned0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1817,
                                  "src": "10655:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4878,
                                "src": "10655:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10655:47:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10645:57:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1844,
                          "nodeType": "ExpressionStatement",
                          "src": "10645:57:23"
                        },
                        {
                          "expression": {
                            "id": 1856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1845,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1791,
                              "src": "10717:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1853,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1786,
                                      "src": "10761:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1850,
                                          "name": "shares",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1784,
                                          "src": "10749:6:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1848,
                                          "name": "fees1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1823,
                                          "src": "10739:5:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1849,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4908,
                                        "src": "10739:9:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1851,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10739:17:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1852,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4923,
                                    "src": "10739:21:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10739:34:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1846,
                                  "name": "burned1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1819,
                                  "src": "10727:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4878,
                                "src": "10727:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10727:47:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10717:57:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1857,
                          "nodeType": "ExpressionStatement",
                          "src": "10717:57:23"
                        }
                      ]
                    }
                  }
                ]
              },
              "documentation": {
                "id": 1778,
                "nodeType": "StructuredDocumentation",
                "src": "9975:67:23",
                "text": "@dev Withdraws share of liquidity in a range from Uniswap pool."
              },
              "id": 1861,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_burnLiquidityShare",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1787,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1780,
                    "mutability": "mutable",
                    "name": "tickLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 1861,
                    "src": "10087:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1779,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "10087:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1782,
                    "mutability": "mutable",
                    "name": "tickUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 1861,
                    "src": "10113:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1781,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "10113:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1784,
                    "mutability": "mutable",
                    "name": "shares",
                    "nodeType": "VariableDeclaration",
                    "scope": 1861,
                    "src": "10139:14:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1783,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10139:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1786,
                    "mutability": "mutable",
                    "name": "totalSupply",
                    "nodeType": "VariableDeclaration",
                    "scope": 1861,
                    "src": "10164:19:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1785,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10164:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10076:114:23"
              },
              "returnParameters": {
                "id": 1792,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1789,
                    "mutability": "mutable",
                    "name": "amount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 1861,
                    "src": "10209:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1788,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10209:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1791,
                    "mutability": "mutable",
                    "name": "amount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1861,
                    "src": "10226:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1790,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10226:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10208:34:23"
              },
              "scope": 2922,
              "src": "10048:745:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2092,
                "nodeType": "Block",
                "src": "11468:2272:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1884,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11487:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11487:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1886,
                            "name": "SharpeKeeper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1191,
                            "src": "11501:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11487:26:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5368617270654b6565706572",
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11515:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9ec166ee064ffdff517adcaaf003b904dc6dfd959c4a137c08896a115a02c7bc",
                            "typeString": "literal_string \"SharpeKeeper\""
                          },
                          "value": "SharpeKeeper"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_9ec166ee064ffdff517adcaaf003b904dc6dfd959c4a137c08896a115a02c7bc",
                            "typeString": "literal_string \"SharpeKeeper\""
                          }
                        ],
                        "id": 1883,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "11479:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11479:51:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1890,
                    "nodeType": "ExpressionStatement",
                    "src": "11479:51:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1892,
                          "name": "_baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "11553:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1893,
                          "name": "_baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1870,
                          "src": "11565:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 1891,
                        "name": "_checkRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2146,
                        "src": "11541:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$__$",
                          "typeString": "function (int24,int24) view"
                        }
                      },
                      "id": 1894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11541:35:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1895,
                    "nodeType": "ExpressionStatement",
                    "src": "11541:35:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1897,
                          "name": "_bidLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1872,
                          "src": "11599:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1898,
                          "name": "_bidUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1874,
                          "src": "11610:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 1896,
                        "name": "_checkRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2146,
                        "src": "11587:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$__$",
                          "typeString": "function (int24,int24) view"
                        }
                      },
                      "id": 1899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11587:33:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1900,
                    "nodeType": "ExpressionStatement",
                    "src": "11587:33:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1902,
                          "name": "_askLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1876,
                          "src": "11643:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1903,
                          "name": "_askUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1878,
                          "src": "11654:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 1901,
                        "name": "_checkRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2146,
                        "src": "11631:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$__$",
                          "typeString": "function (int24,int24) view"
                        }
                      },
                      "id": 1904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11631:33:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1905,
                    "nodeType": "ExpressionStatement",
                    "src": "11631:33:23"
                  },
                  {
                    "assignments": [
                      null,
                      1907,
                      null,
                      null,
                      null,
                      null,
                      null
                    ],
                    "declarations": [
                      null,
                      {
                        "constant": false,
                        "id": 1907,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 2092,
                        "src": "11680:10:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1906,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "11680:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      null,
                      null,
                      null,
                      null,
                      null
                    ],
                    "id": 1911,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1908,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "11704:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "slot0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3255,
                        "src": "11704:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                          "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                        }
                      },
                      "id": 1910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11704:12:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11677:39:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 1915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1913,
                            "name": "_bidUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1874,
                            "src": "11735:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1914,
                            "name": "tick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1907,
                            "src": "11748:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "11735:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "6269645570706572",
                          "id": 1916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11754:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_47d6159d9ec3ed75f3ee90e5219273c430980de7e46ca022e6a5f3d48f0639d5",
                            "typeString": "literal_string \"bidUpper\""
                          },
                          "value": "bidUpper"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_47d6159d9ec3ed75f3ee90e5219273c430980de7e46ca022e6a5f3d48f0639d5",
                            "typeString": "literal_string \"bidUpper\""
                          }
                        ],
                        "id": 1912,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "11727:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11727:38:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1918,
                    "nodeType": "ExpressionStatement",
                    "src": "11727:38:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 1922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1920,
                            "name": "_askLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1876,
                            "src": "11784:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1921,
                            "name": "tick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1907,
                            "src": "11796:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "11784:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "61736b4c6f776572",
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11802:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_bf382eb48ee7682ce64ea5965ffc123c796d68167a98fff969bdabfb56765e53",
                            "typeString": "literal_string \"askLower\""
                          },
                          "value": "askLower"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_bf382eb48ee7682ce64ea5965ffc123c796d68167a98fff969bdabfb56765e53",
                            "typeString": "literal_string \"askLower\""
                          }
                        ],
                        "id": 1919,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "11776:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11776:37:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1925,
                    "nodeType": "ExpressionStatement",
                    "src": "11776:37:23"
                  },
                  {
                    "id": 1952,
                    "nodeType": "Block",
                    "src": "11935:312:23",
                    "statements": [
                      {
                        "assignments": [
                          1927,
                          null,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1927,
                            "mutability": "mutable",
                            "name": "baseLiquidity",
                            "nodeType": "VariableDeclaration",
                            "scope": 1952,
                            "src": "11951:21:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 1926,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "11951:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          null
                        ],
                        "id": 1932,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1929,
                              "name": "baseLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1197,
                              "src": "11994:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1930,
                              "name": "baseUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1199,
                              "src": "12005:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "id": 1928,
                            "name": "_position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2516,
                            "src": "11984:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                              "typeString": "function (int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                            }
                          },
                          "id": 1931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11984:31:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                            "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11950:65:23"
                      },
                      {
                        "assignments": [
                          1934,
                          null,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1934,
                            "mutability": "mutable",
                            "name": "limitLiquidity",
                            "nodeType": "VariableDeclaration",
                            "scope": 1952,
                            "src": "12031:22:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 1933,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "12031:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          null
                        ],
                        "id": 1939,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1936,
                              "name": "limitLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "12075:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1937,
                              "name": "limitUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "12087:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "id": 1935,
                            "name": "_position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2516,
                            "src": "12065:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                              "typeString": "function (int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                            }
                          },
                          "id": 1938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12065:33:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                            "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12030:68:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1941,
                              "name": "baseLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1197,
                              "src": "12129:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1942,
                              "name": "baseUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1199,
                              "src": "12140:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1943,
                              "name": "baseLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1927,
                              "src": "12151:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1940,
                            "name": "_burnAndCollect",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2289,
                            "src": "12113:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (int24,int24,uint128) returns (uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12113:52:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256,uint256)"
                          }
                        },
                        "id": 1945,
                        "nodeType": "ExpressionStatement",
                        "src": "12113:52:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1947,
                              "name": "limitLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "12196:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1948,
                              "name": "limitUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "12208:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1949,
                              "name": "limitLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1934,
                              "src": "12220:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1946,
                            "name": "_burnAndCollect",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2289,
                            "src": "12180:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (int24,int24,uint128) returns (uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12180:55:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256,uint256)"
                          }
                        },
                        "id": 1951,
                        "nodeType": "ExpressionStatement",
                        "src": "12180:55:23"
                      }
                    ]
                  },
                  {
                    "assignments": [
                      1954
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1954,
                        "mutability": "mutable",
                        "name": "balance0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2092,
                        "src": "12315:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1953,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12315:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1957,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1955,
                        "name": "getBalance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2462,
                        "src": "12334:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12334:13:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12315:32:23"
                  },
                  {
                    "assignments": [
                      1959
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1959,
                        "mutability": "mutable",
                        "name": "balance1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2092,
                        "src": "12358:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1958,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12358:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1962,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1960,
                        "name": "getBalance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "12377:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12377:13:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12358:32:23"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 1964,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1907,
                          "src": "12415:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1965,
                          "name": "balance0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "12421:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1966,
                          "name": "balance1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "12431:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1967,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3467,
                            "src": "12441:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12441:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1963,
                        "name": "Snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "12406:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_int24_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (int24,uint256,uint256,uint256)"
                        }
                      },
                      "id": 1969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12406:49:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1970,
                    "nodeType": "EmitStatement",
                    "src": "12401:54:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 1973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1971,
                        "name": "swapAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "12472:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12486:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "12472:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2006,
                    "nodeType": "IfStatement",
                    "src": "12468:332:23",
                    "trueBody": {
                      "id": 2005,
                      "nodeType": "Block",
                      "src": "12489:311:23",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1979,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "12540:4:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                      "typeString": "contract SharpeAI"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                      "typeString": "contract SharpeAI"
                                    }
                                  ],
                                  "id": 1978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12532:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1977,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12532:7:23",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12532:13:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 1983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1981,
                                  "name": "swapAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1864,
                                  "src": "12564:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12577:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "12564:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  "id": 1986,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1984,
                                    "name": "swapAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1864,
                                    "src": "12597:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1985,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12610:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "12597:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "id": 1989,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "12627:11:23",
                                  "subExpression": {
                                    "id": 1988,
                                    "name": "swapAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1864,
                                    "src": "12628:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "id": 1990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "12597:41:23",
                                "trueExpression": {
                                  "id": 1987,
                                  "name": "swapAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1864,
                                  "src": "12614:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "id": 1991,
                                "name": "sqrtPriceLimitX96",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1866,
                                "src": "12657:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "hexValue": "",
                                "id": 1992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12693:2:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1974,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1177,
                                "src": "12504:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 1976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "swap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2999,
                              "src": "12504:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
                                "typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
                              }
                            },
                            "id": 1993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12504:206:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                              "typeString": "tuple(int256,int256)"
                            }
                          },
                          "id": 1994,
                          "nodeType": "ExpressionStatement",
                          "src": "12504:206:23"
                        },
                        {
                          "expression": {
                            "id": 1998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1995,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1954,
                              "src": "12725:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1996,
                                "name": "getBalance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2462,
                                "src": "12736:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12736:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12725:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1999,
                          "nodeType": "ExpressionStatement",
                          "src": "12725:24:23"
                        },
                        {
                          "expression": {
                            "id": 2003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2000,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "12764:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2001,
                                "name": "getBalance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2480,
                                "src": "12775:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12775:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12764:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2004,
                          "nodeType": "ExpressionStatement",
                          "src": "12764:24:23"
                        }
                      ]
                    }
                  },
                  {
                    "assignments": [
                      2008
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2008,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 2092,
                        "src": "12852:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2007,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "12852:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2015,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 2010,
                          "name": "_baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "12893:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2011,
                          "name": "_baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1870,
                          "src": "12905:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2012,
                          "name": "balance0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "12917:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2013,
                          "name": "balance1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "12927:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2009,
                        "name": "_liquidityForAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2587,
                        "src": "12872:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (int24,int24,uint256,uint256) view returns (uint128)"
                        }
                      },
                      "id": 2014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12872:64:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12852:84:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2017,
                          "name": "_baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "12962:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2018,
                          "name": "_baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1870,
                          "src": "12974:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2019,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2008,
                          "src": "12986:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 2016,
                        "name": "_mintLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2318,
                        "src": "12947:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$__$",
                          "typeString": "function (int24,int24,uint128)"
                        }
                      },
                      "id": 2020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12947:49:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2021,
                    "nodeType": "ExpressionStatement",
                    "src": "12947:49:23"
                  },
                  {
                    "expression": {
                      "id": 2028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "components": [
                          {
                            "id": 2022,
                            "name": "baseLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1197,
                            "src": "13008:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 2023,
                            "name": "baseUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "13019:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "id": 2024,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "TupleExpression",
                        "src": "13007:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                          "typeString": "tuple(int24,int24)"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "components": [
                          {
                            "id": 2025,
                            "name": "_baseLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1868,
                            "src": "13033:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 2026,
                            "name": "_baseUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1870,
                            "src": "13045:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "id": 2027,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "13032:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                          "typeString": "tuple(int24,int24)"
                        }
                      },
                      "src": "13007:49:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2029,
                    "nodeType": "ExpressionStatement",
                    "src": "13007:49:23"
                  },
                  {
                    "expression": {
                      "id": 2033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2030,
                        "name": "balance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1954,
                        "src": "13069:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2031,
                          "name": "getBalance0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2462,
                          "src": "13080:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 2032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13080:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13069:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2034,
                    "nodeType": "ExpressionStatement",
                    "src": "13069:24:23"
                  },
                  {
                    "expression": {
                      "id": 2038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2035,
                        "name": "balance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1959,
                        "src": "13104:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2036,
                          "name": "getBalance1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2480,
                          "src": "13115:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 2037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13115:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13104:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2039,
                    "nodeType": "ExpressionStatement",
                    "src": "13104:24:23"
                  },
                  {
                    "assignments": [
                      2041
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2041,
                        "mutability": "mutable",
                        "name": "bidLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 2092,
                        "src": "13220:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2040,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "13220:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2048,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 2043,
                          "name": "_bidLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1872,
                          "src": "13264:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2044,
                          "name": "_bidUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1874,
                          "src": "13275:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2045,
                          "name": "balance0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "13286:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2046,
                          "name": "balance1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "13296:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2042,
                        "name": "_liquidityForAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2587,
                        "src": "13243:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (int24,int24,uint256,uint256) view returns (uint128)"
                        }
                      },
                      "id": 2047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13243:62:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13220:85:23"
                  },
                  {
                    "assignments": [
                      2050
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2050,
                        "mutability": "mutable",
                        "name": "askLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 2092,
                        "src": "13316:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2049,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "13316:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2057,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 2052,
                          "name": "_askLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1876,
                          "src": "13360:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2053,
                          "name": "_askUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1878,
                          "src": "13371:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2054,
                          "name": "balance0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "13382:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2055,
                          "name": "balance1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "13392:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2051,
                        "name": "_liquidityForAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2587,
                        "src": "13339:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (int24,int24,uint256,uint256) view returns (uint128)"
                        }
                      },
                      "id": 2056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13339:62:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13316:85:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2058,
                        "name": "bidLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "13416:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 2059,
                        "name": "askLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "13431:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "13416:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 2090,
                      "nodeType": "Block",
                      "src": "13592:141:23",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2077,
                                "name": "_askLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1876,
                                "src": "13622:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 2078,
                                "name": "_askUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1878,
                                "src": "13633:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 2079,
                                "name": "askLiquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2050,
                                "src": "13644:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "id": 2076,
                              "name": "_mintLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2318,
                              "src": "13607:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$__$",
                                "typeString": "function (int24,int24,uint128)"
                              }
                            },
                            "id": 2080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13607:50:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2081,
                          "nodeType": "ExpressionStatement",
                          "src": "13607:50:23"
                        },
                        {
                          "expression": {
                            "id": 2088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 2082,
                                  "name": "limitLower",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1201,
                                  "src": "13673:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                {
                                  "id": 2083,
                                  "name": "limitUpper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "13685:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 2084,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "13672:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                                "typeString": "tuple(int24,int24)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "components": [
                                {
                                  "id": 2085,
                                  "name": "_askLower",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1876,
                                  "src": "13700:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                {
                                  "id": 2086,
                                  "name": "_askUpper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1878,
                                  "src": "13711:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 2087,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13699:22:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                                "typeString": "tuple(int24,int24)"
                              }
                            },
                            "src": "13672:49:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2089,
                          "nodeType": "ExpressionStatement",
                          "src": "13672:49:23"
                        }
                      ]
                    },
                    "id": 2091,
                    "nodeType": "IfStatement",
                    "src": "13412:321:23",
                    "trueBody": {
                      "id": 2075,
                      "nodeType": "Block",
                      "src": "13445:141:23",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2062,
                                "name": "_bidLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1872,
                                "src": "13475:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 2063,
                                "name": "_bidUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1874,
                                "src": "13486:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 2064,
                                "name": "bidLiquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2041,
                                "src": "13497:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "id": 2061,
                              "name": "_mintLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2318,
                              "src": "13460:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$__$",
                                "typeString": "function (int24,int24,uint128)"
                              }
                            },
                            "id": 2065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13460:50:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2066,
                          "nodeType": "ExpressionStatement",
                          "src": "13460:50:23"
                        },
                        {
                          "expression": {
                            "id": 2073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 2067,
                                  "name": "limitLower",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1201,
                                  "src": "13526:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                {
                                  "id": 2068,
                                  "name": "limitUpper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "13538:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 2069,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "13525:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                                "typeString": "tuple(int24,int24)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "components": [
                                {
                                  "id": 2070,
                                  "name": "_bidLower",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1872,
                                  "src": "13553:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                {
                                  "id": 2071,
                                  "name": "_bidUpper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1874,
                                  "src": "13564:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                }
                              ],
                              "id": 2072,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13552:22:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                                "typeString": "tuple(int24,int24)"
                              }
                            },
                            "src": "13525:49:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2074,
                          "nodeType": "ExpressionStatement",
                          "src": "13525:49:23"
                        }
                      ]
                    }
                  }
                ]
              },
              "documentation": {
                "id": 1862,
                "nodeType": "StructuredDocumentation",
                "src": "10801:392:23",
                "text": " @notice Updates vault's positions. Can only be called by the strategy.\n @dev Two orders are placed - a base order and a limit order. The base\n order is placed first with as much liquidity as possible. This order\n should use up all of one token, leaving only the other one. This excess\n amount is then placed as a single-sided bid or ask order."
              },
              "functionSelector": "87e5e083",
              "id": 2093,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 1881,
                  "modifierName": {
                    "id": 1880,
                    "name": "nonReentrant",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3381,
                    "src": "11456:12:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "11456:12:23"
                }
              ],
              "name": "rebalance",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1879,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1864,
                    "mutability": "mutable",
                    "name": "swapAmount",
                    "nodeType": "VariableDeclaration",
                    "scope": 2093,
                    "src": "11228:17:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "typeName": {
                      "id": 1863,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11228:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1866,
                    "mutability": "mutable",
                    "name": "sqrtPriceLimitX96",
                    "nodeType": "VariableDeclaration",
                    "scope": 2093,
                    "src": "11256:25:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    },
                    "typeName": {
                      "id": 1865,
                      "name": "uint160",
                      "nodeType": "ElementaryTypeName",
                      "src": "11256:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1868,
                    "mutability": "mutable",
                    "name": "_baseLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2093,
                    "src": "11292:16:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1867,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "11292:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1870,
                    "mutability": "mutable",
                    "name": "_baseUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2093,
                    "src": "11319:16:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1869,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "11319:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1872,
                    "mutability": "mutable",
                    "name": "_bidLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2093,
                    "src": "11346:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1871,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "11346:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1874,
                    "mutability": "mutable",
                    "name": "_bidUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2093,
                    "src": "11372:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1873,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "11372:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1876,
                    "mutability": "mutable",
                    "name": "_askLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2093,
                    "src": "11398:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1875,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "11398:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1878,
                    "mutability": "mutable",
                    "name": "_askUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2093,
                    "src": "11424:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 1877,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "11424:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "11217:229:23"
              },
              "returnParameters": {
                "id": 1882,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "11468:0:23"
              },
              "scope": 2922,
              "src": "11199:2541:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2145,
                "nodeType": "Block",
                "src": "13821:412:23",
                "statements": [
                  {
                    "assignments": [
                      2101
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2101,
                        "mutability": "mutable",
                        "name": "_tickSpacing",
                        "nodeType": "VariableDeclaration",
                        "scope": 2145,
                        "src": "13832:18:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 2100,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "13832:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2103,
                    "initialValue": {
                      "id": 2102,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "13853:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13832:32:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2105,
                            "name": "tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2095,
                            "src": "13883:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2106,
                            "name": "tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2097,
                            "src": "13895:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "13883:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "7469636b4c6f776572203c207469636b5570706572",
                          "id": 2108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13906:23:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1ee6ba4bc9dfde00a40d7971b955705720d4769a2c20ed3685538ff5c699cc81",
                            "typeString": "literal_string \"tickLower < tickUpper\""
                          },
                          "value": "tickLower < tickUpper"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1ee6ba4bc9dfde00a40d7971b955705720d4769a2c20ed3685538ff5c699cc81",
                            "typeString": "literal_string \"tickLower < tickUpper\""
                          }
                        ],
                        "id": 2104,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "13875:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13875:55:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2110,
                    "nodeType": "ExpressionStatement",
                    "src": "13875:55:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2112,
                            "name": "tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2095,
                            "src": "13949:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 2113,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "13962:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$1088_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "MIN_TICK",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 571,
                            "src": "13962:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "13949:30:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "7469636b4c6f77657220746f6f206c6f77",
                          "id": 2116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13981:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c7e5215e9236c248c269a1e30abc87607c099c2533f496f35f675ac994361979",
                            "typeString": "literal_string \"tickLower too low\""
                          },
                          "value": "tickLower too low"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c7e5215e9236c248c269a1e30abc87607c099c2533f496f35f675ac994361979",
                            "typeString": "literal_string \"tickLower too low\""
                          }
                        ],
                        "id": 2111,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "13941:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13941:60:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2118,
                    "nodeType": "ExpressionStatement",
                    "src": "13941:60:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2120,
                            "name": "tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2097,
                            "src": "14020:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 2121,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "14033:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$1088_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "MAX_TICK",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 576,
                            "src": "14033:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "14020:30:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "7469636b557070657220746f6f2068696768",
                          "id": 2124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14052:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_cbf41dddac27bd038006364d94c710a987ab101b411ac3380bf559fe4bee9692",
                            "typeString": "literal_string \"tickUpper too high\""
                          },
                          "value": "tickUpper too high"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_cbf41dddac27bd038006364d94c710a987ab101b411ac3380bf559fe4bee9692",
                            "typeString": "literal_string \"tickUpper too high\""
                          }
                        ],
                        "id": 2119,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "14012:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14012:61:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2126,
                    "nodeType": "ExpressionStatement",
                    "src": "14012:61:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 2132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 2130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2128,
                              "name": "tickLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2095,
                              "src": "14092:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "id": 2129,
                              "name": "_tickSpacing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2101,
                              "src": "14104:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "14092:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14120:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14092:29:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "7469636b4c6f7765722025207469636b53706163696e67",
                          "id": 2133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14123:25:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_340d48e5d6212412e670fd49421bae23c293aaa4e22a7ce9a56dc801a3390fc8",
                            "typeString": "literal_string \"tickLower % tickSpacing\""
                          },
                          "value": "tickLower % tickSpacing"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_340d48e5d6212412e670fd49421bae23c293aaa4e22a7ce9a56dc801a3390fc8",
                            "typeString": "literal_string \"tickLower % tickSpacing\""
                          }
                        ],
                        "id": 2127,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "14084:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14084:65:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2135,
                    "nodeType": "ExpressionStatement",
                    "src": "14084:65:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 2139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2137,
                              "name": "tickUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2097,
                              "src": "14168:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "id": 2138,
                              "name": "_tickSpacing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2101,
                              "src": "14180:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "14168:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14196:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14168:29:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "7469636b55707065722025207469636b53706163696e67",
                          "id": 2142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14199:25:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3c6ca85372617d539740da5304d313adf563e1119a44b290a3d8dcbe5d416a01",
                            "typeString": "literal_string \"tickUpper % tickSpacing\""
                          },
                          "value": "tickUpper % tickSpacing"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_3c6ca85372617d539740da5304d313adf563e1119a44b290a3d8dcbe5d416a01",
                            "typeString": "literal_string \"tickUpper % tickSpacing\""
                          }
                        ],
                        "id": 2136,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "14160:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14160:65:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2144,
                    "nodeType": "ExpressionStatement",
                    "src": "14160:65:23"
                  }
                ]
              },
              "id": 2146,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_checkRange",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2098,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2095,
                    "mutability": "mutable",
                    "name": "tickLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2146,
                    "src": "13773:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2094,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "13773:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2097,
                    "mutability": "mutable",
                    "name": "tickUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2146,
                    "src": "13790:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2096,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "13790:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "13772:34:23"
              },
              "returnParameters": {
                "id": 2099,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "13821:0:23"
              },
              "scope": 2922,
              "src": "13752:481:23",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2288,
                "nodeType": "Block",
                "src": "14629:1250:23",
                "statements": [
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 2166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2164,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "14644:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14656:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "14644:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2179,
                    "nodeType": "IfStatement",
                    "src": "14640:109:23",
                    "trueBody": {
                      "id": 2178,
                      "nodeType": "Block",
                      "src": "14659:90:23",
                      "statements": [
                        {
                          "expression": {
                            "id": 2176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 2167,
                                  "name": "burned0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2156,
                                  "src": "14675:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2168,
                                  "name": "burned1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2158,
                                  "src": "14684:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2169,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "14674:18:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                "typeString": "tuple(uint256,uint256)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 2172,
                                  "name": "tickLower",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2149,
                                  "src": "14705:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                {
                                  "id": 2173,
                                  "name": "tickUpper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2151,
                                  "src": "14716:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                {
                                  "id": 2174,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2153,
                                  "src": "14727:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  },
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                ],
                                "expression": {
                                  "id": 2170,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1177,
                                  "src": "14695:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                                    "typeString": "contract IUniswapV3Pool"
                                  }
                                },
                                "id": 2171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "burn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2981,
                                "src": "14695:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                                  "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                                }
                              },
                              "id": 2175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14695:42:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                "typeString": "tuple(uint256,uint256)"
                              }
                            },
                            "src": "14674:63:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2177,
                          "nodeType": "ExpressionStatement",
                          "src": "14674:63:23"
                        }
                      ]
                    }
                  },
                  {
                    "assignments": [
                      2181,
                      2183
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2181,
                        "mutability": "mutable",
                        "name": "collect0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2288,
                        "src": "14820:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2180,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14820:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2183,
                        "mutability": "mutable",
                        "name": "collect1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2288,
                        "src": "14838:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2182,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14838:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2203,
                    "initialValue": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2188,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "14910:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                "typeString": "contract SharpeAI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                "typeString": "contract SharpeAI"
                              }
                            ],
                            "id": 2187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14902:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2186,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14902:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14902:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2190,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2149,
                          "src": "14934:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2191,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2151,
                          "src": "14962:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14995:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 2193,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14995:7:23",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                }
                              ],
                              "id": 2192,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "14990:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14990:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint128",
                              "typeString": "type(uint128)"
                            }
                          },
                          "id": 2196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "14990:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15031:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 2198,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15031:7:23",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                }
                              ],
                              "id": 2197,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "15026:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15026:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint128",
                              "typeString": "type(uint128)"
                            }
                          },
                          "id": 2201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "15026:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 2184,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "14871:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 2185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collect",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2967,
                        "src": "14871:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint128_$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function (address,int24,int24,uint128,uint128) external returns (uint128,uint128)"
                        }
                      },
                      "id": 2202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14871:187:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14819:239:23"
                  },
                  {
                    "expression": {
                      "id": 2209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2204,
                        "name": "feesToVault0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2160,
                        "src": "15071:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 2207,
                            "name": "burned0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2156,
                            "src": "15099:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2205,
                            "name": "collect0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2181,
                            "src": "15086:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4893,
                          "src": "15086:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15086:21:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15071:36:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2210,
                    "nodeType": "ExpressionStatement",
                    "src": "15071:36:23"
                  },
                  {
                    "expression": {
                      "id": 2216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2211,
                        "name": "feesToVault1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2162,
                        "src": "15118:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 2214,
                            "name": "burned1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2158,
                            "src": "15146:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2212,
                            "name": "collect1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2183,
                            "src": "15133:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4893,
                          "src": "15133:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15133:21:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15118:36:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2217,
                    "nodeType": "ExpressionStatement",
                    "src": "15118:36:23"
                  },
                  {
                    "assignments": [
                      2219
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2219,
                        "mutability": "mutable",
                        "name": "feesToProtocol0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2288,
                        "src": "15165:23:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15165:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2220,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15165:23:23"
                  },
                  {
                    "assignments": [
                      2222
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2222,
                        "mutability": "mutable",
                        "name": "feesToProtocol1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2288,
                        "src": "15199:23:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15199:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2223,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15199:23:23"
                  },
                  {
                    "assignments": [
                      2225
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2225,
                        "mutability": "mutable",
                        "name": "_protocolFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 2288,
                        "src": "15276:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2224,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15276:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2227,
                    "initialValue": {
                      "id": 2226,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1187,
                      "src": "15299:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15276:34:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2228,
                        "name": "_protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "15325:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15340:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "15325:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2280,
                    "nodeType": "IfStatement",
                    "src": "15321:462:23",
                    "trueBody": {
                      "id": 2279,
                      "nodeType": "Block",
                      "src": "15343:440:23",
                      "statements": [
                        {
                          "expression": {
                            "id": 2239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2231,
                              "name": "feesToProtocol0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2219,
                              "src": "15358:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "316536",
                                  "id": 2237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15411:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2234,
                                      "name": "_protocolFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2225,
                                      "src": "15393:12:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2232,
                                      "name": "feesToVault0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2160,
                                      "src": "15376:12:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4908,
                                    "src": "15376:16:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2235,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15376:30:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4923,
                                "src": "15376:34:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15376:39:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15358:57:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2240,
                          "nodeType": "ExpressionStatement",
                          "src": "15358:57:23"
                        },
                        {
                          "expression": {
                            "id": 2249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2241,
                              "name": "feesToProtocol1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "15430:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "316536",
                                  "id": 2247,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15483:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1e6"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2244,
                                      "name": "_protocolFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2225,
                                      "src": "15465:12:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2242,
                                      "name": "feesToVault1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2162,
                                      "src": "15448:12:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2243,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4908,
                                    "src": "15448:16:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15448:30:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4923,
                                "src": "15448:34:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15448:39:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15430:57:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2250,
                          "nodeType": "ExpressionStatement",
                          "src": "15430:57:23"
                        },
                        {
                          "expression": {
                            "id": 2256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2251,
                              "name": "feesToVault0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2160,
                              "src": "15502:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 2254,
                                  "name": "feesToProtocol0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2219,
                                  "src": "15534:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2252,
                                  "name": "feesToVault0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2160,
                                  "src": "15517:12:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4893,
                                "src": "15517:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15517:33:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15502:48:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2257,
                          "nodeType": "ExpressionStatement",
                          "src": "15502:48:23"
                        },
                        {
                          "expression": {
                            "id": 2263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2258,
                              "name": "feesToVault1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2162,
                              "src": "15565:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 2261,
                                  "name": "feesToProtocol1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2222,
                                  "src": "15597:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2259,
                                  "name": "feesToVault1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2162,
                                  "src": "15580:12:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4893,
                                "src": "15580:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15580:33:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15565:48:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2264,
                          "nodeType": "ExpressionStatement",
                          "src": "15565:48:23"
                        },
                        {
                          "expression": {
                            "id": 2270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2265,
                              "name": "accruedProtocolFees0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1205,
                              "src": "15628:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 2268,
                                  "name": "feesToProtocol0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2219,
                                  "src": "15676:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2266,
                                  "name": "accruedProtocolFees0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1205,
                                  "src": "15651:20:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4878,
                                "src": "15651:24:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15651:41:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15628:64:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2271,
                          "nodeType": "ExpressionStatement",
                          "src": "15628:64:23"
                        },
                        {
                          "expression": {
                            "id": 2277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2272,
                              "name": "accruedProtocolFees1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "15707:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 2275,
                                  "name": "feesToProtocol1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2222,
                                  "src": "15755:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2273,
                                  "name": "accruedProtocolFees1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1207,
                                  "src": "15730:20:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4878,
                                "src": "15730:24:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15730:41:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15707:64:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2278,
                          "nodeType": "ExpressionStatement",
                          "src": "15707:64:23"
                        }
                      ]
                    }
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 2282,
                          "name": "feesToVault0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2160,
                          "src": "15810:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2283,
                          "name": "feesToVault1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2162,
                          "src": "15824:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2284,
                          "name": "feesToProtocol0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2219,
                          "src": "15838:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2285,
                          "name": "feesToProtocol1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2222,
                          "src": "15855:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2281,
                        "name": "CollectFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "15798:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 2286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15798:73:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2287,
                    "nodeType": "EmitStatement",
                    "src": "15793:78:23"
                  }
                ]
              },
              "documentation": {
                "id": 2147,
                "nodeType": "StructuredDocumentation",
                "src": "14241:88:23",
                "text": "@dev Withdraws liquidity from a range and collects all fees in the\n process."
              },
              "id": 2289,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_burnAndCollect",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2154,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2149,
                    "mutability": "mutable",
                    "name": "tickLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2289,
                    "src": "14370:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2148,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "14370:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2151,
                    "mutability": "mutable",
                    "name": "tickUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2289,
                    "src": "14396:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2150,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "14396:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2153,
                    "mutability": "mutable",
                    "name": "liquidity",
                    "nodeType": "VariableDeclaration",
                    "scope": 2289,
                    "src": "14422:17:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 2152,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "14422:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "14359:87:23"
              },
              "returnParameters": {
                "id": 2163,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2156,
                    "mutability": "mutable",
                    "name": "burned0",
                    "nodeType": "VariableDeclaration",
                    "scope": 2289,
                    "src": "14497:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2155,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14497:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2158,
                    "mutability": "mutable",
                    "name": "burned1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2289,
                    "src": "14527:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2157,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14527:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2160,
                    "mutability": "mutable",
                    "name": "feesToVault0",
                    "nodeType": "VariableDeclaration",
                    "scope": 2289,
                    "src": "14557:20:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2159,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14557:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2162,
                    "mutability": "mutable",
                    "name": "feesToVault1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2289,
                    "src": "14592:20:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2161,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14592:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "14482:141:23"
              },
              "scope": 2922,
              "src": "14335:1544:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2317,
                "nodeType": "Block",
                "src": "16072:125:23",
                "statements": [
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 2301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2299,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2296,
                        "src": "16087:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16099:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "16087:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2316,
                    "nodeType": "IfStatement",
                    "src": "16083:107:23",
                    "trueBody": {
                      "id": 2315,
                      "nodeType": "Block",
                      "src": "16102:88:23",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2307,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "16135:4:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                      "typeString": "contract SharpeAI"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                      "typeString": "contract SharpeAI"
                                    }
                                  ],
                                  "id": 2306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "16127:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2305,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16127:7:23",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16127:13:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2309,
                                "name": "tickLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2292,
                                "src": "16142:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 2310,
                                "name": "tickUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2294,
                                "src": "16153:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 2311,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2296,
                                "src": "16164:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "hexValue": "",
                                "id": 2312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16175:2:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 2302,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1177,
                                "src": "16117:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 2304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2949,
                              "src": "16117:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,int24,int24,uint128,bytes memory) external returns (uint256,uint256)"
                              }
                            },
                            "id": 2313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16117:61:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "id": 2314,
                          "nodeType": "ExpressionStatement",
                          "src": "16117:61:23"
                        }
                      ]
                    }
                  }
                ]
              },
              "documentation": {
                "id": 2290,
                "nodeType": "StructuredDocumentation",
                "src": "15887:59:23",
                "text": "@dev Deposits liquidity in a range on the Uniswap pool."
              },
              "id": 2318,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_mintLiquidity",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2297,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2292,
                    "mutability": "mutable",
                    "name": "tickLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2318,
                    "src": "15986:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2291,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "15986:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2294,
                    "mutability": "mutable",
                    "name": "tickUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2318,
                    "src": "16012:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2293,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "16012:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2296,
                    "mutability": "mutable",
                    "name": "liquidity",
                    "nodeType": "VariableDeclaration",
                    "scope": 2318,
                    "src": "16038:17:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 2295,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "16038:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "15975:87:23"
              },
              "returnParameters": {
                "id": 2298,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "16072:0:23"
              },
              "scope": 2922,
              "src": "15952:245:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "baseFunctions": [
                5450
              ],
              "body": {
                "id": 2367,
                "nodeType": "Block",
                "src": "16512:353:23",
                "statements": [
                  {
                    "assignments": [
                      2328,
                      2330
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2328,
                        "mutability": "mutable",
                        "name": "baseAmount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2367,
                        "src": "16524:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2327,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16524:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2330,
                        "mutability": "mutable",
                        "name": "baseAmount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2367,
                        "src": "16545:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2329,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16545:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2335,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 2332,
                          "name": "baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "16587:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2333,
                          "name": "baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "16598:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 2331,
                        "name": "getPositionAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2444,
                        "src": "16568:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (int24,int24) view returns (uint256,uint256)"
                        }
                      },
                      "id": 2334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16568:40:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16523:85:23"
                  },
                  {
                    "assignments": [
                      2337,
                      2339
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2337,
                        "mutability": "mutable",
                        "name": "limitAmount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2367,
                        "src": "16620:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2336,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16620:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2339,
                        "mutability": "mutable",
                        "name": "limitAmount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2367,
                        "src": "16642:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2338,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16642:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2344,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 2341,
                          "name": "limitLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1201,
                          "src": "16698:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2342,
                          "name": "limitUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "16710:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 2340,
                        "name": "getPositionAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2444,
                        "src": "16679:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (int24,int24) view returns (uint256,uint256)"
                        }
                      },
                      "id": 2343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16679:42:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16619:102:23"
                  },
                  {
                    "expression": {
                      "id": 2354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2345,
                        "name": "total0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2323,
                        "src": "16732:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 2352,
                            "name": "limitAmount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2337,
                            "src": "16776:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2349,
                                "name": "baseAmount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2328,
                                "src": "16759:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2346,
                                  "name": "getBalance0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2462,
                                  "src": "16741:11:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16741:13:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4878,
                              "src": "16741:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16741:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4878,
                          "src": "16741:34:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16741:48:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16732:57:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2355,
                    "nodeType": "ExpressionStatement",
                    "src": "16732:57:23"
                  },
                  {
                    "expression": {
                      "id": 2365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2356,
                        "name": "total1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2325,
                        "src": "16800:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 2363,
                            "name": "limitAmount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2339,
                            "src": "16844:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2360,
                                "name": "baseAmount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2330,
                                "src": "16827:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2357,
                                  "name": "getBalance1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2480,
                                  "src": "16809:11:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16809:13:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4878,
                              "src": "16809:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16809:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4878,
                          "src": "16809:34:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16809:48:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16800:57:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2366,
                    "nodeType": "ExpressionStatement",
                    "src": "16800:57:23"
                  }
                ]
              },
              "documentation": {
                "id": 2319,
                "nodeType": "StructuredDocumentation",
                "src": "16205:212:23",
                "text": " @notice Calculates the vault's total holdings of token0 and token1 - in\n other words, how much of each token the vault would hold if it withdrew\n all its liquidity from Uniswap."
              },
              "functionSelector": "c4a7761e",
              "id": 2368,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getTotalAmounts",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2321,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "16462:8:23"
              },
              "parameters": {
                "id": 2320,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "16447:2:23"
              },
              "returnParameters": {
                "id": 2326,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2323,
                    "mutability": "mutable",
                    "name": "total0",
                    "nodeType": "VariableDeclaration",
                    "scope": 2368,
                    "src": "16480:14:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2322,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16480:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2325,
                    "mutability": "mutable",
                    "name": "total1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2368,
                    "src": "16496:14:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2324,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16496:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "16479:32:23"
              },
              "scope": 2922,
              "src": "16423:442:23",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 2443,
                "nodeType": "Block",
                "src": "17263:475:23",
                "statements": [
                  {
                    "assignments": [
                      2381,
                      null,
                      null,
                      2383,
                      2385
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2381,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 2443,
                        "src": "17275:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2380,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "17275:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      null,
                      null,
                      {
                        "constant": false,
                        "id": 2383,
                        "mutability": "mutable",
                        "name": "tokensOwed0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2443,
                        "src": "17298:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2382,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "17298:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2385,
                        "mutability": "mutable",
                        "name": "tokensOwed1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2443,
                        "src": "17319:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2384,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "17319:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2390,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 2387,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2371,
                          "src": "17365:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2388,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2373,
                          "src": "17376:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 2386,
                        "name": "_position",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2516,
                        "src": "17355:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "id": 2389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17355:31:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17274:112:23"
                  },
                  {
                    "expression": {
                      "id": 2399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "components": [
                          {
                            "id": 2391,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2376,
                            "src": "17398:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2392,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2378,
                            "src": "17407:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2393,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "TupleExpression",
                        "src": "17397:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 2395,
                            "name": "tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2371,
                            "src": "17439:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 2396,
                            "name": "tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2373,
                            "src": "17450:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 2397,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2381,
                            "src": "17461:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 2394,
                          "name": "_amountsForLiquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2551,
                          "src": "17418:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                            "typeString": "function (int24,int24,uint128) view returns (uint256,uint256)"
                          }
                        },
                        "id": 2398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17418:53:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "src": "17397:74:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2400,
                    "nodeType": "ExpressionStatement",
                    "src": "17397:74:23"
                  },
                  {
                    "assignments": [
                      2402
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2402,
                        "mutability": "mutable",
                        "name": "oneMinusFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 2443,
                        "src": "17519:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2401,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17519:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2410,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 2408,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1187,
                          "src": "17558:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "316536",
                              "id": 2405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17549:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17541:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 2403,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17541:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17541:12:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4893,
                        "src": "17541:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17541:29:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17519:51:23"
                  },
                  {
                    "expression": {
                      "id": 2425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2411,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "17581:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "316536",
                                "id": 2422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17645:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "value": "1e6"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2419,
                                    "name": "oneMinusFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2402,
                                    "src": "17628:11:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2416,
                                        "name": "tokensOwed0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2383,
                                        "src": "17611:11:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      ],
                                      "id": 2415,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "17603:7:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2414,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "17603:7:23",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2417,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17603:20:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4908,
                                  "src": "17603:24:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17603:37:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4923,
                              "src": "17603:41:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17603:46:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2412,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2376,
                            "src": "17591:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4878,
                          "src": "17591:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17591:59:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17581:69:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2426,
                    "nodeType": "ExpressionStatement",
                    "src": "17581:69:23"
                  },
                  {
                    "expression": {
                      "id": 2441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2427,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2378,
                        "src": "17661:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "316536",
                                "id": 2438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17725:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "value": "1e6"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2435,
                                    "name": "oneMinusFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2402,
                                    "src": "17708:11:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2432,
                                        "name": "tokensOwed1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2385,
                                        "src": "17691:11:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      ],
                                      "id": 2431,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "17683:7:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2430,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "17683:7:23",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2433,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17683:20:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4908,
                                  "src": "17683:24:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17683:37:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4923,
                              "src": "17683:41:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17683:46:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2428,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2378,
                            "src": "17671:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4878,
                          "src": "17671:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17671:59:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17661:69:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2442,
                    "nodeType": "ExpressionStatement",
                    "src": "17661:69:23"
                  }
                ]
              },
              "documentation": {
                "id": 2369,
                "nodeType": "StructuredDocumentation",
                "src": "16873:235:23",
                "text": " @notice Amounts of token0 and token1 held in vault's position. Includes\n owed fees but excludes the proportion of fees that will be paid to the\n protocol. Doesn't include fees accrued since last poke."
              },
              "functionSelector": "a91ef6eb",
              "id": 2444,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getPositionAmounts",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2374,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2371,
                    "mutability": "mutable",
                    "name": "tickLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2444,
                    "src": "17142:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2370,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "17142:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2373,
                    "mutability": "mutable",
                    "name": "tickUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2444,
                    "src": "17159:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2372,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "17159:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "17141:34:23"
              },
              "returnParameters": {
                "id": 2379,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2376,
                    "mutability": "mutable",
                    "name": "amount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 2444,
                    "src": "17224:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2375,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17224:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2378,
                    "mutability": "mutable",
                    "name": "amount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2444,
                    "src": "17241:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2377,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17241:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "17223:34:23"
              },
              "scope": 2922,
              "src": "17114:624:23",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 2461,
                "nodeType": "Block",
                "src": "17886:83:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2458,
                          "name": "accruedProtocolFees0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1205,
                          "src": "17940:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2454,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17929:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                    "typeString": "contract SharpeAI"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                    "typeString": "contract SharpeAI"
                                  }
                                ],
                                "id": 2453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17921:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2452,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17921:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17921:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2450,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "17904:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4048",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3987,
                            "src": "17904:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17904:31:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4893,
                        "src": "17904:35:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17904:57:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 2449,
                    "id": 2460,
                    "nodeType": "Return",
                    "src": "17897:64:23"
                  }
                ]
              },
              "documentation": {
                "id": 2445,
                "nodeType": "StructuredDocumentation",
                "src": "17746:81:23",
                "text": " @notice Balance of token0 in vault not used in any position."
              },
              "functionSelector": "629d9405",
              "id": 2462,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getBalance0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2446,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "17853:2:23"
              },
              "returnParameters": {
                "id": 2449,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2448,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2462,
                    "src": "17877:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2447,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17877:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "17876:9:23"
              },
              "scope": 2922,
              "src": "17833:136:23",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 2479,
                "nodeType": "Block",
                "src": "18117:83:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2476,
                          "name": "accruedProtocolFees1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1207,
                          "src": "18171:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2472,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "18160:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                    "typeString": "contract SharpeAI"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                    "typeString": "contract SharpeAI"
                                  }
                                ],
                                "id": 2471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18152:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2470,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18152:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18152:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2468,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "18135:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4048",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3987,
                            "src": "18135:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18135:31:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4893,
                        "src": "18135:35:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18135:57:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 2467,
                    "id": 2478,
                    "nodeType": "Return",
                    "src": "18128:64:23"
                  }
                ]
              },
              "documentation": {
                "id": 2463,
                "nodeType": "StructuredDocumentation",
                "src": "17977:81:23",
                "text": " @notice Balance of token1 in vault not used in any position."
              },
              "functionSelector": "41aec538",
              "id": 2480,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getBalance1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2464,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "18084:2:23"
              },
              "returnParameters": {
                "id": 2467,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2466,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2480,
                    "src": "18108:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2465,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18108:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "18107:9:23"
              },
              "scope": 2922,
              "src": "18064:136:23",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 2515,
                "nodeType": "Block",
                "src": "18496:152:23",
                "statements": [
                  {
                    "assignments": [
                      2499
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2499,
                        "mutability": "mutable",
                        "name": "positionKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 2515,
                        "src": "18517:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2498,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "18517:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2509,
                    "initialValue": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2504,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "18567:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                "typeString": "contract SharpeAI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                "typeString": "contract SharpeAI"
                              }
                            ],
                            "id": 2503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18559:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2502,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18559:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18559:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2506,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2483,
                          "src": "18574:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2507,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2485,
                          "src": "18585:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "expression": {
                          "id": 2500,
                          "name": "PositionKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5407,
                          "src": "18539:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PositionKey_$5407_$",
                            "typeString": "type(library PositionKey)"
                          }
                        },
                        "id": 2501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "compute",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5406,
                        "src": "18539:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_address_$_t_int24_$_t_int24_$returns$_t_bytes32_$",
                          "typeString": "function (address,int24,int24) pure returns (bytes32)"
                        }
                      },
                      "id": 2508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18539:56:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18517:78:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2512,
                          "name": "positionKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2499,
                          "src": "18628:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 2510,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "18613:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 2511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "positions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3327,
                        "src": "18613:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (bytes32) view external returns (uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "id": 2513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18613:27:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "functionReturnParameters": 2497,
                    "id": 2514,
                    "nodeType": "Return",
                    "src": "18606:34:23"
                  }
                ]
              },
              "documentation": {
                "id": 2481,
                "nodeType": "StructuredDocumentation",
                "src": "18208:53:23",
                "text": "@dev Wrapper around `IUniswapV3Pool.positions()`."
              },
              "id": 2516,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_position",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2486,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2483,
                    "mutability": "mutable",
                    "name": "tickLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2516,
                    "src": "18286:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2482,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "18286:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2485,
                    "mutability": "mutable",
                    "name": "tickUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2516,
                    "src": "18303:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2484,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "18303:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "18285:34:23"
              },
              "returnParameters": {
                "id": 2497,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2488,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2516,
                    "src": "18384:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 2487,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "18384:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2490,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2516,
                    "src": "18406:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2489,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18406:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2492,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2516,
                    "src": "18428:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2491,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18428:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2494,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2516,
                    "src": "18450:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 2493,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "18450:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2496,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2516,
                    "src": "18472:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 2495,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "18472:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "18369:121:23"
              },
              "scope": 2922,
              "src": "18267:381:23",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2550,
                "nodeType": "Block",
                "src": "18892:326:23",
                "statements": [
                  {
                    "assignments": [
                      2531,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2531,
                        "mutability": "mutable",
                        "name": "sqrtRatioX96",
                        "nodeType": "VariableDeclaration",
                        "scope": 2550,
                        "src": "18904:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 2530,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "18904:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      null,
                      null,
                      null,
                      null,
                      null,
                      null
                    ],
                    "id": 2535,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2532,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "18940:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 2533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "slot0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3255,
                        "src": "18940:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                          "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                        }
                      },
                      "id": 2534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18940:12:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18903:49:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2538,
                          "name": "sqrtRatioX96",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2531,
                          "src": "19041:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2541,
                              "name": "tickLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2519,
                              "src": "19100:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "id": 2539,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "19072:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$1088_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getSqrtRatioAtTick",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "19072:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                              "typeString": "function (int24) pure returns (uint160)"
                            }
                          },
                          "id": 2542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19072:38:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2545,
                              "name": "tickUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2521,
                              "src": "19157:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "id": 2543,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "19129:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$1088_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getSqrtRatioAtTick",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "19129:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                              "typeString": "function (int24) pure returns (uint160)"
                            }
                          },
                          "id": 2546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19129:38:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "id": 2547,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2523,
                          "src": "19186:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 2536,
                          "name": "LiquidityAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5382,
                          "src": "18983:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$5382_$",
                            "typeString": "type(library LiquidityAmounts)"
                          }
                        },
                        "id": 2537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsForLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5381,
                        "src": "18983:39:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint160,uint160,uint160,uint128) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 2548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18983:227:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "functionReturnParameters": 2529,
                    "id": 2549,
                    "nodeType": "Return",
                    "src": "18963:247:23"
                  }
                ]
              },
              "documentation": {
                "id": 2517,
                "nodeType": "StructuredDocumentation",
                "src": "18660:68:23",
                "text": "@dev Wrapper around `LiquidityAmounts.getAmountsForLiquidity()`."
              },
              "id": 2551,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_amountsForLiquidity",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2524,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2519,
                    "mutability": "mutable",
                    "name": "tickLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2551,
                    "src": "18774:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2518,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "18774:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2521,
                    "mutability": "mutable",
                    "name": "tickUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2551,
                    "src": "18800:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2520,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "18800:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2523,
                    "mutability": "mutable",
                    "name": "liquidity",
                    "nodeType": "VariableDeclaration",
                    "scope": 2551,
                    "src": "18826:17:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 2522,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "18826:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "18763:87:23"
              },
              "returnParameters": {
                "id": 2529,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2526,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2551,
                    "src": "18874:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2525,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18874:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2528,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2551,
                    "src": "18883:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2527,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18883:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "18873:18:23"
              },
              "scope": 2922,
              "src": "18734:484:23",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2586,
                "nodeType": "Block",
                "src": "19473:350:23",
                "statements": [
                  {
                    "assignments": [
                      2566,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2566,
                        "mutability": "mutable",
                        "name": "sqrtRatioX96",
                        "nodeType": "VariableDeclaration",
                        "scope": 2586,
                        "src": "19485:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 2565,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "19485:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      null,
                      null,
                      null,
                      null,
                      null,
                      null
                    ],
                    "id": 2570,
                    "initialValue": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2567,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "19521:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 2568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "slot0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3255,
                        "src": "19521:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                          "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                        }
                      },
                      "id": 2569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19521:12:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "19484:49:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2573,
                          "name": "sqrtRatioX96",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2566,
                          "src": "19622:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2576,
                              "name": "tickLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2554,
                              "src": "19681:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "id": 2574,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "19653:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$1088_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getSqrtRatioAtTick",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "19653:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                              "typeString": "function (int24) pure returns (uint160)"
                            }
                          },
                          "id": 2577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19653:38:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2580,
                              "name": "tickUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2556,
                              "src": "19738:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "id": 2578,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "19710:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$1088_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getSqrtRatioAtTick",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "19710:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                              "typeString": "function (int24) pure returns (uint160)"
                            }
                          },
                          "id": 2581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19710:38:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "id": 2582,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "19767:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2583,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2560,
                          "src": "19793:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2571,
                          "name": "LiquidityAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5382,
                          "src": "19564:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$5382_$",
                            "typeString": "type(library LiquidityAmounts)"
                          }
                        },
                        "id": 2572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getLiquidityForAmounts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5232,
                        "src": "19564:39:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                          "typeString": "function (uint160,uint160,uint160,uint256,uint256) pure returns (uint128)"
                        }
                      },
                      "id": 2584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19564:251:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "functionReturnParameters": 2564,
                    "id": 2585,
                    "nodeType": "Return",
                    "src": "19544:271:23"
                  }
                ]
              },
              "documentation": {
                "id": 2552,
                "nodeType": "StructuredDocumentation",
                "src": "19226:68:23",
                "text": "@dev Wrapper around `LiquidityAmounts.getLiquidityForAmounts()`."
              },
              "id": 2587,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_liquidityForAmounts",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2561,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2554,
                    "mutability": "mutable",
                    "name": "tickLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2587,
                    "src": "19340:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2553,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "19340:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2556,
                    "mutability": "mutable",
                    "name": "tickUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2587,
                    "src": "19366:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2555,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "19366:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2558,
                    "mutability": "mutable",
                    "name": "amount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 2587,
                    "src": "19392:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2557,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "19392:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2560,
                    "mutability": "mutable",
                    "name": "amount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2587,
                    "src": "19418:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2559,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "19418:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "19329:111:23"
              },
              "returnParameters": {
                "id": 2564,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2563,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2587,
                    "src": "19464:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 2562,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "19464:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "19463:9:23"
              },
              "scope": 2922,
              "src": "19300:523:23",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 2610,
                "nodeType": "Block",
                "src": "19954:77:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2596,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2590,
                            "src": "19972:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "19982:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  },
                                  "typeName": {
                                    "id": 2598,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19982:7:23",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  }
                                ],
                                "id": 2597,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "19977:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19977:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint128",
                                "typeString": "type(uint128)"
                              }
                            },
                            "id": 2601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "19977:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "19972:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 2595,
                        "name": "assert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -3,
                        "src": "19965:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 2603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19965:30:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2604,
                    "nodeType": "ExpressionStatement",
                    "src": "19965:30:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2607,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2590,
                          "src": "20021:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20013:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 2605,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "20013:7:23",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20013:10:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "functionReturnParameters": 2594,
                    "id": 2609,
                    "nodeType": "Return",
                    "src": "20006:17:23"
                  }
                ]
              },
              "documentation": {
                "id": 2588,
                "nodeType": "StructuredDocumentation",
                "src": "19831:54:23",
                "text": "@dev Casts uint256 to uint128 with overflow check."
              },
              "id": 2611,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_toUint128",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2591,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2590,
                    "mutability": "mutable",
                    "name": "x",
                    "nodeType": "VariableDeclaration",
                    "scope": 2611,
                    "src": "19911:9:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2589,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "19911:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "19910:11:23"
              },
              "returnParameters": {
                "id": 2594,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2593,
                    "mutability": "mutable",
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 2611,
                    "src": "19945:7:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 2592,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "19945:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "19944:9:23"
              },
              "scope": 2922,
              "src": "19891:140:23",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "baseFunctions": [
                5027
              ],
              "body": {
                "id": 2656,
                "nodeType": "Block",
                "src": "20221:191:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2623,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "20240:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "20240:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2627,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1177,
                                "src": "20262:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              ],
                              "id": 2626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20254:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2625,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20254:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20254:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "20240:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 2622,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "20232:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 2630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20232:36:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2631,
                    "nodeType": "ExpressionStatement",
                    "src": "20232:36:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2632,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2614,
                        "src": "20283:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20293:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "20283:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2643,
                    "nodeType": "IfStatement",
                    "src": "20279:57:23",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2638,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "20316:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "20316:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2640,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2614,
                            "src": "20328:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2635,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "20296:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4104,
                          "src": "20296:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                            "typeString": "function (contract IERC20,address,uint256)"
                          }
                        },
                        "id": 2641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20296:40:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2642,
                      "nodeType": "ExpressionStatement",
                      "src": "20296:40:23"
                    }
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2644,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2616,
                        "src": "20351:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20361:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "20351:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2655,
                    "nodeType": "IfStatement",
                    "src": "20347:57:23",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2650,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "20384:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "20384:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2652,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2616,
                            "src": "20396:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2647,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "20364:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4104,
                          "src": "20364:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                            "typeString": "function (contract IERC20,address,uint256)"
                          }
                        },
                        "id": 2653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20364:40:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2654,
                      "nodeType": "ExpressionStatement",
                      "src": "20364:40:23"
                    }
                  }
                ]
              },
              "documentation": {
                "id": 2612,
                "nodeType": "StructuredDocumentation",
                "src": "20039:38:23",
                "text": "@dev Callback for Uniswap V3 pool."
              },
              "functionSelector": "d3487997",
              "id": 2657,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "uniswapV3MintCallback",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2620,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "20212:8:23"
              },
              "parameters": {
                "id": 2619,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2614,
                    "mutability": "mutable",
                    "name": "amount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 2657,
                    "src": "20124:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2613,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20124:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2616,
                    "mutability": "mutable",
                    "name": "amount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2657,
                    "src": "20150:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2615,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20150:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2618,
                    "mutability": "mutable",
                    "name": "data",
                    "nodeType": "VariableDeclaration",
                    "scope": 2657,
                    "src": "20176:19:23",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 2617,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "20176:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "20113:89:23"
              },
              "returnParameters": {
                "id": 2621,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "20221:0:23"
              },
              "scope": 2922,
              "src": "20083:329:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "baseFunctions": [
                5041
              ],
              "body": {
                "id": 2708,
                "nodeType": "Block",
                "src": "20610:229:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2669,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "20629:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "20629:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2673,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1177,
                                "src": "20651:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              ],
                              "id": 2672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20643:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2671,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20643:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20643:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "20629:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 2668,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "20621:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 2676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20621:36:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2677,
                    "nodeType": "ExpressionStatement",
                    "src": "20621:36:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 2680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2678,
                        "name": "amount0Delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "20672:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20687:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "20672:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2692,
                    "nodeType": "IfStatement",
                    "src": "20668:76:23",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2684,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "20710:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "20710:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2688,
                                "name": "amount0Delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2660,
                                "src": "20730:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 2687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20722:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2686,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20722:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20722:21:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2681,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "20690:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4104,
                          "src": "20690:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                            "typeString": "function (contract IERC20,address,uint256)"
                          }
                        },
                        "id": 2690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20690:54:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2691,
                      "nodeType": "ExpressionStatement",
                      "src": "20690:54:23"
                    }
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 2695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2693,
                        "name": "amount1Delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2662,
                        "src": "20759:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20774:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "20759:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2707,
                    "nodeType": "IfStatement",
                    "src": "20755:76:23",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2699,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "20797:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "20797:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2703,
                                "name": "amount1Delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2662,
                                "src": "20817:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 2702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20809:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2701,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20809:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20809:21:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2696,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "20777:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4104,
                          "src": "20777:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                            "typeString": "function (contract IERC20,address,uint256)"
                          }
                        },
                        "id": 2705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20777:54:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2706,
                      "nodeType": "ExpressionStatement",
                      "src": "20777:54:23"
                    }
                  }
                ]
              },
              "documentation": {
                "id": 2658,
                "nodeType": "StructuredDocumentation",
                "src": "20420:38:23",
                "text": "@dev Callback for Uniswap V3 pool."
              },
              "functionSelector": "fa461e33",
              "id": 2709,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "uniswapV3SwapCallback",
              "nodeType": "FunctionDefinition",
              "overrides": {
                "id": 2666,
                "nodeType": "OverrideSpecifier",
                "overrides": [],
                "src": "20601:8:23"
              },
              "parameters": {
                "id": 2665,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2660,
                    "mutability": "mutable",
                    "name": "amount0Delta",
                    "nodeType": "VariableDeclaration",
                    "scope": 2709,
                    "src": "20505:19:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "typeName": {
                      "id": 2659,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20505:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2662,
                    "mutability": "mutable",
                    "name": "amount1Delta",
                    "nodeType": "VariableDeclaration",
                    "scope": 2709,
                    "src": "20535:19:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "typeName": {
                      "id": 2661,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20535:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2664,
                    "mutability": "mutable",
                    "name": "data",
                    "nodeType": "VariableDeclaration",
                    "scope": 2709,
                    "src": "20565:19:23",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 2663,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "20565:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "20494:97:23"
              },
              "returnParameters": {
                "id": 2667,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "20610:0:23"
              },
              "scope": 2922,
              "src": "20464:375:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2757,
                "nodeType": "Block",
                "src": "21053:262:23",
                "statements": [
                  {
                    "expression": {
                      "id": 2726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2721,
                        "name": "accruedProtocolFees0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1205,
                        "src": "21064:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 2724,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2712,
                            "src": "21112:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2722,
                            "name": "accruedProtocolFees0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1205,
                            "src": "21087:20:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4893,
                          "src": "21087:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21087:33:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "21064:56:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2727,
                    "nodeType": "ExpressionStatement",
                    "src": "21064:56:23"
                  },
                  {
                    "expression": {
                      "id": 2733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2728,
                        "name": "accruedProtocolFees1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "21131:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 2731,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2714,
                            "src": "21179:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2729,
                            "name": "accruedProtocolFees1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "21154:20:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4893,
                          "src": "21154:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21154:33:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "21131:56:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2734,
                    "nodeType": "ExpressionStatement",
                    "src": "21131:56:23"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2735,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2712,
                        "src": "21202:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21212:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "21202:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2745,
                    "nodeType": "IfStatement",
                    "src": "21198:49:23",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2741,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2716,
                            "src": "21235:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2742,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2712,
                            "src": "21239:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2738,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "21215:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4104,
                          "src": "21215:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                            "typeString": "function (contract IERC20,address,uint256)"
                          }
                        },
                        "id": 2743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21215:32:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2744,
                      "nodeType": "ExpressionStatement",
                      "src": "21215:32:23"
                    }
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2746,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2714,
                        "src": "21262:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21272:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "21262:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2756,
                    "nodeType": "IfStatement",
                    "src": "21258:49:23",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2752,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2716,
                            "src": "21295:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2753,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2714,
                            "src": "21299:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2749,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "21275:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safeTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4104,
                          "src": "21275:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                            "typeString": "function (contract IERC20,address,uint256)"
                          }
                        },
                        "id": 2754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21275:32:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2755,
                      "nodeType": "ExpressionStatement",
                      "src": "21275:32:23"
                    }
                  }
                ]
              },
              "documentation": {
                "id": 2710,
                "nodeType": "StructuredDocumentation",
                "src": "20847:71:23",
                "text": " @notice Used to collect accumulated protocol fees."
              },
              "functionSelector": "0430c130",
              "id": 2758,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 2719,
                  "modifierName": {
                    "id": 2718,
                    "name": "onlyGovernance",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2921,
                    "src": "21038:14:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "21038:14:23"
                }
              ],
              "name": "collectProtocol",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2717,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2712,
                    "mutability": "mutable",
                    "name": "amount0",
                    "nodeType": "VariableDeclaration",
                    "scope": 2758,
                    "src": "20959:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2711,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20959:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2714,
                    "mutability": "mutable",
                    "name": "amount1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2758,
                    "src": "20985:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2713,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20985:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2716,
                    "mutability": "mutable",
                    "name": "to",
                    "nodeType": "VariableDeclaration",
                    "scope": 2758,
                    "src": "21011:10:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2715,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21011:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "20948:80:23"
              },
              "returnParameters": {
                "id": 2720,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "21053:0:23"
              },
              "scope": 2922,
              "src": "20924:391:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2789,
                "nodeType": "Block",
                "src": "21520:112:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            },
                            "id": 2774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2772,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2762,
                              "src": "21539:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4048",
                                "typeString": "contract IERC20"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 2773,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "21548:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4048",
                                "typeString": "contract IERC20"
                              }
                            },
                            "src": "21539:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_contract$_IERC20_$4048",
                              "typeString": "contract IERC20"
                            },
                            "id": 2777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2775,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2762,
                              "src": "21558:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4048",
                                "typeString": "contract IERC20"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 2776,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "21567:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4048",
                                "typeString": "contract IERC20"
                              }
                            },
                            "src": "21558:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "21539:34:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "746f6b656e",
                          "id": 2779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21575:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                            "typeString": "literal_string \"token\""
                          },
                          "value": "token"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                            "typeString": "literal_string \"token\""
                          }
                        ],
                        "id": 2771,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "21531:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21531:52:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2781,
                    "nodeType": "ExpressionStatement",
                    "src": "21531:52:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2785,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2766,
                          "src": "21613:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2786,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2764,
                          "src": "21617:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2782,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2762,
                          "src": "21594:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4048",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4104,
                        "src": "21594:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4048_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4048_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 2787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21594:30:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2788,
                    "nodeType": "ExpressionStatement",
                    "src": "21594:30:23"
                  }
                ]
              },
              "documentation": {
                "id": 2759,
                "nodeType": "StructuredDocumentation",
                "src": "21323:76:23",
                "text": " @notice Removes tokens accidentally sent to this vault."
              },
              "functionSelector": "dc2c256f",
              "id": 2790,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 2769,
                  "modifierName": {
                    "id": 2768,
                    "name": "onlyGovernance",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2921,
                    "src": "21505:14:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "21505:14:23"
                }
              ],
              "name": "sweep",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2767,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2762,
                    "mutability": "mutable",
                    "name": "token",
                    "nodeType": "VariableDeclaration",
                    "scope": 2790,
                    "src": "21430:12:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4048",
                      "typeString": "contract IERC20"
                    },
                    "typeName": {
                      "id": 2761,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2760,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4048,
                        "src": "21430:6:23"
                      },
                      "referencedDeclaration": 4048,
                      "src": "21430:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4048",
                        "typeString": "contract IERC20"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2764,
                    "mutability": "mutable",
                    "name": "amount",
                    "nodeType": "VariableDeclaration",
                    "scope": 2790,
                    "src": "21453:14:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2763,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21453:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2766,
                    "mutability": "mutable",
                    "name": "to",
                    "nodeType": "VariableDeclaration",
                    "scope": 2790,
                    "src": "21478:10:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2765,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21478:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "21419:76:23"
              },
              "returnParameters": {
                "id": 2770,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "21520:0:23"
              },
              "scope": 2922,
              "src": "21405:227:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2802,
                "nodeType": "Block",
                "src": "21898:47:23",
                "statements": [
                  {
                    "expression": {
                      "id": 2800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2798,
                        "name": "SharpeKeeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "21909:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 2799,
                        "name": "_SharpeKeeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2793,
                        "src": "21924:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "21909:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2801,
                    "nodeType": "ExpressionStatement",
                    "src": "21909:28:23"
                  }
                ]
              },
              "documentation": {
                "id": 2791,
                "nodeType": "StructuredDocumentation",
                "src": "21640:180:23",
                "text": " @notice Used to set the keeper contract that determines the position\n ranges and calls rebalance(). Must be called after this vault is\n deployed."
              },
              "functionSelector": "b3a3d00c",
              "id": 2803,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 2796,
                  "modifierName": {
                    "id": 2795,
                    "name": "onlyGovernance",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2921,
                    "src": "21883:14:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "21883:14:23"
                }
              ],
              "name": "setSharpeKeeper",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2794,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2793,
                    "mutability": "mutable",
                    "name": "_SharpeKeeper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2803,
                    "src": "21851:21:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2792,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21851:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "21850:23:23"
              },
              "returnParameters": {
                "id": 2797,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "21898:0:23"
              },
              "scope": 2922,
              "src": "21826:119:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2822,
                "nodeType": "Block",
                "src": "22170:98:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2812,
                            "name": "_protocolFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2806,
                            "src": "22189:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "316536",
                            "id": 2813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22204:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          },
                          "src": "22189:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "70726f746f636f6c466565",
                          "id": 2815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22209:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                            "typeString": "literal_string \"protocolFee\""
                          },
                          "value": "protocolFee"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                            "typeString": "literal_string \"protocolFee\""
                          }
                        ],
                        "id": 2811,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "22181:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22181:42:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2817,
                    "nodeType": "ExpressionStatement",
                    "src": "22181:42:23"
                  },
                  {
                    "expression": {
                      "id": 2820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2818,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "22234:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 2819,
                        "name": "_protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2806,
                        "src": "22248:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "22234:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2821,
                    "nodeType": "ExpressionStatement",
                    "src": "22234:26:23"
                  }
                ]
              },
              "documentation": {
                "id": 2804,
                "nodeType": "StructuredDocumentation",
                "src": "21953:141:23",
                "text": " @notice Used to change the protocol fee charged on pool fees earned from\n Uniswap, expressed as multiple of 1e-6."
              },
              "functionSelector": "787dce3d",
              "id": 2823,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 2809,
                  "modifierName": {
                    "id": 2808,
                    "name": "onlyGovernance",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2921,
                    "src": "22155:14:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "22155:14:23"
                }
              ],
              "name": "setProtocolFee",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2807,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2806,
                    "mutability": "mutable",
                    "name": "_protocolFee",
                    "nodeType": "VariableDeclaration",
                    "scope": 2823,
                    "src": "22124:20:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2805,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "22124:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "22123:22:23"
              },
              "returnParameters": {
                "id": 2810,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "22170:0:23"
              },
              "scope": 2922,
              "src": "22100:168:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2835,
                "nodeType": "Block",
                "src": "22634:51:23",
                "statements": [
                  {
                    "expression": {
                      "id": 2833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2831,
                        "name": "maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "22645:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 2832,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2826,
                        "src": "22662:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "22645:32:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2834,
                    "nodeType": "ExpressionStatement",
                    "src": "22645:32:23"
                  }
                ]
              },
              "documentation": {
                "id": 2824,
                "nodeType": "StructuredDocumentation",
                "src": "22276:276:23",
                "text": " @notice Used to change deposit cap for a guarded launch or to ensure\n vault doesn't grow too large relative to the pool. Cap is on total\n supply rather than amounts of token0 and token1 as those amounts\n fluctuate naturally over time."
              },
              "functionSelector": "3f3e4c11",
              "id": 2836,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 2829,
                  "modifierName": {
                    "id": 2828,
                    "name": "onlyGovernance",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2921,
                    "src": "22619:14:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "22619:14:23"
                }
              ],
              "name": "setMaxTotalSupply",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2827,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2826,
                    "mutability": "mutable",
                    "name": "_maxTotalSupply",
                    "nodeType": "VariableDeclaration",
                    "scope": 2836,
                    "src": "22585:23:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2825,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "22585:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "22584:25:23"
              },
              "returnParameters": {
                "id": 2830,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "22634:0:23"
              },
              "scope": 2922,
              "src": "22558:127:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2877,
                "nodeType": "Block",
                "src": "22901:159:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2851,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2839,
                          "src": "22922:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2852,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2841,
                          "src": "22933:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2853,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2843,
                          "src": "22944:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 2848,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "22912:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 2850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "burn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2981,
                        "src": "22912:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                        }
                      },
                      "id": 2854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22912:42:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "id": 2855,
                    "nodeType": "ExpressionStatement",
                    "src": "22912:42:23"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2861,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "22986:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                "typeString": "contract SharpeAI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SharpeAI_$2922",
                                "typeString": "contract SharpeAI"
                              }
                            ],
                            "id": 2860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "22978:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2859,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "22978:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22978:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2863,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2839,
                          "src": "22993:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 2864,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2841,
                          "src": "23004:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23020:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 2866,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23020:7:23",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                }
                              ],
                              "id": 2865,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "23015:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23015:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint128",
                              "typeString": "type(uint128)"
                            }
                          },
                          "id": 2869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "23015:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23039:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 2871,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23039:7:23",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                }
                              ],
                              "id": 2870,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "23034:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23034:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint128",
                              "typeString": "type(uint128)"
                            }
                          },
                          "id": 2874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "23034:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 2856,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "22965:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$563",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 2858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collect",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2967,
                        "src": "22965:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint128_$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function (address,int24,int24,uint128,uint128) external returns (uint128,uint128)"
                        }
                      },
                      "id": 2875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22965:87:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "id": 2876,
                    "nodeType": "ExpressionStatement",
                    "src": "22965:87:23"
                  }
                ]
              },
              "documentation": {
                "id": 2837,
                "nodeType": "StructuredDocumentation",
                "src": "22693:68:23",
                "text": " @notice Removes liquidity in case of emergency."
              },
              "functionSelector": "abbffcb9",
              "id": 2878,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 2846,
                  "modifierName": {
                    "id": 2845,
                    "name": "onlyGovernance",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2921,
                    "src": "22886:14:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "22886:14:23"
                }
              ],
              "name": "emergencyBurn",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2844,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2839,
                    "mutability": "mutable",
                    "name": "tickLower",
                    "nodeType": "VariableDeclaration",
                    "scope": 2878,
                    "src": "22800:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2838,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "22800:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2841,
                    "mutability": "mutable",
                    "name": "tickUpper",
                    "nodeType": "VariableDeclaration",
                    "scope": 2878,
                    "src": "22826:15:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "typeName": {
                      "id": 2840,
                      "name": "int24",
                      "nodeType": "ElementaryTypeName",
                      "src": "22826:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2843,
                    "mutability": "mutable",
                    "name": "liquidity",
                    "nodeType": "VariableDeclaration",
                    "scope": 2878,
                    "src": "22852:17:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 2842,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "22852:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "22789:87:23"
              },
              "returnParameters": {
                "id": 2847,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "22901:0:23"
              },
              "scope": 2922,
              "src": "22767:293:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2890,
                "nodeType": "Block",
                "src": "23308:50:23",
                "statements": [
                  {
                    "expression": {
                      "id": 2888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2886,
                        "name": "pendingGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "23319:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 2887,
                        "name": "_governance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2881,
                        "src": "23339:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "23319:31:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2889,
                    "nodeType": "ExpressionStatement",
                    "src": "23319:31:23"
                  }
                ]
              },
              "documentation": {
                "id": 2879,
                "nodeType": "StructuredDocumentation",
                "src": "23068:166:23",
                "text": " @notice Governance address is not updated until the new governance\n address has called `acceptGovernance()` to accept this responsibility."
              },
              "functionSelector": "ab033ea9",
              "id": 2891,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 2884,
                  "modifierName": {
                    "id": 2883,
                    "name": "onlyGovernance",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2921,
                    "src": "23293:14:23"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "23293:14:23"
                }
              ],
              "name": "setGovernance",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2882,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 2881,
                    "mutability": "mutable",
                    "name": "_governance",
                    "nodeType": "VariableDeclaration",
                    "scope": 2891,
                    "src": "23263:19:23",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2880,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "23263:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "23262:21:23"
              },
              "returnParameters": {
                "id": 2885,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "23308:0:23"
              },
              "scope": 2922,
              "src": "23240:118:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2908,
                "nodeType": "Block",
                "src": "23547:114:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2896,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "23566:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "23566:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2898,
                            "name": "pendingGovernance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "23580:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "23566:31:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "70656e64696e67476f7665726e616e6365",
                          "id": 2900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23599:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_75cf2b35fcd3ae39eaae9f0f8330524c89324e61aa5b818420bc93e577fb9a45",
                            "typeString": "literal_string \"pendingGovernance\""
                          },
                          "value": "pendingGovernance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_75cf2b35fcd3ae39eaae9f0f8330524c89324e61aa5b818420bc93e577fb9a45",
                            "typeString": "literal_string \"pendingGovernance\""
                          }
                        ],
                        "id": 2895,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "23558:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23558:61:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2902,
                    "nodeType": "ExpressionStatement",
                    "src": "23558:61:23"
                  },
                  {
                    "expression": {
                      "id": 2906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2903,
                        "name": "governance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "23630:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "id": 2904,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23643:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "23643:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "23630:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2907,
                    "nodeType": "ExpressionStatement",
                    "src": "23630:23:23"
                  }
                ]
              },
              "documentation": {
                "id": 2892,
                "nodeType": "StructuredDocumentation",
                "src": "23366:138:23",
                "text": " @notice `setGovernance()` should be called by the existing governance\n address prior to calling this function."
              },
              "functionSelector": "238efcbc",
              "id": 2909,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "acceptGovernance",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2893,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "23535:2:23"
              },
              "returnParameters": {
                "id": 2894,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "23547:0:23"
              },
              "scope": 2922,
              "src": "23510:151:23",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 2920,
                "nodeType": "Block",
                "src": "23693:78:23",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2912,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "23712:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "23712:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2914,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1193,
                            "src": "23726:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "23712:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "676f7665726e616e6365",
                          "id": 2916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23738:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                            "typeString": "literal_string \"governance\""
                          },
                          "value": "governance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                            "typeString": "literal_string \"governance\""
                          }
                        ],
                        "id": 2911,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "23704:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23704:47:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2918,
                    "nodeType": "ExpressionStatement",
                    "src": "23704:47:23"
                  },
                  {
                    "id": 2919,
                    "nodeType": "PlaceholderStatement",
                    "src": "23762:1:23"
                  }
                ]
              },
              "id": 2921,
              "name": "onlyGovernance",
              "nodeType": "ModifierDefinition",
              "parameters": {
                "id": 2910,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "23693:0:23"
              },
              "src": "23669:102:23",
              "virtual": false,
              "visibility": "internal"
            }
          ],
          "scope": 2923,
          "src": "1648:22126:23"
        }
      ],
      "src": "41:23733:23"
    },
    "bytecode": "6101006040523480156200001257600080fd5b506040516200460638038062004606833981016040819052620000359162000394565b6040805180820182526008815267536861727065414960c01b602080830191825283518085019094526002845261414960f01b9084015281519192916200007f91600391620002ad565b50805162000095906004906020840190620002ad565b50506001600555506001600160601b0319606084901b1660805260408051630dfe168160e01b815290516001600160a01b03851691630dfe1681916004808301926020929190829003018186803b158015620000f057600080fd5b505afa15801562000105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012b919062000370565b6001600160a01b031660a0816001600160a01b031660601b81525050826001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156200018157600080fd5b505afa15801562000196573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001bc919062000370565b6001600160a01b031660c0816001600160a01b031660601b81525050826001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200021257600080fd5b505afa15801562000227573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200024d9190620003cb565b600290810b900b60e81b60e05260068290556007819055600980546001600160a01b03191633179055620f42408210620002a45760405162461bcd60e51b81526004016200029b90620003ee565b60405180910390fd5b50505062000450565b828054620002bb9062000413565b90600052602060002090601f016020900481019282620002df57600085556200032a565b82601f10620002fa57805160ff19168380011785556200032a565b828001600101855582156200032a579182015b828111156200032a5782518255916020019190600101906200030d565b50620003389291506200033c565b5090565b5b808211156200033857600081556001016200033d565b80516001600160a01b03811681146200036b57600080fd5b919050565b60006020828403121562000382578081fd5b6200038d8262000353565b9392505050565b600080600060608486031215620003a9578182fd5b620003b48462000353565b925060208401519150604084015190509250925092565b600060208284031215620003dd578081fd5b81518060020b81146200038d578182fd5b6020808252600b908201526a70726f746f636f6c46656560a81b604082015260600190565b6002810460018216806200042857607f821691505b602082108114156200044a57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160601c60a05160601c60c05160601c60e05160e81c6140ac6200055a600039600081816114580152611ed50152600081816105b80152818161091201528181610a540152818161147c015281816116710152818161178101528181611817015261195401526000818161057e015281816106a9015281816108d701528181610b220152818161163701528181611747015281816117da01526119170152600081816106dd01528181610c5001528181610e4a01528181611238015281816112db0152818161170a015281816118d701528181611c3801528181611ff6015281816120ba0152818161214f015281816122e0015281816123c4015261240601526140ac6000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c806387e5e08311610151578063c4a7761e116100c3578063dc2c256f11610087578063dc2c256f146104c7578063dd62ed3e146104da578063eae989a2146104ed578063f39c38a0146104f5578063fa082743146104fd578063fa461e331461050557610269565b8063c4a7761e14610489578063d0c93a7c14610491578063d21220a714610499578063d331bef7146104a1578063d3487997146104b457610269565b8063a9059cbb11610115578063a9059cbb14610414578063a91ef6eb14610427578063ab033ea914610448578063abbffcb91461045b578063b0e21e8a1461046e578063b3a3d00c1461047657610269565b806387e5e083146103d6578063888a9134146103e957806395d89b41146103f1578063a00fa77f146103f9578063a457c2d71461040157610269565b80632ab4d052116101ea57806341aec538116101ae57806341aec5381461039057806351e87af7146103985780635aa6e675146103a0578063629d9405146103a857806370a08231146103b0578063787dce3d146103c357610269565b80632ab4d0521461032b578063313ce56714610333578063365d0ed714610348578063395093511461036a5780633f3e4c111461037d57610269565b80630f35bcac116102315780630f35bcac146102de57806316f0115b146102f357806318160ddd146102fb578063238efcbc1461031057806323b872dd1461031857610269565b80630430c1301461026e57806306fdde0314610283578063095ea7b3146102a15780630c42383a146102c15780630dfe1681146102d6575b600080fd5b61028161027c366004613545565b610518565b005b61028b6105e4565b60405161029891906137b3565b60405180910390f35b6102b46102af3660046131f0565b610676565b604051610298919061374b565b6102c9610698565b6040516102989190613641565b6102c96106a7565b6102e66106cb565b604051610298919061375f565b6102c96106db565b6103036106ff565b6040516102989190613756565b610281610705565b6102b46103263660046131b0565b610743565b610303610773565b61033b610779565b6040516102989190613e9e565b61035b6103563660046135b2565b61077e565b60405161029893929190613e6d565b6102b46103783660046131f0565b6109cf565b61028161038b366004613515565b610a1b565b610303610a4a565b6102e6610af9565b6102c9610b09565b610303610b18565b6103036103be36600461315c565b610b6c565b6102816103d1366004613515565b610b8b565b6102816103e4366004613356565b610bdc565b6102e6611065565b61028b611075565b610303611084565b6102b461040f3660046131f0565b61108a565b6102b46104223660046131f0565b6110f6565b61043a610435366004613276565b61110e565b604051610298929190613e5f565b61028161045636600461315c565b6111ab565b6102816104693660046132a3565b6111f7565b610303611377565b61028161048436600461315c565b61137d565b61043a6113c9565b6102e6611456565b6102c961147a565b61043a6104af366004613572565b61149e565b6102816104c2366004613305565b6116ff565b6102816104d5366004613235565b6117ae565b6103036104e8366004613178565b61187c565b6103036118a7565b6102c96118ad565b6102e66118bc565b610281610513366004613305565b6118cc565b6009546001600160a01b0316331461054b5760405162461bcd60e51b815260040161054290613b39565b60405180910390fd5b600b54610558908461197b565b600b55600c54610568908361197b565b600c5582156105a5576105a56001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168285611987565b81156105df576105df6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168284611987565b505050565b6060600380546105f390613f62565b80601f016020809104026020016040519081016040528092919081815260200182805461061f90613f62565b801561066c5780601f106106415761010080835404028352916020019161066c565b820191906000526020600020905b81548152906001019060200180831161064f57829003601f168201915b5050505050905090565b6000806106816119dd565b905061068e8185856119e1565b5060019392505050565b6008546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600a54600160e81b900460020b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025490565b600a546001600160a01b0316331461072f5760405162461bcd60e51b815260040161054290613aa4565b600980546001600160a01b03191633179055565b60008061074e6119dd565b905061075b858285611a95565b610766858585611ad9565b60019150505b9392505050565b60075481565b601290565b6000806000600260055414156107a65760405162461bcd60e51b815260040161054290613dac565b6002600555871515806107b95750600087115b6107d55760405162461bcd60e51b815260040161054290613a6f565b6001600160a01b038416158015906107f657506001600160a01b0384163014155b6108125760405162461bcd60e51b81526004016105429061388f565b600a5461083490600160a01b8104600290810b91600160b81b9004900b611bfd565b600a5461085690600160d01b8104600290810b91600160e81b9004900b611bfd565b6108608888611cc3565b91945092509050826108845760405162461bcd60e51b815260040161054290613b5d565b858210156108a45760405162461bcd60e51b815260040161054290613829565b848110156108c45760405162461bcd60e51b815260040161054290613c22565b81156108ff576108ff6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611de6565b801561093a5761093a6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611de6565b6109448484611e07565b836001600160a01b0316336001600160a01b03167f4e2ca0515ed1aef1395f66b5303bb5d6f1bf9d61a353fa53f73f8ac9973fa9f685858560405161098b93929190613e6d565b60405180910390a360075461099e6106ff565b11156109bc5760405162461bcd60e51b815260040161054290613d3a565b6001600581905550955095509592505050565b6000806109da6119dd565b6001600160a01b0380821660009081526001602090815260408083209389168352929052205490915061068e9082908690610a16908790613eac565b6119e1565b6009546001600160a01b03163314610a455760405162461bcd60e51b815260040161054290613b39565b600755565b6000610af4600c547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a9e9190613641565b60206040518083038186803b158015610ab657600080fd5b505afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee919061352d565b9061197b565b905090565b600a54600160d01b900460020b81565b6009546001600160a01b031681565b6000610af4600b547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a9e9190613641565b6001600160a01b0381166000908152602081905260409020545b919050565b6009546001600160a01b03163314610bb55760405162461bcd60e51b815260040161054290613b39565b620f42408110610bd75760405162461bcd60e51b815260040161054290613acf565b600655565b60026005541415610bff5760405162461bcd60e51b815260040161054290613dac565b60026005556008546001600160a01b03163314610c2e5760405162461bcd60e51b815260040161054290613b13565b610c388686611ed3565b610c428484611ed3565b610c4c8282611ed3565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610ca757600080fd5b505afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf9190613484565b50505050509150508060020b8460020b1315610d0d5760405162461bcd60e51b815260040161054290613a07565b8060020b8360020b13610d325760405162461bcd60e51b815260040161054290613c46565b600a54600090610d5790600160a01b8104600290810b91600160b81b9004900b611fc8565b5050600a54929350600092610d849250600160d01b8104600290810b9250600160e81b909104900b611fc8565b5050600a54929350610db092600160a01b8104600290810b9350600160b81b909104900b90508461208f565b5050600a54610dd89250600160d01b8104600290810b9250600160e81b909104900b8361208f565b5050505050506000610de8610b18565b90506000610df4610a4a565b90507f210f60adf1db7a02e9db9a49ec7c2eb2060c516cbcfd01a0c05288144738ee5d838383610e226106ff565b604051610e329493929190613793565b60405180910390a18a15610f11576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663128acb083060008e1380610e8757610e828f613ff4565b610e89565b8e5b8e6040518563ffffffff1660e01b8152600401610ea99493929190613679565b6040805180830381600087803b158015610ec257600080fd5b505af1158015610ed6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efa91906132e2565b5050610f04610b18565b9150610f0e610a4a565b90505b6000610f1f8a8a85856122db565b9050610f2c8a8a8361239e565b600a805460028c810b62ffffff908116600160a01b0262ffffff60a01b19928e900b909116600160b81b0262ffffff60b81b199093169290921716179055610f72610b18565b9250610f7c610a4a565b91506000610f8c898986866122db565b90506000610f9c888887876122db565b9050806001600160801b0316826001600160801b0316111561100657610fc38a8a8461239e565b600a805460028c810b62ffffff908116600160d01b0262ffffff60d01b19928e900b909116600160e81b026001600160e81b039093169290921716179055611050565b61101188888361239e565b600a805460028a810b62ffffff908116600160d01b0262ffffff60d01b19928c900b909116600160e81b026001600160e81b0390931692909217161790555b50506001600555505050505050505050505050565b600a54600160b81b900460020b81565b6060600480546105f390613f62565b600c5481565b6000806110956119dd565b6001600160a01b03808216600090815260016020908152604080832093891683529290522054909150838110156110de5760405162461bcd60e51b815260040161054290613de3565b6110eb82868684036119e1565b506001949350505050565b6000806111016119dd565b905061068e818585611ad9565b60008060008060006111208787611fc8565b94509450505092506111338787856123ff565b600654919650945060009061114c90620f42409061197b565b9050611178611171620f424061116b6001600160801b038716856124c6565b906124d2565b87906124de565b955061119e611197620f424061116b6001600160801b038616856124c6565b86906124de565b9450505050509250929050565b6009546001600160a01b031633146111d55760405162461bcd60e51b815260040161054290613b39565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b031633146112215760405162461bcd60e51b815260040161054290613b39565b60405163a34123a760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a34123a7906112719086908690869060040161376d565b6040805180830381600087803b15801561128a57600080fd5b505af115801561129e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c291906132e2565b50506040516309e3d67b60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634f1eb3d89061131f903090879087906001600160801b039081906004016136f5565b6040805180830381600087803b15801561133857600080fd5b505af115801561134c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137091906133f5565b5050505050565b60065481565b6009546001600160a01b031633146113a75760405162461bcd60e51b815260040161054290613b39565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b600a546000908190819081906113f490600160a01b8104600290810b91600160b81b9004900b61110e565b600a549193509150600090819061142090600160d01b8104600290810b91600160e81b9004900b61110e565b9150915061143a8261143486611434610b18565b906124de565b955061144c8161143485611434610a4a565b9450505050509091565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600260055414156114c45760405162461bcd60e51b815260040161054290613dac565b6002600555856114e65760405162461bcd60e51b815260040161054290613b5d565b6001600160a01b0383161580159061150757506001600160a01b0383163014155b6115235760405162461bcd60e51b81526004016105429061388f565b600061152d6106ff565b905061153933886124ea565b60006115518261116b8a61154b610b18565b906124c6565b905060006115658361116b8b61154b610a4a565b600a54909150600090819061159190600160a01b8104600290810b91600160b81b9004900b8d886125db565b600a54919350915060009081906115bf90600160d01b8104600290810b91600160e81b9004900b8f8a6125db565b90925090506115d28261143488876124de565b98506115e28161143487866124de565b97508b8910156116045760405162461bcd60e51b815260040161054290613829565b8a8810156116245760405162461bcd60e51b815260040161054290613c22565b881561165e5761165e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168b8b611987565b8715611698576116986001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168b8a611987565b896001600160a01b0316336001600160a01b03167febff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f8f8c8c6040516116df93929190613e6d565b60405180910390a350505050505050600160058190555094509492505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461173457600080fd5b831561176e5761176e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163386611987565b82156117a8576117a86001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385611987565b50505050565b6009546001600160a01b031633146117d85760405162461bcd60e51b815260040161054290613b39565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415801561184c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b6118685760405162461bcd60e51b815260040161054290613af4565b6105df6001600160a01b0384168284611987565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600b5481565b600a546001600160a01b031681565b600a54600160a01b900460020b81565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461190157600080fd5b600084131561193e5761193e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163386611987565b60008313156117a8576117a86001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385611987565b600061076c8284613f1f565b6105df8363a9059cbb60e01b84846040516024016119a6929190613732565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612681565b3390565b6001600160a01b038316611a075760405162461bcd60e51b815260040161054290613c93565b6001600160a01b038216611a2d5760405162461bcd60e51b8152600401610542906138da565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611a88908590613756565b60405180910390a3505050565b6000611aa1848461187c565b905060001981146117a85781811015611acc5760405162461bcd60e51b815260040161054290613953565b6117a884848484036119e1565b6001600160a01b038316611aff5760405162461bcd60e51b815260040161054290613bdd565b6001600160a01b038216611b255760405162461bcd60e51b8152600401610542906137e6565b611b308383836105df565b6001600160a01b03831660009081526020819052604090205481811015611b695760405162461bcd60e51b8152600401610542906139c1565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611ba0908490613eac565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611bea9190613756565b60405180910390a36117a88484846105df565b6000611c098383611fc8565b5050505090506000816001600160801b031611156105df5760405163a34123a760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a34123a790611c72908690869060009060040161376d565b6040805180830381600087803b158015611c8b57600080fd5b505af1158015611c9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137091906132e2565b600080600080611cd16106ff565b9050600080611cde6113c9565b915091508260001480611cf15750600082115b80611cfc5750600081115b611d1657634e487b7160e01b600052600160045260246000fd5b82611d3257879450869350611d2b8585612710565b9550611ddc565b81611d4857869350611d2b8161116b86866124c6565b80611d5e57879450611d2b8261116b87866124c6565b6000611d7c611d6d8a846124c6565b611d778a866124c6565b612727565b905060008111611d9e5760405162461bcd60e51b815260040161054290613bbe565b611db160016114348461116b858461197b565b9550611dc660016114348561116b858461197b565b9450611dd88261116b858185896124c6565b9650505b5050509250925092565b6117a8846323b872dd60e01b8585856040516024016119a693929190613655565b6001600160a01b038216611e2d5760405162461bcd60e51b815260040161054290613e28565b611e39600083836105df565b8060026000828254611e4b9190613eac565b90915550506001600160a01b03821660009081526020819052604081208054839290611e78908490613eac565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611ebb908590613756565b60405180910390a3611ecf600083836105df565b5050565b7f0000000000000000000000000000000000000000000000000000000000000000600282810b9084900b12611f1a5760405162461bcd60e51b8152600401610542906138ab565b620d89e719600284900b1215611f425760405162461bcd60e51b815260040161054290613c68565b611f4f620d89e719613fd3565b60020b8260020b1315611f745760405162461bcd60e51b815260040161054290613cd7565b611f7e8184613f9d565b60020b15611f9e5760405162461bcd60e51b81526004016105429061391c565b611fa88183613f9d565b60020b156105df5760405162461bcd60e51b81526004016105429061398a565b600080600080600080611fdc308989612736565b60405163514ea4bf60e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063514ea4bf9061202b908490600401613756565b60a06040518083038186803b15801561204357600080fd5b505afa158015612057573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207b9190613423565b939c929b5090995097509095509350505050565b60008080806001600160801b0385161561214a5760405163a34123a760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a34123a7906120f3908a908a908a9060040161376d565b6040805180830381600087803b15801561210c57600080fd5b505af1158015612120573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061214491906132e2565b90945092505b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f1eb3d8308b8b6001600160801b03806040518663ffffffff1660e01b81526004016121a89594939291906136f5565b6040805180830381600087803b1580156121c157600080fd5b505af11580156121d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f991906133f5565b6001600160801b039182169350169050612213828761197b565b935061221f818661197b565b6006549093506000908190801561229057612241620f424061116b89846124c6565b9250612254620f424061116b88846124c6565b9150612260878461197b565b965061226c868361197b565b600b5490965061227c90846124de565b600b55600c5461228c90836124de565b600c555b7f1ac56d7e866e3f5ea9aa92aa11758ead39a0a5f013f3fefb0f47cb9d008edd27878785856040516122c59493929190613e83565b60405180910390a1505050505093509350935093565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561233757600080fd5b505afa15801561234b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236f9190613484565b5050505050509050612394816123848861276c565b61238d8861276c565b8787612b46565b9695505050505050565b6001600160801b038116156105df57604051633c8a7d8d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633c8a7d8d90611c729030908790879087906004016136b3565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561245d57600080fd5b505afa158015612471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124959190613484565b50505050505090506124b9816124aa8861276c565b6124b38861276c565b87612c0a565b9250925050935093915050565b600061076c8284613ed8565b600061076c8284613ec4565b600061076c8284613eac565b6001600160a01b0382166125105760405162461bcd60e51b815260040161054290613b7d565b61251c826000836105df565b6001600160a01b038216600090815260208190526040902054818110156125555760405162461bcd60e51b81526004016105429061384d565b6001600160a01b0383166000908152602081905260408120838303905560028054849290612584908490613f1f565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906125c7908690613756565b60405180910390a36105df836000846105df565b60008060006125ea8787611fc8565b50505050905060006126128561116b88856001600160801b03166124c690919063ffffffff16565b90508015612676576000806000806126338c8c61262e88612ca6565b61208f565b9296509094509250905061265561264e8a61116b858e6124c6565b85906124de565b975061266f6126688a61116b848e6124c6565b84906124de565b9650505050505b505094509492505050565b60006126d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612cd19092919063ffffffff16565b8051909150156105df57808060200190518101906126f4919061321b565b6105df5760405162461bcd60e51b815260040161054290613d62565b600081831015612720578161076c565b5090919050565b6000818310612720578161076c565b600083838360405160200161274d939291906135f0565b6040516020818303038152906040528051906020012090509392505050565b60008060008360020b12612783578260020b612790565b8260020b61279090613ff4565b90506000600182166127a657600160801b6127b8565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156127f75760806127f2826ffff97272373d413259a46990580e213a613ed8565b901c90505b600482161561282157608061281c826ffff2e50f5f656932ef12357cf3c7fdcc613ed8565b901c90505b600882161561284b576080612846826fffe5caca7e10e4e61c3624eaa0941cd0613ed8565b901c90505b6010821615612875576080612870826fffcb9843d60f6159c9db58835c926644613ed8565b901c90505b602082161561289f57608061289a826fff973b41fa98c081472e6896dfb254c0613ed8565b901c90505b60408216156128c95760806128c4826fff2ea16466c96a3843ec78b326b52861613ed8565b901c90505b60808216156128f35760806128ee826ffe5dee046a99a2a811c461f1969c3053613ed8565b901c90505b61010082161561291e576080612919826ffcbe86c7900a88aedcffc83b479aa3a4613ed8565b901c90505b610200821615612949576080612944826ff987a7253ac413176f2b074cf7815e54613ed8565b901c90505b61040082161561297457608061296f826ff3392b0822b70005940c7a398e4b70f3613ed8565b901c90505b61080082161561299f57608061299a826fe7159475a2c29b7443b29c7fa6e889d9613ed8565b901c90505b6110008216156129ca5760806129c5826fd097f3bdfd2022b8845ad8f792aa5825613ed8565b901c90505b6120008216156129f55760806129f0826fa9f746462d870fdf8a65dc1f90e061e5613ed8565b901c90505b614000821615612a20576080612a1b826f70d869a156d2a1b890bb3df62baf32f7613ed8565b901c90505b618000821615612a4b576080612a46826f31be135f97d08fd981231505542fcfa6613ed8565b901c90505b62010000821615612a77576080612a72826f09aa508b5b7a84e1c677de54f3e99bc9613ed8565b901c90505b62020000821615612aa2576080612a9d826e5d6af8dedb81196699c329225ee604613ed8565b901c90505b62040000821615612acc576080612ac7826d2216e584f5fa1ea926041bedfe98613ed8565b901c90505b62080000821615612af4576080612aef826b048a170391f7dc42444e8fa2613ed8565b901c90505b60008460020b1315612b0f57612b0c81600019613ec4565b90505b612b1e64010000000082613fbf565b15612b2a576001612b2d565b60005b612b3e9060ff16602083901c613eac565b949350505050565b6000836001600160a01b0316856001600160a01b03161115612b66579293925b846001600160a01b0316866001600160a01b031611612b9157612b8a858585612ce0565b9050612c01565b836001600160a01b0316866001600160a01b03161015612bf3576000612bb8878686612ce0565b90506000612bc7878986612d4a565b9050806001600160801b0316826001600160801b031610612be85780612bea565b815b92505050612c01565b612bfe858584612d4a565b90505b95945050505050565b600080836001600160a01b0316856001600160a01b03161115612c2b579293925b846001600160a01b0316866001600160a01b031611612c5657612c4f858585612d80565b9150612c9d565b836001600160a01b0316866001600160a01b03161015612c8f57612c7b868585612d80565b9150612c88858785612df3565b9050612c9d565b612c9a858585612df3565b90505b94509492505050565b60006001600160801b03821115612ccd57634e487b7160e01b600052600160045260246000fd5b5090565b6060612b3e8484600085612e3d565b6000826001600160a01b0316846001600160a01b03161115612d00579192915b6000612d23856001600160a01b0316856001600160a01b0316600160601b612efd565b9050612c01612d458483612d378989613ef7565b6001600160a01b0316612efd565b613073565b6000826001600160a01b0316846001600160a01b03161115612d6a579192915b612b3e612d4583600160601b612d378888613ef7565b6000826001600160a01b0316846001600160a01b03161115612da0579192915b6001600160a01b038416612de96fffffffffffffffffffffffffffffffff60601b606085901b16612dd18787613ef7565b6001600160a01b0316866001600160a01b0316612efd565b612b3e9190613ec4565b6000826001600160a01b0316846001600160a01b03161115612e13579192915b612b3e6001600160801b038316612e2a8686613ef7565b6001600160a01b0316600160601b612efd565b606082471015612e5f5760405162461bcd60e51b815260040161054290613a29565b612e6885613089565b612e845760405162461bcd60e51b815260040161054290613d03565b600080866001600160a01b03168587604051612ea09190613625565b60006040518083038185875af1925050503d8060008114612edd576040519150601f19603f3d011682016040523d82523d6000602084013e612ee2565b606091505b5091509150612ef28282866130ba565b979650505050505050565b6000808060001985870986860292508281109083900303905080612f335760008411612f2857600080fd5b50829004905061076c565b808411612f3f57600080fd5b6000848688098084039381119092039190506000612f5f86196001613eac565b8616958690049593849004936000819003046001019050612f808184613ed8565b909317926000612f91876003613ed8565b6002189050612fa08188613ed8565b612fab906002613f1f565b612fb59082613ed8565b9050612fc18188613ed8565b612fcc906002613f1f565b612fd69082613ed8565b9050612fe28188613ed8565b612fed906002613f1f565b612ff79082613ed8565b90506130038188613ed8565b61300e906002613f1f565b6130189082613ed8565b90506130248188613ed8565b61302f906002613f1f565b6130399082613ed8565b90506130458188613ed8565b613050906002613f1f565b61305a9082613ed8565b90506130668186613ed8565b9998505050505050505050565b806001600160801b0381168114610b8657600080fd5b600080826001600160a01b0316803b806020016040519081016040528181526000908060200190933c511192915050565b606083156130c957508161076c565b8251156130d95782518084602001fd5b8160405162461bcd60e51b815260040161054291906137b3565b80518015158114610b8657600080fd5b60008083601f840112613114578182fd5b50813567ffffffffffffffff81111561312b578182fd5b60208301915083602082850101111561314357600080fd5b9250929050565b805161ffff81168114610b8657600080fd5b60006020828403121561316d578081fd5b813561076c8161403a565b6000806040838503121561318a578081fd5b82356131958161403a565b915060208301356131a58161403a565b809150509250929050565b6000806000606084860312156131c4578081fd5b83356131cf8161403a565b925060208401356131df8161403a565b929592945050506040919091013590565b60008060408385031215613202578182fd5b823561320d8161403a565b946020939093013593505050565b60006020828403121561322c578081fd5b61076c826130f3565b600080600060608486031215613249578283fd5b83356132548161403a565b925060208401359150604084013561326b8161403a565b809150509250925092565b60008060408385031215613288578182fd5b823561329381614052565b915060208301356131a581614052565b6000806000606084860312156132b7578283fd5b83356132c281614052565b925060208401356132d281614052565b9150604084013561326b81614061565b600080604083850312156132f4578182fd5b505080516020909101519092909150565b6000806000806060858703121561331a578182fd5b8435935060208501359250604085013567ffffffffffffffff81111561333e578283fd5b61334a87828801613103565b95989497509550505050565b600080600080600080600080610100898b031215613372578586fd5b8835975060208901356133848161403a565b9650604089013561339481614052565b955060608901356133a481614052565b945060808901356133b481614052565b935060a08901356133c481614052565b925060c08901356133d481614052565b915060e08901356133e481614052565b809150509295985092959890939650565b60008060408385031215613407578182fd5b825161341281614061565b60208401519092506131a581614061565b600080600080600060a0868803121561343a578283fd5b855161344581614061565b809550506020860151935060408601519250606086015161346581614061565b608087015190925061347681614061565b809150509295509295909350565b600080600080600080600060e0888a03121561349e578081fd5b87516134a98161403a565b60208901519097506134ba81614052565b95506134c86040890161314a565b94506134d66060890161314a565b93506134e46080890161314a565b925060a088015160ff811681146134f9578182fd5b915061350760c089016130f3565b905092959891949750929550565b600060208284031215613526578081fd5b5035919050565b60006020828403121561353e578081fd5b5051919050565b600080600060608486031215613559578081fd5b8335925060208401359150604084013561326b8161403a565b60008060008060808587031215613587578182fd5b84359350602085013592506040850135915060608501356135a78161403a565b939692955090935050565b600080600080600060a086880312156135c9578283fd5b8535945060208601359350604086013592506060860135915060808601356134768161403a565b60609390931b6bffffffffffffffffffffffff19168352600291820b60e890811b6014850152910b901b6017820152601a0190565b60008251613637818460208701613f36565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03948516815292151560208401526040830191909152909116606082015260a06080820181905260009082015260c00190565b6001600160a01b03949094168452600292830b6020850152910b60408301526001600160801b0316606082015260a06080820181905260009082015260c00190565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b60029190910b815260200190565b600293840b81529190920b60208201526001600160801b03909116604082015260600190565b60029490940b845260208401929092526040830152606082015260800190565b60006020825282518060208401526137d2816040850160208701613f36565b601f01601f19169190910160400192915050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252600a908201526930b6b7bab73a1826b4b760b11b604082015260600190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b602080825260029082015261746f60f01b604082015260600190565b6020808252601590820152743a34b1b5a637bbb2b9101e103a34b1b5aab83832b960591b604082015260600190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526017908201527f7469636b4c6f7765722025207469636b53706163696e67000000000000000000604082015260600190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526017908201527f7469636b55707065722025207469636b53706163696e67000000000000000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252600890820152673134b22ab83832b960c11b604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f616d6f756e743044657369726564206f7220616d6f756e743144657369726564604082015260600190565b60208082526011908201527070656e64696e67476f7665726e616e636560781b604082015260600190565b6020808252600b908201526a70726f746f636f6c46656560a81b604082015260600190565b6020808252600590820152643a37b5b2b760d91b604082015260600190565b6020808252600c908201526b29b430b93832a5b2b2b832b960a11b604082015260600190565b6020808252600a9082015269676f7665726e616e636560b01b604082015260600190565b60208082526006908201526573686172657360d01b604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526005908201526463726f737360d81b604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252600a908201526930b6b7bab73a18a6b4b760b11b604082015260600190565b60208082526008908201526730b9b5a637bbb2b960c11b604082015260600190565b6020808252601190820152707469636b4c6f77657220746f6f206c6f7760781b604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601290820152710e8d2c6d6aae0e0cae440e8dede40d0d2ced60731b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252600e908201526d6d6178546f74616c537570706c7960901b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b918252602082015260400190565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60ff91909116815260200190565b60008219821115613ebf57613ebf61400e565b500190565b600082613ed357613ed3614024565b500490565b6000816000190483118215151615613ef257613ef261400e565b500290565b60006001600160a01b0383811690831681811015613f1757613f1761400e565b039392505050565b600082821015613f3157613f3161400e565b500390565b60005b83811015613f51578181015183820152602001613f39565b838111156117a85750506000910152565b600281046001821680613f7657607f821691505b60208210811415613f9757634e487b7160e01b600052602260045260246000fd5b50919050565b60008260020b80613fb057613fb0614024565b808360020b0791505092915050565b600082613fce57613fce614024565b500690565b60008160020b627fffff19811415613fed57613fed61400e565b9003919050565b6000600160ff1b82141561400a5761400a61400e565b0390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461404f57600080fd5b50565b8060020b811461404f57600080fd5b6001600160801b038116811461404f57600080fdfea2646970667358221220b6c0a93d24cb21be5566f8bef62bec6da63d110e5b85ad6c0e14459d6a78436664736f6c63430008000033",
    "bytecodeSha1": "74b0765a568d4a81eaab315cc6305502e3cb3ea0",
    "compiler": {
      "evm_version": "istanbul",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "version": "0.8.0+commit.c7dfd78e"
    },
    "contractName": "SharpeAI",
    "coverageMap": {
      "branches": {
        "0": {
          "SharpeAI.withdraw": {
            "298": [
              2325,
              2344,
              true
            ]
          }
        },
        "1": {
          "ERC20._approve": {
            "271": [
              10254,
              10273,
              true
            ],
            "272": [
              10332,
              10353,
              true
            ]
          },
          "ERC20._burn": {
            "279": [
              9207,
              9228,
              true
            ],
            "280": [
              9398,
              9422,
              true
            ]
          },
          "ERC20._mint": {
            "278": [
              8498,
              8519,
              true
            ]
          },
          "ERC20._spendAllowance": {
            "273": [
              10966,
              11003,
              false
            ],
            "274": [
              11027,
              11053,
              true
            ]
          },
          "ERC20._transfer": {
            "275": [
              7614,
              7632,
              true
            ],
            "276": [
              7692,
              7708,
              true
            ],
            "277": [
              7863,
              7884,
              true
            ]
          },
          "ERC20.decreaseAllowance": {
            "270": [
              6815,
              6850,
              true
            ]
          }
        },
        "10": {},
        "11": {},
        "12": {},
        "13": {},
        "14": {},
        "15": {},
        "16": {},
        "17": {},
        "18": {},
        "19": {
          "FullMath.mulDiv": {
            "281": [
              1540,
              1550,
              false
            ],
            "282": [
              1574,
              1589,
              true
            ],
            "283": [
              1828,
              1847,
              true
            ]
          }
        },
        "2": {},
        "20": {
          "TickMath.getSqrtRatioAtTick": {
            "301": [
              1468,
              1476,
              true
            ],
            "302": [
              1714,
              1732,
              false
            ],
            "303": [
              1807,
              1825,
              false
            ],
            "304": [
              1900,
              1918,
              false
            ],
            "305": [
              1993,
              2012,
              false
            ],
            "306": [
              2087,
              2106,
              false
            ],
            "307": [
              2181,
              2200,
              false
            ],
            "308": [
              2275,
              2294,
              false
            ],
            "309": [
              2369,
              2389,
              false
            ],
            "310": [
              2464,
              2484,
              false
            ],
            "311": [
              2559,
              2579,
              false
            ],
            "312": [
              2654,
              2674,
              false
            ],
            "313": [
              2749,
              2770,
              false
            ],
            "314": [
              2845,
              2866,
              false
            ],
            "315": [
              2941,
              2962,
              false
            ],
            "316": [
              3037,
              3058,
              false
            ],
            "317": [
              3133,
              3155,
              false
            ],
            "318": [
              3229,
              3251,
              false
            ],
            "319": [
              3324,
              3346,
              false
            ],
            "320": [
              3417,
              3439,
              false
            ],
            "321": [
              3506,
              3514,
              false
            ],
            "322": [
              3899,
              3921,
              true
            ]
          }
        },
        "21": {
          "LiquidityAmounts.getAmount0ForLiquidity": {
            "293": [
              4422,
              4451,
              false
            ]
          },
          "LiquidityAmounts.getAmount1ForLiquidity": {
            "294": [
              5278,
              5307,
              false
            ]
          },
          "LiquidityAmounts.getAmountsForLiquidity": {
            "288": [
              6241,
              6270,
              false
            ],
            "289": [
              6350,
              6379,
              false
            ],
            "290": [
              6489,
              6517,
              false
            ]
          },
          "LiquidityAmounts.getLiquidityForAmount0": {
            "291": [
              1266,
              1295,
              false
            ]
          },
          "LiquidityAmounts.getLiquidityForAmount1": {
            "292": [
              2180,
              2209,
              false
            ]
          },
          "LiquidityAmounts.getLiquidityForAmounts": {
            "284": [
              3218,
              3247,
              false
            ],
            "285": [
              3327,
              3356,
              false
            ],
            "286": [
              3466,
              3494,
              false
            ],
            "287": [
              3713,
              3736,
              true
            ]
          },
          "LiquidityAmounts.toUint128": {
            "295": [
              588,
              609,
              true
            ]
          }
        },
        "22": {},
        "23": {
          "SharpeAI._burnAndCollect": {
            "262": [
              14644,
              14657,
              false
            ],
            "263": [
              15325,
              15341,
              false
            ]
          },
          "SharpeAI._burnLiquidityShare": {
            "265": [
              10420,
              10433,
              false
            ]
          },
          "SharpeAI._calcSharesAndAmounts": {
            "253": [
              7137,
              7153,
              false
            ],
            "254": [
              7369,
              7380,
              false
            ],
            "255": [
              7503,
              7514,
              false
            ],
            "256": [
              7751,
              7760,
              true
            ]
          },
          "SharpeAI._checkRange": {
            "257": [
              13883,
              13904,
              true
            ],
            "258": [
              13949,
              13979,
              true
            ],
            "259": [
              14020,
              14050,
              true
            ],
            "260": [
              14092,
              14121,
              true
            ],
            "261": [
              14168,
              14197,
              true
            ]
          },
          "SharpeAI._mintLiquidity": {
            "264": [
              16087,
              16100,
              false
            ]
          },
          "SharpeAI._poke": {
            "252": [
              6347,
              6360,
              false
            ]
          },
          "SharpeAI.acceptGovernance": {
            "220": [
              23566,
              23597,
              true
            ]
          },
          "SharpeAI.collectProtocol": {
            "218": [
              21202,
              21213,
              false
            ],
            "219": [
              21262,
              21273,
              false
            ]
          },
          "SharpeAI.deposit": {
            "221": [
              4998,
              5016,
              true
            ],
            "222": [
              5020,
              5038,
              true
            ],
            "223": [
              5094,
              5110,
              false
            ],
            "224": [
              5114,
              5133,
              true
            ],
            "225": [
              5467,
              5477,
              true
            ],
            "226": [
              5507,
              5528,
              true
            ],
            "227": [
              5562,
              5583,
              true
            ],
            "228": [
              5654,
              5665,
              false
            ],
            "229": [
              5741,
              5752,
              false
            ],
            "230": [
              5964,
              5995,
              true
            ]
          },
          "SharpeAI.rebalance": {
            "232": [
              11487,
              11513,
              true
            ],
            "233": [
              11735,
              11752,
              true
            ],
            "234": [
              11784,
              11800,
              true
            ],
            "235": [
              12472,
              12487,
              false
            ],
            "236": [
              13416,
              13443,
              false
            ]
          },
          "SharpeAI.setProtocolFee": {
            "231": [
              22189,
              22207,
              true
            ]
          },
          "SharpeAI.sweep": {
            "247": [
              21539,
              21554,
              false
            ],
            "248": [
              21558,
              21573,
              true
            ]
          },
          "SharpeAI.uniswapV3MintCallback": {
            "244": [
              20240,
              20267,
              true
            ],
            "245": [
              20283,
              20294,
              false
            ],
            "246": [
              20351,
              20362,
              false
            ]
          },
          "SharpeAI.uniswapV3SwapCallback": {
            "249": [
              20629,
              20656,
              true
            ],
            "250": [
              20672,
              20688,
              false
            ],
            "251": [
              20759,
              20775,
              false
            ]
          },
          "SharpeAI.withdraw": {
            "237": [
              8682,
              8692,
              true
            ],
            "238": [
              8722,
              8738,
              false
            ],
            "239": [
              8742,
              8761,
              true
            ],
            "240": [
              9641,
              9662,
              true
            ],
            "241": [
              9696,
              9717,
              true
            ],
            "242": [
              9786,
              9797,
              false
            ],
            "243": [
              9846,
              9857,
              false
            ]
          }
        },
        "25": {},
        "3": {},
        "4": {
          "SafeERC20._callOptionalReturn": {
            "299": [
              3735,
              3756,
              false
            ],
            "300": [
              3819,
              3849,
              true
            ]
          }
        },
        "5": {
          "Address.functionCallWithValue": {
            "266": [
              5145,
              5175,
              true
            ],
            "267": [
              5236,
              5254,
              true
            ]
          },
          "Address.verifyCallResult": {
            "268": [
              7735,
              7742,
              false
            ],
            "269": [
              7876,
              7897,
              false
            ]
          }
        },
        "6": {},
        "7": {
          "Math.max": {
            "296": [
              369,
              375,
              true
            ]
          },
          "Math.min": {
            "297": [
              545,
              550,
              true
            ]
          }
        },
        "8": {},
        "9": {}
      },
      "statements": {
        "0": {},
        "1": {
          "ERC20._approve": {
            "90": [
              10246,
              10314
            ],
            "91": [
              10324,
              10392
            ],
            "92": [
              10403,
              10439
            ],
            "93": [
              10449,
              10486
            ]
          },
          "ERC20._burn": {
            "146": [
              9199,
              9266
            ],
            "147": [
              9277,
              9326
            ],
            "148": [
              9390,
              9461
            ],
            "149": [
              9495,
              9539
            ],
            "150": [
              9559,
              9581
            ],
            "151": [
              9592,
              9634
            ],
            "152": [
              9645,
              9693
            ]
          },
          "ERC20._mint": {
            "118": [
              8490,
              8555
            ],
            "119": [
              8566,
              8615
            ],
            "120": [
              8626,
              8648
            ],
            "121": [
              8658,
              8686
            ],
            "122": [
              8696,
              8738
            ],
            "123": [
              8749,
              8797
            ]
          },
          "ERC20._spendAllowance": {
            "94": [
              11019,
              11087
            ],
            "95": [
              11129,
              11180
            ]
          },
          "ERC20._transfer": {
            "96": [
              7606,
              7674
            ],
            "97": [
              7684,
              7748
            ],
            "98": [
              7759,
              7797
            ],
            "99": [
              7855,
              7927
            ],
            "100": [
              7961,
              7999
            ],
            "101": [
              8019,
              8042
            ],
            "102": [
              8053,
              8084
            ],
            "103": [
              8095,
              8132
            ]
          },
          "ERC20.allowance": {
            "83": [
              4084,
              4118
            ]
          },
          "ERC20.approve": {
            "5": [
              4570,
              4602
            ],
            "6": [
              4612,
              4623
            ]
          },
          "ERC20.balanceOf": {
            "31": [
              3501,
              3526
            ]
          },
          "ERC20.decimals": {
            "13": [
              3168,
              3177
            ]
          },
          "ERC20.decreaseAllowance": {
            "55": [
              6807,
              6892
            ],
            "56": [
              6926,
              6986
            ],
            "57": [
              7007,
              7018
            ]
          },
          "ERC20.increaseAllowance": {
            "27": [
              6015,
              6081
            ]
          },
          "ERC20.name": {
            "4": [
              2235,
              2247
            ]
          },
          "ERC20.symbol": {
            "54": [
              2448,
              2462
            ]
          },
          "ERC20.totalSupply": {
            "7": [
              3324,
              3343
            ]
          },
          "ERC20.transfer": {
            "58": [
              3862,
              3890
            ]
          },
          "ERC20.transferFrom": {
            "10": [
              5375,
              5413
            ],
            "11": [
              5423,
              5450
            ],
            "12": [
              5460,
              5471
            ]
          }
        },
        "10": {},
        "11": {},
        "12": {},
        "13": {},
        "14": {},
        "15": {},
        "16": {},
        "17": {},
        "18": {},
        "19": {
          "FullMath.mulDiv": {
            "203": [
              1566,
              1590
            ],
            "204": [
              1691,
              1704
            ],
            "205": [
              1820,
              1848
            ],
            "206": [
              3108,
              3129
            ],
            "207": [
              3713,
              3741
            ],
            "208": [
              3771,
              3799
            ],
            "209": [
              3830,
              3858
            ],
            "210": [
              3889,
              3917
            ],
            "211": [
              3948,
              3976
            ],
            "212": [
              4008,
              4036
            ],
            "213": [
              4474,
              4494
            ]
          }
        },
        "2": {},
        "20": {
          "TickMath.getSqrtRatioAtTick": {
            "159": [
              1734,
              1793
            ],
            "160": [
              1827,
              1886
            ],
            "161": [
              1920,
              1979
            ],
            "162": [
              2014,
              2073
            ],
            "163": [
              2108,
              2167
            ],
            "164": [
              2202,
              2261
            ],
            "165": [
              2296,
              2355
            ],
            "166": [
              2391,
              2450
            ],
            "167": [
              2486,
              2545
            ],
            "168": [
              2581,
              2640
            ],
            "169": [
              2676,
              2735
            ],
            "170": [
              2772,
              2831
            ],
            "171": [
              2868,
              2927
            ],
            "172": [
              2964,
              3023
            ],
            "173": [
              3060,
              3119
            ],
            "174": [
              3157,
              3215
            ],
            "175": [
              3253,
              3310
            ],
            "176": [
              3348,
              3403
            ],
            "177": [
              3441,
              3491
            ],
            "178": [
              3516,
              3549
            ],
            "179": [
              3859,
              3931
            ]
          }
        },
        "21": {
          "LiquidityAmounts.getAmount0ForLiquidity": {
            "196": [
              4453,
              4516
            ],
            "197": [
              4527,
              4732
            ]
          },
          "LiquidityAmounts.getAmount1ForLiquidity": {
            "198": [
              5309,
              5372
            ],
            "199": [
              5383,
              5465
            ]
          },
          "LiquidityAmounts.getAmountsForLiquidity": {
            "184": [
              6272,
              6335
            ],
            "185": [
              6395,
              6468
            ],
            "186": [
              6533,
              6605
            ],
            "187": [
              6619,
              6691
            ],
            "188": [
              6722,
              6795
            ]
          },
          "LiquidityAmounts.getLiquidityForAmount0": {
            "192": [
              1297,
              1360
            ],
            "193": [
              1466,
              1553
            ]
          },
          "LiquidityAmounts.getLiquidityForAmount1": {
            "194": [
              2211,
              2274
            ],
            "195": [
              2284,
              2375
            ]
          },
          "LiquidityAmounts.getLiquidityForAmounts": {
            "180": [
              3249,
              3312
            ],
            "181": [
              3372,
              3445
            ],
            "182": [
              3701,
              3762
            ],
            "183": [
              3793,
              3866
            ]
          },
          "LiquidityAmounts.toUint128": {
            "214": [
              580,
              610
            ]
          }
        },
        "22": {
          "PositionKey.compute": {
            "158": [
              300,
              363
            ]
          }
        },
        "23": {
          "SharpeAI._amountsForLiquidity": {
            "142": [
              18963,
              19210
            ]
          },
          "SharpeAI._burnAndCollect": {
            "130": [
              14674,
              14737
            ],
            "131": [
              15071,
              15107
            ],
            "132": [
              15118,
              15154
            ],
            "133": [
              15358,
              15415
            ],
            "134": [
              15430,
              15487
            ],
            "135": [
              15502,
              15550
            ],
            "136": [
              15565,
              15613
            ],
            "137": [
              15628,
              15692
            ],
            "138": [
              15707,
              15771
            ],
            "139": [
              15793,
              15871
            ]
          },
          "SharpeAI._burnLiquidityShare": {
            "153": [
              10645,
              10702
            ],
            "154": [
              10717,
              10774
            ]
          },
          "SharpeAI._calcSharesAndAmounts": {
            "105": [
              7068,
              7120
            ],
            "106": [
              7234,
              7258
            ],
            "107": [
              7273,
              7297
            ],
            "108": [
              7312,
              7347
            ],
            "109": [
              7397,
              7421
            ],
            "110": [
              7436,
              7481
            ],
            "111": [
              7531,
              7555
            ],
            "112": [
              7570,
              7615
            ],
            "113": [
              7743,
              7770
            ],
            "114": [
              7820,
              7861
            ],
            "115": [
              7876,
              7917
            ],
            "116": [
              7932,
              7987
            ]
          },
          "SharpeAI._checkRange": {
            "124": [
              13875,
              13930
            ],
            "125": [
              13941,
              14001
            ],
            "126": [
              14012,
              14073
            ],
            "127": [
              14084,
              14149
            ],
            "128": [
              14160,
              14225
            ]
          },
          "SharpeAI._liquidityForAmounts": {
            "140": [
              19544,
              19815
            ]
          },
          "SharpeAI._mintLiquidity": {
            "141": [
              16117,
              16178
            ]
          },
          "SharpeAI._poke": {
            "104": [
              6377,
              6411
            ]
          },
          "SharpeAI._position": {
            "129": [
              18606,
              18640
            ]
          },
          "SharpeAI._toUint128": {
            "189": [
              19965,
              19995
            ],
            "190": [
              20006,
              20023
            ]
          },
          "SharpeAI.acceptGovernance": {
            "8": [
              23558,
              23619
            ],
            "9": [
              23630,
              23653
            ]
          },
          "SharpeAI.collectProtocol": {
            "0": [
              21064,
              21120
            ],
            "1": [
              21131,
              21187
            ],
            "2": [
              21215,
              21247
            ],
            "3": [
              21275,
              21307
            ]
          },
          "SharpeAI.deposit": {
            "14": [
              4990,
              5075
            ],
            "15": [
              5086,
              5140
            ],
            "16": [
              5223,
              5250
            ],
            "17": [
              5261,
              5290
            ],
            "18": [
              5366,
              5448
            ],
            "19": [
              5459,
              5488
            ],
            "20": [
              5499,
              5543
            ],
            "21": [
              5554,
              5598
            ],
            "22": [
              5667,
              5726
            ],
            "23": [
              5754,
              5813
            ],
            "24": [
              5863,
              5880
            ],
            "25": [
              5891,
              5945
            ],
            "26": [
              5956,
              6014
            ]
          },
          "SharpeAI.emergencyBurn": {
            "63": [
              22912,
              22954
            ],
            "64": [
              22965,
              23052
            ]
          },
          "SharpeAI.getBalance0": {
            "30": [
              17897,
              17961
            ]
          },
          "SharpeAI.getBalance1": {
            "29": [
              18128,
              18192
            ]
          },
          "SharpeAI.getPositionAmounts": {
            "59": [
              17397,
              17471
            ],
            "60": [
              17581,
              17650
            ],
            "61": [
              17661,
              17730
            ]
          },
          "SharpeAI.getTotalAmounts": {
            "66": [
              16732,
              16789
            ],
            "67": [
              16800,
              16857
            ]
          },
          "SharpeAI.rebalance": {
            "34": [
              11479,
              11530
            ],
            "35": [
              11541,
              11576
            ],
            "36": [
              11587,
              11620
            ],
            "37": [
              11631,
              11664
            ],
            "38": [
              11727,
              11765
            ],
            "39": [
              11776,
              11813
            ],
            "40": [
              12113,
              12165
            ],
            "41": [
              12180,
              12235
            ],
            "42": [
              12401,
              12455
            ],
            "43": [
              12504,
              12710
            ],
            "44": [
              12725,
              12749
            ],
            "45": [
              12764,
              12788
            ],
            "46": [
              12947,
              12996
            ],
            "47": [
              13007,
              13056
            ],
            "48": [
              13069,
              13093
            ],
            "49": [
              13104,
              13128
            ],
            "50": [
              13460,
              13510
            ],
            "51": [
              13525,
              13574
            ],
            "52": [
              13607,
              13657
            ],
            "53": [
              13672,
              13721
            ]
          },
          "SharpeAI.setGovernance": {
            "62": [
              23319,
              23350
            ]
          },
          "SharpeAI.setMaxTotalSupply": {
            "28": [
              22645,
              22677
            ]
          },
          "SharpeAI.setProtocolFee": {
            "32": [
              22181,
              22223
            ],
            "33": [
              22234,
              22260
            ]
          },
          "SharpeAI.setSharpeKeeper": {
            "65": [
              21909,
              21937
            ]
          },
          "SharpeAI.sweep": {
            "81": [
              21531,
              21583
            ],
            "82": [
              21594,
              21624
            ]
          },
          "SharpeAI.uniswapV3MintCallback": {
            "78": [
              20232,
              20268
            ],
            "79": [
              20296,
              20336
            ],
            "80": [
              20364,
              20404
            ]
          },
          "SharpeAI.uniswapV3SwapCallback": {
            "84": [
              20621,
              20657
            ],
            "85": [
              20690,
              20744
            ],
            "86": [
              20777,
              20831
            ]
          },
          "SharpeAI.withdraw": {
            "68": [
              8674,
              8703
            ],
            "69": [
              8714,
              8768
            ],
            "70": [
              8851,
              8876
            ],
            "71": [
              9495,
              9553
            ],
            "72": [
              9564,
              9622
            ],
            "73": [
              9633,
              9677
            ],
            "74": [
              9688,
              9732
            ],
            "75": [
              9799,
              9831
            ],
            "76": [
              9859,
              9891
            ],
            "77": [
              9904,
              9959
            ]
          }
        },
        "25": {},
        "3": {},
        "4": {
          "SafeERC20._callOptionalReturn": {
            "155": [
              3811,
              3896
            ]
          },
          "SafeERC20.safeTransfer": {
            "88": [
              813,
              899
            ]
          },
          "SafeERC20.safeTransferFrom": {
            "117": [
              1050,
              1146
            ]
          }
        },
        "5": {
          "Address.functionCall": {
            "191": [
              4018,
              4077
            ]
          },
          "Address.functionCallWithValue": {
            "200": [
              5137,
              5218
            ],
            "201": [
              5228,
              5288
            ],
            "202": [
              5382,
              5440
            ]
          },
          "Address.isContract": {
            "215": [
              1458,
              1488
            ]
          },
          "Address.verifyCallResult": {
            "216": [
              7758,
              7775
            ],
            "217": [
              8202,
              8222
            ]
          }
        },
        "6": {
          "Context._msgSender": {
            "89": [
              712,
              729
            ]
          }
        },
        "7": {
          "Math.max": {
            "156": [
              362,
              383
            ]
          },
          "Math.min": {
            "157": [
              538,
              558
            ]
          }
        },
        "8": {
          "SafeMath.add": {
            "145": [
              2818,
              2830
            ]
          },
          "SafeMath.div": {
            "144": [
              3913,
              3925
            ]
          },
          "SafeMath.mul": {
            "143": [
              3528,
              3540
            ]
          },
          "SafeMath.sub": {
            "87": [
              3185,
              3197
            ]
          }
        },
        "9": {}
      }
    },
    "dependencies": [
      "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
      "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
      "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
      "Uniswap/uniswap-v3-core@1.0.0/FixedPoint96",
      "Uniswap/uniswap-v3-core@1.0.0/FullMath",
      "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
      "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
      "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3MintCallback",
      "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3Pool",
      "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolActions",
      "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolDerivedState",
      "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolEvents",
      "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolImmutables",
      "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolOwnerActions",
      "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolState",
      "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3SwapCallback",
      "IVault",
      "Uniswap/uniswap-v3-periphery@1.0.0/LiquidityAmounts",
      "OpenZeppelin/openzeppelin-contracts@4.5.0/Math",
      "Uniswap/uniswap-v3-periphery@1.0.0/PositionKey",
      "OpenZeppelin/openzeppelin-contracts@4.5.0/ReentrancyGuard",
      "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20",
      "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath",
      "Uniswap/uniswap-v3-core@1.0.0/TickMath"
    ],
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106102695760003560e01c806387e5e08311610151578063c4a7761e116100c3578063dc2c256f11610087578063dc2c256f146104c7578063dd62ed3e146104da578063eae989a2146104ed578063f39c38a0146104f5578063fa082743146104fd578063fa461e331461050557610269565b8063c4a7761e14610489578063d0c93a7c14610491578063d21220a714610499578063d331bef7146104a1578063d3487997146104b457610269565b8063a9059cbb11610115578063a9059cbb14610414578063a91ef6eb14610427578063ab033ea914610448578063abbffcb91461045b578063b0e21e8a1461046e578063b3a3d00c1461047657610269565b806387e5e083146103d6578063888a9134146103e957806395d89b41146103f1578063a00fa77f146103f9578063a457c2d71461040157610269565b80632ab4d052116101ea57806341aec538116101ae57806341aec5381461039057806351e87af7146103985780635aa6e675146103a0578063629d9405146103a857806370a08231146103b0578063787dce3d146103c357610269565b80632ab4d0521461032b578063313ce56714610333578063365d0ed714610348578063395093511461036a5780633f3e4c111461037d57610269565b80630f35bcac116102315780630f35bcac146102de57806316f0115b146102f357806318160ddd146102fb578063238efcbc1461031057806323b872dd1461031857610269565b80630430c1301461026e57806306fdde0314610283578063095ea7b3146102a15780630c42383a146102c15780630dfe1681146102d6575b600080fd5b61028161027c366004613545565b610518565b005b61028b6105e4565b60405161029891906137b3565b60405180910390f35b6102b46102af3660046131f0565b610676565b604051610298919061374b565b6102c9610698565b6040516102989190613641565b6102c96106a7565b6102e66106cb565b604051610298919061375f565b6102c96106db565b6103036106ff565b6040516102989190613756565b610281610705565b6102b46103263660046131b0565b610743565b610303610773565b61033b610779565b6040516102989190613e9e565b61035b6103563660046135b2565b61077e565b60405161029893929190613e6d565b6102b46103783660046131f0565b6109cf565b61028161038b366004613515565b610a1b565b610303610a4a565b6102e6610af9565b6102c9610b09565b610303610b18565b6103036103be36600461315c565b610b6c565b6102816103d1366004613515565b610b8b565b6102816103e4366004613356565b610bdc565b6102e6611065565b61028b611075565b610303611084565b6102b461040f3660046131f0565b61108a565b6102b46104223660046131f0565b6110f6565b61043a610435366004613276565b61110e565b604051610298929190613e5f565b61028161045636600461315c565b6111ab565b6102816104693660046132a3565b6111f7565b610303611377565b61028161048436600461315c565b61137d565b61043a6113c9565b6102e6611456565b6102c961147a565b61043a6104af366004613572565b61149e565b6102816104c2366004613305565b6116ff565b6102816104d5366004613235565b6117ae565b6103036104e8366004613178565b61187c565b6103036118a7565b6102c96118ad565b6102e66118bc565b610281610513366004613305565b6118cc565b6009546001600160a01b0316331461054b5760405162461bcd60e51b815260040161054290613b39565b60405180910390fd5b600b54610558908461197b565b600b55600c54610568908361197b565b600c5582156105a5576105a56001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168285611987565b81156105df576105df6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168284611987565b505050565b6060600380546105f390613f62565b80601f016020809104026020016040519081016040528092919081815260200182805461061f90613f62565b801561066c5780601f106106415761010080835404028352916020019161066c565b820191906000526020600020905b81548152906001019060200180831161064f57829003601f168201915b5050505050905090565b6000806106816119dd565b905061068e8185856119e1565b5060019392505050565b6008546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600a54600160e81b900460020b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025490565b600a546001600160a01b0316331461072f5760405162461bcd60e51b815260040161054290613aa4565b600980546001600160a01b03191633179055565b60008061074e6119dd565b905061075b858285611a95565b610766858585611ad9565b60019150505b9392505050565b60075481565b601290565b6000806000600260055414156107a65760405162461bcd60e51b815260040161054290613dac565b6002600555871515806107b95750600087115b6107d55760405162461bcd60e51b815260040161054290613a6f565b6001600160a01b038416158015906107f657506001600160a01b0384163014155b6108125760405162461bcd60e51b81526004016105429061388f565b600a5461083490600160a01b8104600290810b91600160b81b9004900b611bfd565b600a5461085690600160d01b8104600290810b91600160e81b9004900b611bfd565b6108608888611cc3565b91945092509050826108845760405162461bcd60e51b815260040161054290613b5d565b858210156108a45760405162461bcd60e51b815260040161054290613829565b848110156108c45760405162461bcd60e51b815260040161054290613c22565b81156108ff576108ff6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611de6565b801561093a5761093a6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611de6565b6109448484611e07565b836001600160a01b0316336001600160a01b03167f4e2ca0515ed1aef1395f66b5303bb5d6f1bf9d61a353fa53f73f8ac9973fa9f685858560405161098b93929190613e6d565b60405180910390a360075461099e6106ff565b11156109bc5760405162461bcd60e51b815260040161054290613d3a565b6001600581905550955095509592505050565b6000806109da6119dd565b6001600160a01b0380821660009081526001602090815260408083209389168352929052205490915061068e9082908690610a16908790613eac565b6119e1565b6009546001600160a01b03163314610a455760405162461bcd60e51b815260040161054290613b39565b600755565b6000610af4600c547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a9e9190613641565b60206040518083038186803b158015610ab657600080fd5b505afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee919061352d565b9061197b565b905090565b600a54600160d01b900460020b81565b6009546001600160a01b031681565b6000610af4600b547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a9e9190613641565b6001600160a01b0381166000908152602081905260409020545b919050565b6009546001600160a01b03163314610bb55760405162461bcd60e51b815260040161054290613b39565b620f42408110610bd75760405162461bcd60e51b815260040161054290613acf565b600655565b60026005541415610bff5760405162461bcd60e51b815260040161054290613dac565b60026005556008546001600160a01b03163314610c2e5760405162461bcd60e51b815260040161054290613b13565b610c388686611ed3565b610c428484611ed3565b610c4c8282611ed3565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610ca757600080fd5b505afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf9190613484565b50505050509150508060020b8460020b1315610d0d5760405162461bcd60e51b815260040161054290613a07565b8060020b8360020b13610d325760405162461bcd60e51b815260040161054290613c46565b600a54600090610d5790600160a01b8104600290810b91600160b81b9004900b611fc8565b5050600a54929350600092610d849250600160d01b8104600290810b9250600160e81b909104900b611fc8565b5050600a54929350610db092600160a01b8104600290810b9350600160b81b909104900b90508461208f565b5050600a54610dd89250600160d01b8104600290810b9250600160e81b909104900b8361208f565b5050505050506000610de8610b18565b90506000610df4610a4a565b90507f210f60adf1db7a02e9db9a49ec7c2eb2060c516cbcfd01a0c05288144738ee5d838383610e226106ff565b604051610e329493929190613793565b60405180910390a18a15610f11576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663128acb083060008e1380610e8757610e828f613ff4565b610e89565b8e5b8e6040518563ffffffff1660e01b8152600401610ea99493929190613679565b6040805180830381600087803b158015610ec257600080fd5b505af1158015610ed6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efa91906132e2565b5050610f04610b18565b9150610f0e610a4a565b90505b6000610f1f8a8a85856122db565b9050610f2c8a8a8361239e565b600a805460028c810b62ffffff908116600160a01b0262ffffff60a01b19928e900b909116600160b81b0262ffffff60b81b199093169290921716179055610f72610b18565b9250610f7c610a4a565b91506000610f8c898986866122db565b90506000610f9c888887876122db565b9050806001600160801b0316826001600160801b0316111561100657610fc38a8a8461239e565b600a805460028c810b62ffffff908116600160d01b0262ffffff60d01b19928e900b909116600160e81b026001600160e81b039093169290921716179055611050565b61101188888361239e565b600a805460028a810b62ffffff908116600160d01b0262ffffff60d01b19928c900b909116600160e81b026001600160e81b0390931692909217161790555b50506001600555505050505050505050505050565b600a54600160b81b900460020b81565b6060600480546105f390613f62565b600c5481565b6000806110956119dd565b6001600160a01b03808216600090815260016020908152604080832093891683529290522054909150838110156110de5760405162461bcd60e51b815260040161054290613de3565b6110eb82868684036119e1565b506001949350505050565b6000806111016119dd565b905061068e818585611ad9565b60008060008060006111208787611fc8565b94509450505092506111338787856123ff565b600654919650945060009061114c90620f42409061197b565b9050611178611171620f424061116b6001600160801b038716856124c6565b906124d2565b87906124de565b955061119e611197620f424061116b6001600160801b038616856124c6565b86906124de565b9450505050509250929050565b6009546001600160a01b031633146111d55760405162461bcd60e51b815260040161054290613b39565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b031633146112215760405162461bcd60e51b815260040161054290613b39565b60405163a34123a760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a34123a7906112719086908690869060040161376d565b6040805180830381600087803b15801561128a57600080fd5b505af115801561129e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c291906132e2565b50506040516309e3d67b60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634f1eb3d89061131f903090879087906001600160801b039081906004016136f5565b6040805180830381600087803b15801561133857600080fd5b505af115801561134c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137091906133f5565b5050505050565b60065481565b6009546001600160a01b031633146113a75760405162461bcd60e51b815260040161054290613b39565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b600a546000908190819081906113f490600160a01b8104600290810b91600160b81b9004900b61110e565b600a549193509150600090819061142090600160d01b8104600290810b91600160e81b9004900b61110e565b9150915061143a8261143486611434610b18565b906124de565b955061144c8161143485611434610a4a565b9450505050509091565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600260055414156114c45760405162461bcd60e51b815260040161054290613dac565b6002600555856114e65760405162461bcd60e51b815260040161054290613b5d565b6001600160a01b0383161580159061150757506001600160a01b0383163014155b6115235760405162461bcd60e51b81526004016105429061388f565b600061152d6106ff565b905061153933886124ea565b60006115518261116b8a61154b610b18565b906124c6565b905060006115658361116b8b61154b610a4a565b600a54909150600090819061159190600160a01b8104600290810b91600160b81b9004900b8d886125db565b600a54919350915060009081906115bf90600160d01b8104600290810b91600160e81b9004900b8f8a6125db565b90925090506115d28261143488876124de565b98506115e28161143487866124de565b97508b8910156116045760405162461bcd60e51b815260040161054290613829565b8a8810156116245760405162461bcd60e51b815260040161054290613c22565b881561165e5761165e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168b8b611987565b8715611698576116986001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168b8a611987565b896001600160a01b0316336001600160a01b03167febff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f8f8c8c6040516116df93929190613e6d565b60405180910390a350505050505050600160058190555094509492505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461173457600080fd5b831561176e5761176e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163386611987565b82156117a8576117a86001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385611987565b50505050565b6009546001600160a01b031633146117d85760405162461bcd60e51b815260040161054290613b39565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415801561184c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b6118685760405162461bcd60e51b815260040161054290613af4565b6105df6001600160a01b0384168284611987565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600b5481565b600a546001600160a01b031681565b600a54600160a01b900460020b81565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461190157600080fd5b600084131561193e5761193e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163386611987565b60008313156117a8576117a86001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385611987565b600061076c8284613f1f565b6105df8363a9059cbb60e01b84846040516024016119a6929190613732565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612681565b3390565b6001600160a01b038316611a075760405162461bcd60e51b815260040161054290613c93565b6001600160a01b038216611a2d5760405162461bcd60e51b8152600401610542906138da565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611a88908590613756565b60405180910390a3505050565b6000611aa1848461187c565b905060001981146117a85781811015611acc5760405162461bcd60e51b815260040161054290613953565b6117a884848484036119e1565b6001600160a01b038316611aff5760405162461bcd60e51b815260040161054290613bdd565b6001600160a01b038216611b255760405162461bcd60e51b8152600401610542906137e6565b611b308383836105df565b6001600160a01b03831660009081526020819052604090205481811015611b695760405162461bcd60e51b8152600401610542906139c1565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611ba0908490613eac565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611bea9190613756565b60405180910390a36117a88484846105df565b6000611c098383611fc8565b5050505090506000816001600160801b031611156105df5760405163a34123a760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a34123a790611c72908690869060009060040161376d565b6040805180830381600087803b158015611c8b57600080fd5b505af1158015611c9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137091906132e2565b600080600080611cd16106ff565b9050600080611cde6113c9565b915091508260001480611cf15750600082115b80611cfc5750600081115b611d1657634e487b7160e01b600052600160045260246000fd5b82611d3257879450869350611d2b8585612710565b9550611ddc565b81611d4857869350611d2b8161116b86866124c6565b80611d5e57879450611d2b8261116b87866124c6565b6000611d7c611d6d8a846124c6565b611d778a866124c6565b612727565b905060008111611d9e5760405162461bcd60e51b815260040161054290613bbe565b611db160016114348461116b858461197b565b9550611dc660016114348561116b858461197b565b9450611dd88261116b858185896124c6565b9650505b5050509250925092565b6117a8846323b872dd60e01b8585856040516024016119a693929190613655565b6001600160a01b038216611e2d5760405162461bcd60e51b815260040161054290613e28565b611e39600083836105df565b8060026000828254611e4b9190613eac565b90915550506001600160a01b03821660009081526020819052604081208054839290611e78908490613eac565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611ebb908590613756565b60405180910390a3611ecf600083836105df565b5050565b7f0000000000000000000000000000000000000000000000000000000000000000600282810b9084900b12611f1a5760405162461bcd60e51b8152600401610542906138ab565b620d89e719600284900b1215611f425760405162461bcd60e51b815260040161054290613c68565b611f4f620d89e719613fd3565b60020b8260020b1315611f745760405162461bcd60e51b815260040161054290613cd7565b611f7e8184613f9d565b60020b15611f9e5760405162461bcd60e51b81526004016105429061391c565b611fa88183613f9d565b60020b156105df5760405162461bcd60e51b81526004016105429061398a565b600080600080600080611fdc308989612736565b60405163514ea4bf60e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063514ea4bf9061202b908490600401613756565b60a06040518083038186803b15801561204357600080fd5b505afa158015612057573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207b9190613423565b939c929b5090995097509095509350505050565b60008080806001600160801b0385161561214a5760405163a34123a760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a34123a7906120f3908a908a908a9060040161376d565b6040805180830381600087803b15801561210c57600080fd5b505af1158015612120573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061214491906132e2565b90945092505b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f1eb3d8308b8b6001600160801b03806040518663ffffffff1660e01b81526004016121a89594939291906136f5565b6040805180830381600087803b1580156121c157600080fd5b505af11580156121d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f991906133f5565b6001600160801b039182169350169050612213828761197b565b935061221f818661197b565b6006549093506000908190801561229057612241620f424061116b89846124c6565b9250612254620f424061116b88846124c6565b9150612260878461197b565b965061226c868361197b565b600b5490965061227c90846124de565b600b55600c5461228c90836124de565b600c555b7f1ac56d7e866e3f5ea9aa92aa11758ead39a0a5f013f3fefb0f47cb9d008edd27878785856040516122c59493929190613e83565b60405180910390a1505050505093509350935093565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561233757600080fd5b505afa15801561234b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236f9190613484565b5050505050509050612394816123848861276c565b61238d8861276c565b8787612b46565b9695505050505050565b6001600160801b038116156105df57604051633c8a7d8d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633c8a7d8d90611c729030908790879087906004016136b3565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561245d57600080fd5b505afa158015612471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124959190613484565b50505050505090506124b9816124aa8861276c565b6124b38861276c565b87612c0a565b9250925050935093915050565b600061076c8284613ed8565b600061076c8284613ec4565b600061076c8284613eac565b6001600160a01b0382166125105760405162461bcd60e51b815260040161054290613b7d565b61251c826000836105df565b6001600160a01b038216600090815260208190526040902054818110156125555760405162461bcd60e51b81526004016105429061384d565b6001600160a01b0383166000908152602081905260408120838303905560028054849290612584908490613f1f565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906125c7908690613756565b60405180910390a36105df836000846105df565b60008060006125ea8787611fc8565b50505050905060006126128561116b88856001600160801b03166124c690919063ffffffff16565b90508015612676576000806000806126338c8c61262e88612ca6565b61208f565b9296509094509250905061265561264e8a61116b858e6124c6565b85906124de565b975061266f6126688a61116b848e6124c6565b84906124de565b9650505050505b505094509492505050565b60006126d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612cd19092919063ffffffff16565b8051909150156105df57808060200190518101906126f4919061321b565b6105df5760405162461bcd60e51b815260040161054290613d62565b600081831015612720578161076c565b5090919050565b6000818310612720578161076c565b600083838360405160200161274d939291906135f0565b6040516020818303038152906040528051906020012090509392505050565b60008060008360020b12612783578260020b612790565b8260020b61279090613ff4565b90506000600182166127a657600160801b6127b8565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156127f75760806127f2826ffff97272373d413259a46990580e213a613ed8565b901c90505b600482161561282157608061281c826ffff2e50f5f656932ef12357cf3c7fdcc613ed8565b901c90505b600882161561284b576080612846826fffe5caca7e10e4e61c3624eaa0941cd0613ed8565b901c90505b6010821615612875576080612870826fffcb9843d60f6159c9db58835c926644613ed8565b901c90505b602082161561289f57608061289a826fff973b41fa98c081472e6896dfb254c0613ed8565b901c90505b60408216156128c95760806128c4826fff2ea16466c96a3843ec78b326b52861613ed8565b901c90505b60808216156128f35760806128ee826ffe5dee046a99a2a811c461f1969c3053613ed8565b901c90505b61010082161561291e576080612919826ffcbe86c7900a88aedcffc83b479aa3a4613ed8565b901c90505b610200821615612949576080612944826ff987a7253ac413176f2b074cf7815e54613ed8565b901c90505b61040082161561297457608061296f826ff3392b0822b70005940c7a398e4b70f3613ed8565b901c90505b61080082161561299f57608061299a826fe7159475a2c29b7443b29c7fa6e889d9613ed8565b901c90505b6110008216156129ca5760806129c5826fd097f3bdfd2022b8845ad8f792aa5825613ed8565b901c90505b6120008216156129f55760806129f0826fa9f746462d870fdf8a65dc1f90e061e5613ed8565b901c90505b614000821615612a20576080612a1b826f70d869a156d2a1b890bb3df62baf32f7613ed8565b901c90505b618000821615612a4b576080612a46826f31be135f97d08fd981231505542fcfa6613ed8565b901c90505b62010000821615612a77576080612a72826f09aa508b5b7a84e1c677de54f3e99bc9613ed8565b901c90505b62020000821615612aa2576080612a9d826e5d6af8dedb81196699c329225ee604613ed8565b901c90505b62040000821615612acc576080612ac7826d2216e584f5fa1ea926041bedfe98613ed8565b901c90505b62080000821615612af4576080612aef826b048a170391f7dc42444e8fa2613ed8565b901c90505b60008460020b1315612b0f57612b0c81600019613ec4565b90505b612b1e64010000000082613fbf565b15612b2a576001612b2d565b60005b612b3e9060ff16602083901c613eac565b949350505050565b6000836001600160a01b0316856001600160a01b03161115612b66579293925b846001600160a01b0316866001600160a01b031611612b9157612b8a858585612ce0565b9050612c01565b836001600160a01b0316866001600160a01b03161015612bf3576000612bb8878686612ce0565b90506000612bc7878986612d4a565b9050806001600160801b0316826001600160801b031610612be85780612bea565b815b92505050612c01565b612bfe858584612d4a565b90505b95945050505050565b600080836001600160a01b0316856001600160a01b03161115612c2b579293925b846001600160a01b0316866001600160a01b031611612c5657612c4f858585612d80565b9150612c9d565b836001600160a01b0316866001600160a01b03161015612c8f57612c7b868585612d80565b9150612c88858785612df3565b9050612c9d565b612c9a858585612df3565b90505b94509492505050565b60006001600160801b03821115612ccd57634e487b7160e01b600052600160045260246000fd5b5090565b6060612b3e8484600085612e3d565b6000826001600160a01b0316846001600160a01b03161115612d00579192915b6000612d23856001600160a01b0316856001600160a01b0316600160601b612efd565b9050612c01612d458483612d378989613ef7565b6001600160a01b0316612efd565b613073565b6000826001600160a01b0316846001600160a01b03161115612d6a579192915b612b3e612d4583600160601b612d378888613ef7565b6000826001600160a01b0316846001600160a01b03161115612da0579192915b6001600160a01b038416612de96fffffffffffffffffffffffffffffffff60601b606085901b16612dd18787613ef7565b6001600160a01b0316866001600160a01b0316612efd565b612b3e9190613ec4565b6000826001600160a01b0316846001600160a01b03161115612e13579192915b612b3e6001600160801b038316612e2a8686613ef7565b6001600160a01b0316600160601b612efd565b606082471015612e5f5760405162461bcd60e51b815260040161054290613a29565b612e6885613089565b612e845760405162461bcd60e51b815260040161054290613d03565b600080866001600160a01b03168587604051612ea09190613625565b60006040518083038185875af1925050503d8060008114612edd576040519150601f19603f3d011682016040523d82523d6000602084013e612ee2565b606091505b5091509150612ef28282866130ba565b979650505050505050565b6000808060001985870986860292508281109083900303905080612f335760008411612f2857600080fd5b50829004905061076c565b808411612f3f57600080fd5b6000848688098084039381119092039190506000612f5f86196001613eac565b8616958690049593849004936000819003046001019050612f808184613ed8565b909317926000612f91876003613ed8565b6002189050612fa08188613ed8565b612fab906002613f1f565b612fb59082613ed8565b9050612fc18188613ed8565b612fcc906002613f1f565b612fd69082613ed8565b9050612fe28188613ed8565b612fed906002613f1f565b612ff79082613ed8565b90506130038188613ed8565b61300e906002613f1f565b6130189082613ed8565b90506130248188613ed8565b61302f906002613f1f565b6130399082613ed8565b90506130458188613ed8565b613050906002613f1f565b61305a9082613ed8565b90506130668186613ed8565b9998505050505050505050565b806001600160801b0381168114610b8657600080fd5b600080826001600160a01b0316803b806020016040519081016040528181526000908060200190933c511192915050565b606083156130c957508161076c565b8251156130d95782518084602001fd5b8160405162461bcd60e51b815260040161054291906137b3565b80518015158114610b8657600080fd5b60008083601f840112613114578182fd5b50813567ffffffffffffffff81111561312b578182fd5b60208301915083602082850101111561314357600080fd5b9250929050565b805161ffff81168114610b8657600080fd5b60006020828403121561316d578081fd5b813561076c8161403a565b6000806040838503121561318a578081fd5b82356131958161403a565b915060208301356131a58161403a565b809150509250929050565b6000806000606084860312156131c4578081fd5b83356131cf8161403a565b925060208401356131df8161403a565b929592945050506040919091013590565b60008060408385031215613202578182fd5b823561320d8161403a565b946020939093013593505050565b60006020828403121561322c578081fd5b61076c826130f3565b600080600060608486031215613249578283fd5b83356132548161403a565b925060208401359150604084013561326b8161403a565b809150509250925092565b60008060408385031215613288578182fd5b823561329381614052565b915060208301356131a581614052565b6000806000606084860312156132b7578283fd5b83356132c281614052565b925060208401356132d281614052565b9150604084013561326b81614061565b600080604083850312156132f4578182fd5b505080516020909101519092909150565b6000806000806060858703121561331a578182fd5b8435935060208501359250604085013567ffffffffffffffff81111561333e578283fd5b61334a87828801613103565b95989497509550505050565b600080600080600080600080610100898b031215613372578586fd5b8835975060208901356133848161403a565b9650604089013561339481614052565b955060608901356133a481614052565b945060808901356133b481614052565b935060a08901356133c481614052565b925060c08901356133d481614052565b915060e08901356133e481614052565b809150509295985092959890939650565b60008060408385031215613407578182fd5b825161341281614061565b60208401519092506131a581614061565b600080600080600060a0868803121561343a578283fd5b855161344581614061565b809550506020860151935060408601519250606086015161346581614061565b608087015190925061347681614061565b809150509295509295909350565b600080600080600080600060e0888a03121561349e578081fd5b87516134a98161403a565b60208901519097506134ba81614052565b95506134c86040890161314a565b94506134d66060890161314a565b93506134e46080890161314a565b925060a088015160ff811681146134f9578182fd5b915061350760c089016130f3565b905092959891949750929550565b600060208284031215613526578081fd5b5035919050565b60006020828403121561353e578081fd5b5051919050565b600080600060608486031215613559578081fd5b8335925060208401359150604084013561326b8161403a565b60008060008060808587031215613587578182fd5b84359350602085013592506040850135915060608501356135a78161403a565b939692955090935050565b600080600080600060a086880312156135c9578283fd5b8535945060208601359350604086013592506060860135915060808601356134768161403a565b60609390931b6bffffffffffffffffffffffff19168352600291820b60e890811b6014850152910b901b6017820152601a0190565b60008251613637818460208701613f36565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03948516815292151560208401526040830191909152909116606082015260a06080820181905260009082015260c00190565b6001600160a01b03949094168452600292830b6020850152910b60408301526001600160801b0316606082015260a06080820181905260009082015260c00190565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b60029190910b815260200190565b600293840b81529190920b60208201526001600160801b03909116604082015260600190565b60029490940b845260208401929092526040830152606082015260800190565b60006020825282518060208401526137d2816040850160208701613f36565b601f01601f19169190910160400192915050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252600a908201526930b6b7bab73a1826b4b760b11b604082015260600190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b602080825260029082015261746f60f01b604082015260600190565b6020808252601590820152743a34b1b5a637bbb2b9101e103a34b1b5aab83832b960591b604082015260600190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526017908201527f7469636b4c6f7765722025207469636b53706163696e67000000000000000000604082015260600190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526017908201527f7469636b55707065722025207469636b53706163696e67000000000000000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252600890820152673134b22ab83832b960c11b604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f616d6f756e743044657369726564206f7220616d6f756e743144657369726564604082015260600190565b60208082526011908201527070656e64696e67476f7665726e616e636560781b604082015260600190565b6020808252600b908201526a70726f746f636f6c46656560a81b604082015260600190565b6020808252600590820152643a37b5b2b760d91b604082015260600190565b6020808252600c908201526b29b430b93832a5b2b2b832b960a11b604082015260600190565b6020808252600a9082015269676f7665726e616e636560b01b604082015260600190565b60208082526006908201526573686172657360d01b604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526005908201526463726f737360d81b604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252600a908201526930b6b7bab73a18a6b4b760b11b604082015260600190565b60208082526008908201526730b9b5a637bbb2b960c11b604082015260600190565b6020808252601190820152707469636b4c6f77657220746f6f206c6f7760781b604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601290820152710e8d2c6d6aae0e0cae440e8dede40d0d2ced60731b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252600e908201526d6d6178546f74616c537570706c7960901b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b918252602082015260400190565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60ff91909116815260200190565b60008219821115613ebf57613ebf61400e565b500190565b600082613ed357613ed3614024565b500490565b6000816000190483118215151615613ef257613ef261400e565b500290565b60006001600160a01b0383811690831681811015613f1757613f1761400e565b039392505050565b600082821015613f3157613f3161400e565b500390565b60005b83811015613f51578181015183820152602001613f39565b838111156117a85750506000910152565b600281046001821680613f7657607f821691505b60208210811415613f9757634e487b7160e01b600052602260045260246000fd5b50919050565b60008260020b80613fb057613fb0614024565b808360020b0791505092915050565b600082613fce57613fce614024565b500690565b60008160020b627fffff19811415613fed57613fed61400e565b9003919050565b6000600160ff1b82141561400a5761400a61400e565b0390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461404f57600080fd5b50565b8060020b811461404f57600080fd5b6001600160801b038116811461404f57600080fdfea2646970667358221220b6c0a93d24cb21be5566f8bef62bec6da63d110e5b85ad6c0e14459d6a78436664736f6c63430008000033",
    "deployedSourceMap": "1648:22126:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20924:391;;;;;;:::i;:::-;;:::i;:::-;;2156:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2678:27:23:-;;;:::i;:::-;;;;;;;:::i;2492:30::-;;;:::i;2873:23::-;;;:::i;:::-;;;;;;;:::i;2449:36::-;;;:::i;3244:106:1:-;;;:::i;:::-;;;;;;;:::i;23510:151:23:-;;;:::i;5192:286:1:-;;;;;;:::i;:::-;;:::i;2642:29:23:-;;;:::i;3093:91:1:-;;;:::i;:::-;;;;;;;:::i;4629:1393:23:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;5873:236:1:-;;;;;;:::i;:::-;;:::i;22558:127:23:-;;;;;;:::i;:::-;;:::i;18064:136::-;;;:::i;2843:23::-;;;:::i;2712:25::-;;;:::i;17833:136::-;;;:::i;3408:125:1:-;;;;;;:::i;:::-;;:::i;22100:168:23:-;;;;;;:::i;:::-;;:::i;11199:2541::-;;;;;;:::i;:::-;;:::i;2814:22::-;;;:::i;2367:102:1:-;;;:::i;2945:35:23:-;;;:::i;6596:429:1:-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;17114:624:23:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;23240:118::-;;;;;;:::i;:::-;;:::i;22767:293::-;;;;;;:::i;:::-;;:::i;2609:26::-;;;:::i;21826:119::-;;;;;;:::i;:::-;;:::i;16423:442::-;;;:::i;2566:34::-;;;:::i;2529:30::-;;;:::i;8460:1507::-;;;;;;:::i;:::-;;:::i;20083:329::-;;;;;;:::i;:::-;;:::i;21405:227::-;;;;;;:::i;:::-;;:::i;3976:149:1:-;;;;;;:::i;:::-;;:::i;2903:35:23:-;;;:::i;2744:32::-;;;:::i;2785:22::-;;;:::i;20464:375::-;;;;;;:::i;:::-;;:::i;20924:391::-;23726:10;;-1:-1:-1;;;;;23726:10:23;23712;:24;23704:47;;;;-1:-1:-1;;;23704:47:23;;;;;;;:::i;:::-;;;;;;;;;21087:20:::1;::::0;:33:::1;::::0;21112:7;21087:24:::1;:33::i;:::-;21064:20;:56:::0;21154:20:::1;::::0;:33:::1;::::0;21179:7;21154:24:::1;:33::i;:::-;21131:20;:56:::0;21202:11;;21198:49:::1;;21215:32;-1:-1:-1::0;;;;;21215:6:23::1;:19;21235:2:::0;21239:7;21215:19:::1;:32::i;:::-;21262:11:::0;;21258:49:::1;;21275:32;-1:-1:-1::0;;;;;21275:6:23::1;:19;21295:2:::0;21299:7;21275:19:::1;:32::i;:::-;20924:391:::0;;;:::o;2156:98:1:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:1;;4433:197;-1:-1:-1;;;4433:197:1:o;2678:27:23:-;;;-1:-1:-1;;;;;2678:27:23;;:::o;2492:30::-;;;:::o;2873:23::-;;;-1:-1:-1;;;2873:23:23;;;;;:::o;2449:36::-;;;:::o;3244:106:1:-;3331:12;;3244:106;:::o;23510:151:23:-;23580:17;;-1:-1:-1;;;;;23580:17:23;23566:10;:31;23558:61;;;;-1:-1:-1;;;23558:61:23;;;;;;;:::i;:::-;23630:10;:23;;-1:-1:-1;;;;;;23630:23:23;23643:10;23630:23;;;23510:151::o;5192:286:1:-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;;:::o;2642:29:23:-;;;;:::o;3093:91:1:-;3175:2;3093:91;:::o;4629:1393:23:-;4888:14;4917:15;4947;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;1744:1;2455:7;:18;4998::23;;;;:40:::1;;;5037:1;5020:14;:18;4998:40;4990:85;;;;-1:-1:-1::0;;;4990:85:23::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5094:16:23;::::1;::::0;;::::1;::::0;:39:::1;;-1:-1:-1::0;;;;;;5114:19:23;::::1;5128:4;5114:19;;5094:39;5086:54;;;;-1:-1:-1::0;;;5086:54:23::1;;;;;;;:::i;:::-;5229:9;::::0;5223:27:::1;::::0;-1:-1:-1;;;5229:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;5240:9:23;::::1;::::0;::::1;5223:5;:27::i;:::-;5267:10;::::0;5261:29:::1;::::0;-1:-1:-1;;;5267:10:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;5279:10:23;::::1;::::0;::::1;5261:5;:29::i;:::-;5395:53;5417:14;5433;5395:21;:53::i;:::-;5366:82:::0;;-1:-1:-1;5366:82:23;-1:-1:-1;5366:82:23;-1:-1:-1;5467:10:23;5459:29:::1;;;;-1:-1:-1::0;;;5459:29:23::1;;;;;;;:::i;:::-;5518:10;5507:7;:21;;5499:44;;;;-1:-1:-1::0;;;5499:44:23::1;;;;;;;:::i;:::-;5573:10;5562:7;:21;;5554:44;;;;-1:-1:-1::0;;;5554:44:23::1;;;;;;;:::i;:::-;5654:11:::0;;5650:76:::1;;5667:59;-1:-1:-1::0;;;;;5667:6:23::1;:23;5691:10;5711:4;5718:7:::0;5667:23:::1;:59::i;:::-;5741:11:::0;;5737:76:::1;;5754:59;-1:-1:-1::0;;;;;5754:6:23::1;:23;5778:10;5798:4;5805:7:::0;5754:23:::1;:59::i;:::-;5863:17;5869:2;5873:6;5863:5;:17::i;:::-;5916:2;-1:-1:-1::0;;;;;5896:49:23::1;5904:10;-1:-1:-1::0;;;;;5896:49:23::1;;5920:6;5928:7;5937;5896:49;;;;;;;;:::i;:::-;;;;;;;;5981:14;;5964:13;:11;:13::i;:::-;:31;;5956:58;;;;-1:-1:-1::0;;;5956:58:23::1;;;;;;;:::i;:::-;1701:1:0::0;2628:7;:22;;;;4629:1393:23;;;;;;;;;:::o;5873:236:1:-;5961:4;5977:13;5993:12;:10;:12::i;:::-;-1:-1:-1;;;;;6040:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;5977:28;;-1:-1:-1;6015:66:1;;5977:28;;6031:7;;6040:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;22558:127:23:-;23726:10;;-1:-1:-1;;;;;23726:10:23;23712;:24;23704:47;;;;-1:-1:-1;;;23704:47:23;;;;;;;:::i;:::-;22645:14:::1;:32:::0;22558:127::o;18064:136::-;18108:7;18135:57;18171:20;;18135:6;-1:-1:-1;;;;;18135:16:23;;18160:4;18135:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;:57::i;:::-;18128:64;;18064:136;:::o;2843:23::-;;;-1:-1:-1;;;2843:23:23;;;;;:::o;2712:25::-;;;-1:-1:-1;;;;;2712:25:23;;:::o;17833:136::-;17877:7;17904:57;17940:20;;17904:6;-1:-1:-1;;;;;17904:16:23;;17929:4;17904:31;;;;;;;;;;;;;;;:::i;3408:125:1:-;-1:-1:-1;;;;;3508:18:1;;3482:7;3508:18;;;;;;;;;;;3408:125;;;;:::o;22100:168:23:-;23726:10;;-1:-1:-1;;;;;23726:10:23;23712;:24;23704:47;;;;-1:-1:-1;;;23704:47:23;;;;;;;:::i;:::-;22204:3:::1;22189:12;:18;22181:42;;;;-1:-1:-1::0;;;22181:42:23::1;;;;;;;:::i;:::-;22234:11;:26:::0;22100:168::o;11199:2541::-;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;1744:1;2455:7;:18;11501:12:23::1;::::0;-1:-1:-1;;;;;11501:12:23::1;11487:10;:26;11479:51;;;;-1:-1:-1::0;;;11479:51:23::1;;;;;;;:::i;:::-;11541:35;11553:10;11565;11541:11;:35::i;:::-;11587:33;11599:9;11610;11587:11;:33::i;:::-;11631;11643:9;11654;11631:11;:33::i;:::-;11680:10;11704:4;-1:-1:-1::0;;;;;11704:10:23::1;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11677:39;;;;;;;;11748:4;11735:17;;:9;:17;;;;11727:38;;;;-1:-1:-1::0;;;11727:38:23::1;;;;;;;:::i;:::-;11796:4;11784:16;;:9;:16;;;11776:37;;;;-1:-1:-1::0;;;11776:37:23::1;;;;;;;:::i;:::-;11994:9;::::0;11951:21:::1;::::0;11984:31:::1;::::0;-1:-1:-1;;;11994:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;12005:9:23;::::1;::::0;::::1;11984;:31::i;:::-;-1:-1:-1::0;;12075:10:23::1;::::0;11950:65;;-1:-1:-1;12031:22:23::1;::::0;12065:33:::1;::::0;-1:-1:-1;;;;12075:10:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;;12087:10:23;;::::1;::::0;::::1;12065:9;:33::i;:::-;-1:-1:-1::0;;12129:9:23::1;::::0;12030:68;;-1:-1:-1;12113:52:23::1;::::0;-1:-1:-1;;;12129:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;;12140:9:23;;::::1;::::0;::::1;::::0;-1:-1:-1;12151:13:23;12113:15:::1;:52::i;:::-;-1:-1:-1::0;;12196:10:23::1;::::0;12180:55:::1;::::0;-1:-1:-1;;;;12196:10:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;;12208:10:23;;::::1;::::0;::::1;12220:14:::0;12180:15:::1;:55::i;:::-;;;;;2484:1:0;;12315:16:23;12334:13;:11;:13::i;:::-;12315:32;;12358:16;12377:13;:11;:13::i;:::-;12358:32;;12406:49;12415:4;12421:8;12431;12441:13;:11;:13::i;:::-;12406:49;;;;;;;;;:::i;:::-;;;;;;;;12472:15:::0;;12468:332:::1;;-1:-1:-1::0;;;;;12504:4:23::1;:9;;12540:4;12577:1;12564:14:::0;::::1;::::0;12597:41:::1;;12627:11;12628:10:::0;12627:11:::1;:::i;:::-;12597:41;;;12614:10;12597:41;12657:17;12504:206;;;;;;;;;;;;;;;;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12736:13;:11;:13::i;:::-;12725:24;;12775:13;:11;:13::i;:::-;12764:24;;12468:332;12852:17;12872:64;12893:10;12905;12917:8;12927;12872:20;:64::i;:::-;12852:84;;12947:49;12962:10;12974;12986:9;12947:14;:49::i;:::-;13008:9;13007:49:::0;;::::1;::::0;;::::1;;::::0;;::::1;-1:-1:-1::0;;;13007:49:23::1;-1:-1:-1::0;;;;13007:49:23;;;::::1;::::0;;::::1;-1:-1:-1::0;;;13007:49:23::1;-1:-1:-1::0;;;;13007:49:23;;::::1;::::0;;;::::1;;;::::0;;13080:13:::1;:11;:13::i;:::-;13069:24;;13115:13;:11;:13::i;:::-;13104:24;;13220:20;13243:62;13264:9;13275;13286:8;13296;13243:20;:62::i;:::-;13220:85;;13316:20;13339:62;13360:9;13371;13382:8;13392;13339:20;:62::i;:::-;13316:85;;13431:12;-1:-1:-1::0;;;;;13416:27:23::1;:12;-1:-1:-1::0;;;;;13416:27:23::1;;13412:321;;;13460:50;13475:9;13486;13497:12;13460:14;:50::i;:::-;13526:10;13525:49:::0;;::::1;::::0;;::::1;;::::0;;::::1;-1:-1:-1::0;;;13525:49:23::1;-1:-1:-1::0;;;;13525:49:23;;;::::1;::::0;;::::1;-1:-1:-1::0;;;13525:49:23::1;-1:-1:-1::0;;;;;13525:49:23;;::::1;::::0;;;::::1;;;::::0;;13412:321:::1;;;13607:50;13622:9;13633;13644:12;13607:14;:50::i;:::-;13673:10;13672:49:::0;;::::1;::::0;;::::1;;::::0;;::::1;-1:-1:-1::0;;;13672:49:23::1;-1:-1:-1::0;;;;13672:49:23;;;::::1;::::0;;::::1;-1:-1:-1::0;;;13672:49:23::1;-1:-1:-1::0;;;;;13672:49:23;;::::1;::::0;;;::::1;;;::::0;;13412:321:::1;-1:-1:-1::0;;1701:1:0;2628:7;:22;-1:-1:-1;;;;;;;;;;;;11199:2541:23:o;2814:22::-;;;-1:-1:-1;;;2814:22:23;;;;;:::o;2367:102:1:-;2423:13;2455:7;2448:14;;;;;:::i;2945:35:23:-;;;;:::o;6596:429:1:-;6689:4;6705:13;6721:12;:10;:12::i;:::-;-1:-1:-1;;;;;6770:18:1;;;6743:24;6770:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;6705:28;;-1:-1:-1;6815:35:1;;;;6807:85;;;;-1:-1:-1;;;6807:85:1;;;;;;;:::i;:::-;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;:::-;-1:-1:-1;7014:4:1;;6596:429;-1:-1:-1;;;;6596:429:1:o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;17114:624:23:-;17224:15;17241;17275:17;17298:19;17319;17355:31;17365:9;17376;17355;:31::i;:::-;17274:112;;;;;;;;17418:53;17439:9;17450;17461;17418:20;:53::i;:::-;17558:11;;17397:74;;-1:-1:-1;17397:74:23;-1:-1:-1;17519:19:23;;17541:29;;17549:3;;17541:16;:29::i;:::-;17519:51;-1:-1:-1;17591:59:23;17603:46;17645:3;17603:37;-1:-1:-1;;;;;17603:20:23;;17519:51;17603:24;:37::i;:::-;:41;;:46::i;:::-;17591:7;;:11;:59::i;:::-;17581:69;-1:-1:-1;17671:59:23;17683:46;17725:3;17683:37;-1:-1:-1;;;;;17683:20:23;;17708:11;17683:24;:37::i;:46::-;17671:7;;:11;:59::i;:::-;17661:69;;17114:624;;;;;;;;;:::o;23240:118::-;23726:10;;-1:-1:-1;;;;;23726:10:23;23712;:24;23704:47;;;;-1:-1:-1;;;23704:47:23;;;;;;;:::i;:::-;23319:17:::1;:31:::0;;-1:-1:-1;;;;;;23319:31:23::1;-1:-1:-1::0;;;;;23319:31:23;;;::::1;::::0;;;::::1;::::0;;23240:118::o;22767:293::-;23726:10;;-1:-1:-1;;;;;23726:10:23;23712;:24;23704:47;;;;-1:-1:-1;;;23704:47:23;;;;;;;:::i;:::-;22912:42:::1;::::0;-1:-1:-1;;;22912:42:23;;-1:-1:-1;;;;;22912:4:23::1;:9;::::0;::::1;::::0;:42:::1;::::0;22922:9;;22933;;22944;;22912:42:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;22965:87:23::1;::::0;-1:-1:-1;;;22965:87:23;;-1:-1:-1;;;;;22965:4:23::1;:12;::::0;::::1;::::0;:87:::1;::::0;22986:4:::1;::::0;22993:9;;23004;;-1:-1:-1;;;;;23015:17:23;;;22965:87:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;22767:293:::0;;;:::o;2609:26::-;;;;:::o;21826:119::-;23726:10;;-1:-1:-1;;;;;23726:10:23;23712;:24;23704:47;;;;-1:-1:-1;;;23704:47:23;;;;;;;:::i;:::-;21909:12:::1;:28:::0;;-1:-1:-1;;;;;;21909:28:23::1;-1:-1:-1::0;;;;;21909:28:23;;;::::1;::::0;;;::::1;::::0;;21826:119::o;16423:442::-;16587:9;;16480:14;;;;;;;;16568:40;;-1:-1:-1;;;16587:9:23;;;;;;;-1:-1:-1;;;16598:9:23;;;;16568:18;:40::i;:::-;16698:10;;16523:85;;-1:-1:-1;16523:85:23;-1:-1:-1;16620:20:23;;;;16679:42;;-1:-1:-1;;;16698:10:23;;;;;;;-1:-1:-1;;;16710:10:23;;;;16679:18;:42::i;:::-;16619:102;;;;16741:48;16776:12;16741:30;16759:11;16741:13;:11;:13::i;:::-;:17;;:30::i;:48::-;16732:57;;16809:48;16844:12;16809:30;16827:11;16809:13;:11;:13::i;:48::-;16800:57;;16423:442;;;;;;:::o;2566:34::-;;;:::o;2529:30::-;;;:::o;8460:1507::-;8629:15;8646;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;1744:1;2455:7;:18;8682:10:23;8674:29:::1;;;;-1:-1:-1::0;;;8674:29:23::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8722:16:23;::::1;::::0;;::::1;::::0;:39:::1;;-1:-1:-1::0;;;;;;8742:19:23;::::1;8756:4;8742:19;;8722:39;8714:54;;;;-1:-1:-1::0;;;8714:54:23::1;;;;;;;:::i;:::-;8779:19;8801:13;:11;:13::i;:::-;8779:35;;8851:25;8857:10;8869:6;8851:5;:25::i;:::-;8957:21;8981:42;9011:11;8981:25;8999:6;8981:13;:11;:13::i;:::-;:17:::0;::::1;:25::i;:42::-;8957:66;;9034:21;9058:42;9088:11;9058:25;9076:6;9058:13;:11;:13::i;:42::-;9254:9;::::0;9034:66;;-1:-1:-1;9177:19:23::1;::::0;;;9234:62:::1;::::0;-1:-1:-1;;;9254:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;9265:9:23;::::1;::::0;::::1;9276:6:::0;9284:11;9234:19:::1;:62::i;:::-;9387:10;::::0;9176:120;;-1:-1:-1;9176:120:23;-1:-1:-1;9308:20:23::1;::::0;;;9367:64:::1;::::0;-1:-1:-1;;;9387:10:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;9399:10:23;::::1;::::0;::::1;9411:6:::0;9419:11;9367:19:::1;:64::i;:::-;9307:124:::0;;-1:-1:-1;9307:124:23;-1:-1:-1;9505:48:23::1;9307:124:::0;9505:30:::1;:13:::0;9523:11;9505:17:::1;:30::i;:48::-;9495:58:::0;-1:-1:-1;9574:48:23::1;9609:12:::0;9574:30:::1;:13:::0;9592:11;9574:17:::1;:30::i;:48::-;9564:58;;9652:10;9641:7;:21;;9633:44;;;;-1:-1:-1::0;;;9633:44:23::1;;;;;;;:::i;:::-;9707:10;9696:7;:21;;9688:44;;;;-1:-1:-1::0;;;9688:44:23::1;;;;;;;:::i;:::-;9786:11:::0;;9782:49:::1;;9799:32;-1:-1:-1::0;;;;;9799:6:23::1;:19;9819:2:::0;9823:7;9799:19:::1;:32::i;:::-;9846:11:::0;;9842:49:::1;;9859:32;-1:-1:-1::0;;;;;9859:6:23::1;:19;9879:2:::0;9883:7;9859:19:::1;:32::i;:::-;9930:2;-1:-1:-1::0;;;;;9909:50:23::1;9918:10;-1:-1:-1::0;;;;;9909:50:23::1;;9934:6;9942:7;9951;9909:50;;;;;;;;:::i;:::-;;;;;;;;2484:1:0;;;;;;;1701::::0;2628:7;:22;;;;8460:1507:23;;;;;;;:::o;20083:329::-;20240:10;-1:-1:-1;;;;;20262:4:23;20240:27;;20232:36;;;;;;20283:11;;20279:57;;20296:40;-1:-1:-1;;;;;20296:6:23;:19;20316:10;20328:7;20296:19;:40::i;:::-;20351:11;;20347:57;;20364:40;-1:-1:-1;;;;;20364:6:23;:19;20384:10;20396:7;20364:19;:40::i;:::-;20083:329;;;;:::o;21405:227::-;23726:10;;-1:-1:-1;;;;;23726:10:23;23712;:24;23704:47;;;;-1:-1:-1;;;23704:47:23;;;;;;;:::i;:::-;21548:6:::1;-1:-1:-1::0;;;;;21539:15:23::1;:5;-1:-1:-1::0;;;;;21539:15:23::1;;;:34;;;;;21567:6;-1:-1:-1::0;;;;;21558:15:23::1;:5;-1:-1:-1::0;;;;;21558:15:23::1;;;21539:34;21531:52;;;;-1:-1:-1::0;;;21531:52:23::1;;;;;;;:::i;:::-;21594:30;-1:-1:-1::0;;;;;21594:18:23;::::1;21613:2:::0;21617:6;21594:18:::1;:30::i;3976:149:1:-:0;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2903:35:23:-;;;;:::o;2744:32::-;;;-1:-1:-1;;;;;2744:32:23;;:::o;2785:22::-;;;-1:-1:-1;;;2785:22:23;;;;;:::o;20464:375::-;20629:10;-1:-1:-1;;;;;20651:4:23;20629:27;;20621:36;;;;;;20687:1;20672:12;:16;20668:76;;;20690:54;-1:-1:-1;;;;;20690:6:23;:19;20710:10;20730:12;20690:19;:54::i;:::-;20774:1;20759:12;:16;20755:76;;;20777:54;-1:-1:-1;;;;;20777:6:23;:19;20797:10;20817:12;20777:19;:54::i;3108:96:8:-;3166:7;3192:5;3196:1;3192;:5;:::i;701:205:4:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;840:58:4;;;;;;;;;;;;;;-1:-1:-1;;;;;840:58:4;-1:-1:-1;;;;;;840:58:4;;;;;;;;;;813:19;:86::i;640:96:6:-;719:10;640:96;:::o;10123:370:1:-;-1:-1:-1;;;;;10254:19:1;;10246:68;;;;-1:-1:-1;;;10246:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10332:21:1;;10324:68;;;;-1:-1:-1;;;10324:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10403:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10454:32;;;;;10433:6;;10454:32;:::i;:::-;;;;;;;;10123:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:1;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:1;;;;;;;:::i;:::-;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;7488:651::-;-1:-1:-1;;;;;7614:18:1;;7606:68;;;;-1:-1:-1;;;7606:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7692:16:1;;7684:64;;;;-1:-1:-1;;;7684:64:1;;;;;;;:::i;:::-;7759:38;7780:4;7786:2;7790:6;7759:20;:38::i;:::-;-1:-1:-1;;;;;7830:15:1;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7961:15:1;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:1;8067:4;-1:-1:-1;;;;;8058:26:1;;8077:6;8058:26;;;;;;:::i;:::-;;;;;;;;8095:37;8115:4;8121:2;8125:6;8095:19;:37::i;6202:228:23:-;6272:17;6301:31;6311:9;6322;6301;:31::i;:::-;6271:61;;;;;;6359:1;6347:9;-1:-1:-1;;;;;6347:13:23;;6343:80;;;6377:34;;-1:-1:-1;;;6377:34:23;;-1:-1:-1;;;;;6377:4:23;:9;;;;:34;;6387:9;;6398;;6409:1;;6377:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6658:1348::-;6801:14;6830:15;6860;6903:19;6925:13;:11;:13::i;:::-;6903:35;;6950:14;6966;6984:17;:15;:17::i;:::-;6949:52;;;;7075:11;7090:1;7075:16;:30;;;;7104:1;7095:6;:10;7075:30;:44;;;;7118:1;7109:6;:10;7075:44;7068:52;;-1:-1:-1;;;7068:52:23;;;;;;;;;7137:16;7133:866;;7244:14;7234:24;;7283:14;7273:24;;7321:26;7330:7;7339;7321:8;:26::i;:::-;7312:35;;7133:866;;;7369:11;7365:634;;7407:14;;-1:-1:-1;7445:36:23;7474:6;7445:24;7407:14;7457:11;7445;:24::i;7365:634::-;7503:11;7499:500;;7541:14;;-1:-1:-1;7579:36:23;7608:6;7579:24;7541:14;7591:11;7579;:24::i;7499:500::-;7648:13;7664:64;7673:26;:14;7692:6;7673:18;:26::i;:::-;7701;:14;7720:6;7701:18;:26::i;:::-;7664:8;:64::i;:::-;7648:80;;7759:1;7751:5;:9;7743:27;;;;-1:-1:-1;;;7743:27:23;;;;;;;:::i;:::-;7830:31;7859:1;7830:24;7847:6;7830:12;:5;7859:1;7830:9;:12::i;:31::-;7820:41;-1:-1:-1;7886:31:23;7915:1;7886:24;7903:6;7886:12;:5;7915:1;7886:9;:12::i;:31::-;7876:41;-1:-1:-1;7941:46:23;7980:6;7941:34;7968:6;7941:34;:5;7951:11;7941:9;:22::i;:46::-;7932:55;;7499:500;;6658:1348;;;;;;;;:::o;912:241:4:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;8415:389:1:-;-1:-1:-1;;;;;8498:21:1;;8490:65;;;;-1:-1:-1;;;8490:65:1;;;;;;;:::i;:::-;8566:49;8595:1;8599:7;8608:6;8566:20;:49::i;:::-;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:1;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:1;;-1:-1:-1;;;;;8701:37:1;;;8718:1;;8701:37;;;;8731:6;;8701:37;:::i;:::-;;;;;;;;8749:48;8777:1;8781:7;8790:6;8749:19;:48::i;:::-;8415:389;;:::o;13752:481:23:-;13853:11;13883:21;;;;;;;;;13875:55;;;;-1:-1:-1;;;13875:55:23;;;;;;;:::i;:::-;-1:-1:-1;;13949:30:23;;;;;;13941:60;;;;-1:-1:-1;;;13941:60:23;;;;;;;:::i;:::-;637:9:20;-1:-1:-1;;637:9:20;:::i;:::-;14020:30:23;;:9;:30;;;;14012:61;;;;-1:-1:-1;;;14012:61:23;;;;;;;:::i;:::-;14092:24;14104:12;14092:9;:24;:::i;:::-;:29;;;14084:65;;;;-1:-1:-1;;;14084:65:23;;;;;;;:::i;:::-;14168:24;14180:12;14168:9;:24;:::i;:::-;:29;;;14160:65;;;;-1:-1:-1;;;14160:65:23;;;;;;;:::i;18267:381::-;18384:7;18406;18428;18450;18472;18517:19;18539:56;18567:4;18574:9;18585;18539:19;:56::i;:::-;18613:27;;-1:-1:-1;;;18613:27:23;;18517:78;;-1:-1:-1;;;;;;18613:4:23;:14;;;;:27;;18517:78;;18613:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18606:34;;;;-1:-1:-1;18606:34:23;;-1:-1:-1;18606:34:23;-1:-1:-1;18606:34:23;;-1:-1:-1;18267:381:23;-1:-1:-1;;;;18267:381:23:o;14335:1544::-;14497:15;;;;-1:-1:-1;;;;;14644:13:23;;;14640:109;;14695:42;;-1:-1:-1;;;14695:42:23;;-1:-1:-1;;;;;14695:4:23;:9;;;;:42;;14705:9;;14716;;14727;;14695:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14674:63;;-1:-1:-1;14674:63:23;-1:-1:-1;14640:109:23;14820:16;14838;14871:4;-1:-1:-1;;;;;14871:12:23;;14910:4;14934:9;14962;-1:-1:-1;;;;;15026:17:23;14871:187;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14819:239:23;;;;-1:-1:-1;14819:239:23;;-1:-1:-1;15086:21:23;14819:239;15099:7;15086:12;:21::i;:::-;15071:36;-1:-1:-1;15133:21:23;:8;15146:7;15133:12;:21::i;:::-;15299:11;;15118:36;;-1:-1:-1;15165:23:23;;;;15325:16;;15321:462;;15376:39;15411:3;15376:30;:12;15393;15376:16;:30::i;:39::-;15358:57;-1:-1:-1;15448:39:23;15483:3;15448:30;:12;15465;15448:16;:30::i;:39::-;15430:57;-1:-1:-1;15517:33:23;:12;15534:15;15517:16;:33::i;:::-;15502:48;-1:-1:-1;15580:33:23;:12;15597:15;15580:16;:33::i;:::-;15651:20;;15565:48;;-1:-1:-1;15651:41:23;;15676:15;15651:24;:41::i;:::-;15628:20;:64;15730:20;;:41;;15755:15;15730:24;:41::i;:::-;15707:20;:64;15321:462;15798:73;15810:12;15824;15838:15;15855;15798:73;;;;;;;;;:::i;:::-;;;;;;;;14335:1544;;;;;;;;;;;;:::o;19300:523::-;19464:7;19485:20;19521:4;-1:-1:-1;;;;;19521:10:23;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19484:49;;;;;;;;19564:251;19622:12;19653:38;19681:9;19653:27;:38::i;:::-;19710;19738:9;19710:27;:38::i;:::-;19767:7;19793;19564:39;:251::i;:::-;19544:271;19300:523;-1:-1:-1;;;;;;19300:523:23:o;15952:245::-;-1:-1:-1;;;;;16087:13:23;;;16083:107;;16117:61;;-1:-1:-1;;;16117:61:23;;-1:-1:-1;;;;;16117:4:23;:9;;;;:61;;16135:4;;16142:9;;16153;;16164;;16117:61;;;:::i;18734:484::-;18874:7;18883;18904:20;18940:4;-1:-1:-1;;;;;18940:10:23;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18903:49;;;;;;;;18983:227;19041:12;19072:38;19100:9;19072:27;:38::i;:::-;19129;19157:9;19129:27;:38::i;:::-;19186:9;18983:39;:227::i;:::-;18963:247;;;;;18734:484;;;;;;:::o;3451:96:8:-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;9124:576:1:-;-1:-1:-1;;;;;9207:21:1;;9199:67;;;;-1:-1:-1;;;9199:67:1;;;;;;;:::i;:::-;9277:49;9298:7;9315:1;9319:6;9277:20;:49::i;:::-;-1:-1:-1;;;;;9362:18:1;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9495:18:1;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:1;;9623:1;;-1:-1:-1;;;;;9597:37:1;;;;;;;9627:6;;9597:37;:::i;:::-;;;;;;;;9645:48;9665:7;9682:1;9686:6;9645:19;:48::i;10048:745:23:-;10209:15;10226;10255:22;10289:31;10299:9;10310;10289;:31::i;:::-;10254:66;;;;;;10331:17;10351:52;10391:11;10351:35;10379:6;10359:14;-1:-1:-1;;;;;10351:23:23;:27;;:35;;;;:::i;:52::-;10331:72;-1:-1:-1;10420:13:23;;10416:370;;10451:15;10468;10485:13;10500;10534:60;10550:9;10561;10572:21;10583:9;10572:10;:21::i;:::-;10534:15;:60::i;:::-;10450:144;;-1:-1:-1;10450:144:23;;-1:-1:-1;10450:144:23;-1:-1:-1;10450:144:23;-1:-1:-1;10655:47:23;10667:34;10689:11;10667:17;10450:144;10677:6;10667:9;:17::i;:34::-;10655:7;;:11;:47::i;:::-;10645:57;-1:-1:-1;10727:47:23;10739:34;10761:11;10739:17;:5;10749:6;10739:9;:17::i;:34::-;10727:7;;:11;:47::i;:::-;10717:57;;10416:370;;;;;10048:745;;;;;;;;;:::o;3207:706:4:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:4;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:4;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:4;;;;;;;:::i;285:105:7:-;343:7;374:1;369;:6;;:14;;382:1;369:14;;;-1:-1:-1;378:1:7;;285:105;-1:-1:-1;285:105:7:o;461:104::-;519:7;549:1;545;:5;:13;;557:1;545:13;;162:208:22;281:7;334:5;341:9;352;317:45;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;307:56;;;;;;300:63;;162:208;;;;;:::o;1355:2583:20:-;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;;:::i;:::-;1450:75;-1:-1:-1;1591:13:20;1617:3;1607:13;;:93;;-1:-1:-1;;;1607:93:20;;;1628:34;1607:93;1591:109;;;-1:-1:-1;1724:3:20;1714:13;;:18;1710:83;;1790:3;1743:42;:5;1751:34;1743:42;:::i;:::-;1742:51;;1734:59;;1710:83;1817:3;1807:13;;:18;1803:83;;1883:3;1836:42;:5;1844:34;1836:42;:::i;:::-;1835:51;;1827:59;;1803:83;1910:3;1900:13;;:18;1896:83;;1976:3;1929:42;:5;1937:34;1929:42;:::i;:::-;1928:51;;1920:59;;1896:83;2003:4;1993:14;;:19;1989:84;;2070:3;2023:42;:5;2031:34;2023:42;:::i;:::-;2022:51;;2014:59;;1989:84;2097:4;2087:14;;:19;2083:84;;2164:3;2117:42;:5;2125:34;2117:42;:::i;:::-;2116:51;;2108:59;;2083:84;2191:4;2181:14;;:19;2177:84;;2258:3;2211:42;:5;2219:34;2211:42;:::i;:::-;2210:51;;2202:59;;2177:84;2285:4;2275:14;;:19;2271:84;;2352:3;2305:42;:5;2313:34;2305:42;:::i;:::-;2304:51;;2296:59;;2271:84;2379:5;2369:15;;:20;2365:85;;2447:3;2400:42;:5;2408:34;2400:42;:::i;:::-;2399:51;;2391:59;;2365:85;2474:5;2464:15;;:20;2460:85;;2542:3;2495:42;:5;2503:34;2495:42;:::i;:::-;2494:51;;2486:59;;2460:85;2569:5;2559:15;;:20;2555:85;;2637:3;2590:42;:5;2598:34;2590:42;:::i;:::-;2589:51;;2581:59;;2555:85;2664:5;2654:15;;:20;2650:85;;2732:3;2685:42;:5;2693:34;2685:42;:::i;:::-;2684:51;;2676:59;;2650:85;2759:6;2749:16;;:21;2745:86;;2828:3;2781:42;:5;2789:34;2781:42;:::i;:::-;2780:51;;2772:59;;2745:86;2855:6;2845:16;;:21;2841:86;;2924:3;2877:42;:5;2885:34;2877:42;:::i;:::-;2876:51;;2868:59;;2841:86;2951:6;2941:16;;:21;2937:86;;3020:3;2973:42;:5;2981:34;2973:42;:::i;:::-;2972:51;;2964:59;;2937:86;3047:6;3037:16;;:21;3033:86;;3116:3;3069:42;:5;3077:34;3069:42;:::i;:::-;3068:51;;3060:59;;3033:86;3143:7;3133:17;;:22;3129:86;;3212:3;3166:41;:5;3174:33;3166:41;:::i;:::-;3165:50;;3157:58;;3129:86;3239:7;3229:17;;:22;3225:85;;3307:3;3262:40;:5;3270:32;3262:40;:::i;:::-;3261:49;;3253:57;;3225:85;3334:7;3324:17;;:22;3320:83;;3400:3;3357:38;:5;3365:30;3357:38;:::i;:::-;3356:47;;3348:55;;3320:83;3427:7;3417:17;;:22;3413:78;;3488:3;3450:33;:5;3458:25;3450:33;:::i;:::-;3449:42;;3441:50;;3413:78;3513:1;3506:4;:8;;;3502:47;;;3524:25;3544:5;-1:-1:-1;;3524:25:20;:::i;:::-;3516:33;;3502:47;3899:17;3908:7;3899:5;:17;:::i;:::-;:22;:30;;3928:1;3899:30;;;3924:1;3899:30;3882:48;;;;3892:2;3883:11;;;3882:48;:::i;:::-;3859:72;1355:2583;-1:-1:-1;;;;1355:2583:20:o;2982:901:21:-;3185:17;3234:13;-1:-1:-1;;;;;3218:29:21;:13;-1:-1:-1;;;;;3218:29:21;;3214:98;;;3283:13;;3298;3214:98;3343:13;-1:-1:-1;;;;;3327:29:21;:12;-1:-1:-1;;;;;3327:29:21;;3323:554;;3384:61;3407:13;3422;3437:7;3384:22;:61::i;:::-;3372:73;;3323:554;;;3481:13;-1:-1:-1;;;;;3466:28:21;:12;-1:-1:-1;;;;;3466:28:21;;3462:415;;;3510:18;3531:60;3554:12;3568:13;3583:7;3531:22;:60::i;:::-;3510:81;;3605:18;3626:60;3649:13;3664:12;3678:7;3626:22;:60::i;:::-;3605:81;;3726:10;-1:-1:-1;;;;;3713:23:21;:10;-1:-1:-1;;;;;3713:23:21;;:49;;3752:10;3713:49;;;3739:10;3713:49;3701:61;;3462:415;;;;;3805:61;3828:13;3843;3858:7;3805:22;:61::i;:::-;3793:73;;3462:415;2982:901;;;;;;;:::o;6013:799::-;6193:15;6210;6257:13;-1:-1:-1;;;;;6241:29:21;:13;-1:-1:-1;;;;;6241:29:21;;6237:98;;;6306:13;;6321;6237:98;6366:13;-1:-1:-1;;;;;6350:29:21;:12;-1:-1:-1;;;;;6350:29:21;;6346:460;;6405:63;6428:13;6443;6458:9;6405:22;:63::i;:::-;6395:73;;6346:460;;;6504:13;-1:-1:-1;;;;;6489:28:21;:12;-1:-1:-1;;;;;6489:28:21;;6485:321;;;6543:62;6566:12;6580:13;6595:9;6543:22;:62::i;:::-;6533:72;;6629:62;6652:13;6667:12;6681:9;6629:22;:62::i;:::-;6619:72;;6485:321;;;6732:63;6755:13;6770;6785:9;6732:22;:63::i;:::-;6722:73;;6485:321;6013:799;;;;;;;:::o;19891:140:23:-;19945:7;-1:-1:-1;;;;;19972:22:23;;;19965:30;;-1:-1:-1;;;19965:30:23;;;;;;;;;-1:-1:-1;20021:1:23;19891:140::o;3861:223:5:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;1085:475:21:-;1233:17;1282:13;-1:-1:-1;;;;;1266:29:21;:13;-1:-1:-1;;;;;1266:29:21;;1262:98;;;1331:13;;1346;1262:98;1370:20;1393:63;1409:13;-1:-1:-1;;;;;1393:63:21;1424:13;-1:-1:-1;;;;;1393:63:21;-1:-1:-1;;;1393:15:21;:63::i;:::-;1370:86;-1:-1:-1;1473:80:21;1483:69;1499:7;1370:86;1522:29;1538:13;1522;:29;:::i;:::-;-1:-1:-1;;;;;1483:69:21;:15;:69::i;:::-;1473:9;:80::i;1999:383::-;2147:17;2196:13;-1:-1:-1;;;;;2180:29:21;:13;-1:-1:-1;;;;;2180:29:21;;2176:98;;;2245:13;;2260;2176:98;2291:84;2301:73;2317:7;-1:-1:-1;;;2344:29:21;2360:13;2344;:29;:::i;4241:498::-;4391:15;4438:13;-1:-1:-1;;;;;4422:29:21;:13;-1:-1:-1;;;;;4422:29:21;;4418:98;;;4487:13;;4502;4418:98;-1:-1:-1;;;;;4546:186:21;;:170;-1:-1:-1;;;309:2:18;4579:45:21;;;;4642:29;4719:13;4642;:29;:::i;:::-;-1:-1:-1;;;;;4546:170:21;4689:13;-1:-1:-1;;;;;4546:170:21;:15;:170::i;:::-;:186;;;;:::i;5097:375::-;5247:15;5294:13;-1:-1:-1;;;;;5278:29:21;:13;-1:-1:-1;;;;;5278:29:21;;5274:98;;;5343:13;;5358;5274:98;5390:75;-1:-1:-1;;;;;5390:75:21;;5417:29;5433:13;5417;:29;:::i;:::-;-1:-1:-1;;;;;5390:75:21;-1:-1:-1;;;5390:15:21;:75::i;4948:499:5:-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:5;;;;;;;:::i;:::-;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;-1:-1:-1;;;5228:60:5;;;;;;;:::i;:::-;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:5;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:5:o;742:3782:19:-;854:14;;;-1:-1:-1;;1361:1:19;1358;1351:20;1393:9;;;;-1:-1:-1;1444:13:19;;;1428:14;;;;1424:34;;-1:-1:-1;1540:10:19;1536:179;;1588:1;1574:11;:15;1566:24;;;;;;-1:-1:-1;1641:23:19;;;;-1:-1:-1;1691:13:19;;1536:179;1842:5;1828:11;:19;1820:28;;;;;;2125:17;2201:11;2198:1;2195;2188:25;2373:21;;;;2330:20;;2319:32;;;;2175:38;-1:-1:-1;2553:12:19;2583:16;:12;;2598:1;2583:16;:::i;:::-;2568:32;;2694:22;;;;;2822:16;;;;;3070:1;3066:12;;;3062:23;3087:1;3058:31;;-1:-1:-1;3117:12:19;3058:31;3117:5;:12;:::i;:::-;3108:21;;;;3463:11;3478:15;3482:11;3478:1;:15;:::i;:::-;3497:1;3477:21;;-1:-1:-1;3724:17:19;3477:21;3724:11;:17;:::i;:::-;3720:21;;:1;:21;:::i;:::-;3713:28;;;;:::i;:::-;;-1:-1:-1;3782:17:19;3713:28;3782:11;:17;:::i;:::-;3778:21;;:1;:21;:::i;:::-;3771:28;;;;:::i;:::-;;-1:-1:-1;3841:17:19;3771:28;3841:11;:17;:::i;:::-;3837:21;;:1;:21;:::i;:::-;3830:28;;;;:::i;:::-;;-1:-1:-1;3900:17:19;3830:28;3900:11;:17;:::i;:::-;3896:21;;:1;:21;:::i;:::-;3889:28;;;;:::i;:::-;;-1:-1:-1;3959:17:19;3889:28;3959:11;:17;:::i;:::-;3955:21;;:1;:21;:::i;:::-;3948:28;;;;:::i;:::-;;-1:-1:-1;4019:17:19;3948:28;4019:11;:17;:::i;:::-;4015:21;;:1;:21;:::i;:::-;4008:28;;;;:::i;:::-;;-1:-1:-1;4483:11:19;4008:28;4483:5;:11;:::i;:::-;4474:20;742:3782;-1:-1:-1;;;;;;;;;742:3782:19:o;507:110:21:-;608:1;-1:-1:-1;;;;;588:21:21;;;;580:30;;;;;1175:320:5;1235:4;1487:1;1465:7;-1:-1:-1;;;;;1465:12:5;;;;;;;;;;;;;;;;;;;;;;;;:19;:23;;1175:320;-1:-1:-1;;1175:320:5:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:5;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;8019:145;8209:12;8202:20;;-1:-1:-1;;;8202:20:5;;;;;;;;:::i;14:166:26:-;92:13;;141;;134:21;124:32;;114:2;;170:1;167;160:12;185:377;;;302:3;295:4;287:6;283:17;279:27;269:2;;327:8;317;310:26;269:2;-1:-1:-1;357:20:26;;400:18;389:30;;386:2;;;439:8;429;422:26;386:2;483:4;475:6;471:17;459:29;;535:3;528:4;519:6;511;507:19;503:30;500:39;497:2;;;552:1;549;542:12;497:2;259:303;;;;;:::o;567:165::-;647:13;;700:6;689:18;;679:29;;669:2;;722:1;719;712:12;737:259;;849:2;837:9;828:7;824:23;820:32;817:2;;;870:6;862;855:22;817:2;914:9;901:23;933:33;960:5;933:33;:::i;1001:402::-;;;1130:2;1118:9;1109:7;1105:23;1101:32;1098:2;;;1151:6;1143;1136:22;1098:2;1195:9;1182:23;1214:33;1241:5;1214:33;:::i;:::-;1266:5;-1:-1:-1;1323:2:26;1308:18;;1295:32;1336:35;1295:32;1336:35;:::i;:::-;1390:7;1380:17;;;1088:315;;;;;:::o;1408:470::-;;;;1554:2;1542:9;1533:7;1529:23;1525:32;1522:2;;;1575:6;1567;1560:22;1522:2;1619:9;1606:23;1638:33;1665:5;1638:33;:::i;:::-;1690:5;-1:-1:-1;1747:2:26;1732:18;;1719:32;1760:35;1719:32;1760:35;:::i;:::-;1512:366;;1814:7;;-1:-1:-1;;;1868:2:26;1853:18;;;;1840:32;;1512:366::o;1883:327::-;;;2012:2;2000:9;1991:7;1987:23;1983:32;1980:2;;;2033:6;2025;2018:22;1980:2;2077:9;2064:23;2096:33;2123:5;2096:33;:::i;:::-;2148:5;2200:2;2185:18;;;;2172:32;;-1:-1:-1;;;1970:240:26:o;2215:214::-;;2335:2;2323:9;2314:7;2310:23;2306:32;2303:2;;;2356:6;2348;2341:22;2303:2;2384:39;2413:9;2384:39;:::i;2434:485::-;;;;2595:2;2583:9;2574:7;2570:23;2566:32;2563:2;;;2616:6;2608;2601:22;2563:2;2660:9;2647:23;2679:33;2706:5;2679:33;:::i;:::-;2731:5;-1:-1:-1;2783:2:26;2768:18;;2755:32;;-1:-1:-1;2839:2:26;2824:18;;2811:32;2852:35;2811:32;2852:35;:::i;:::-;2906:7;2896:17;;;2553:366;;;;;:::o;2924:394::-;;;3049:2;3037:9;3028:7;3024:23;3020:32;3017:2;;;3070:6;3062;3055:22;3017:2;3114:9;3101:23;3133:31;3158:5;3133:31;:::i;:::-;3183:5;-1:-1:-1;3240:2:26;3225:18;;3212:32;3253:33;3212:32;3253:33;:::i;3323:537::-;;;;3465:2;3453:9;3444:7;3440:23;3436:32;3433:2;;;3486:6;3478;3471:22;3433:2;3530:9;3517:23;3549:31;3574:5;3549:31;:::i;:::-;3599:5;-1:-1:-1;3656:2:26;3641:18;;3628:32;3669:33;3628:32;3669:33;:::i;:::-;3721:7;-1:-1:-1;3780:2:26;3765:18;;3752:32;3793:35;3752:32;3793:35;:::i;3865:253::-;;;4003:2;3991:9;3982:7;3978:23;3974:32;3971:2;;;4024:6;4016;4009:22;3971:2;-1:-1:-1;;4052:16:26;;4108:2;4093:18;;;4087:25;4052:16;;4087:25;;-1:-1:-1;3961:157:26:o;4123:565::-;;;;;4286:2;4274:9;4265:7;4261:23;4257:32;4254:2;;;4307:6;4299;4292:22;4254:2;4348:9;4335:23;4325:33;;4405:2;4394:9;4390:18;4377:32;4367:42;;4460:2;4449:9;4445:18;4432:32;4487:18;4479:6;4476:30;4473:2;;;4524:6;4516;4509:22;4473:2;4568:60;4620:7;4611:6;4600:9;4596:22;4568:60;:::i;:::-;4244:444;;;;-1:-1:-1;4647:8:26;-1:-1:-1;;;;4244:444:26:o;4693:1165::-;;;;;;;;;4911:3;4899:9;4890:7;4886:23;4882:33;4879:2;;;4933:6;4925;4918:22;4879:2;4974:9;4961:23;4951:33;;5034:2;5023:9;5019:18;5006:32;5047:33;5074:5;5047:33;:::i;:::-;5099:5;-1:-1:-1;5156:2:26;5141:18;;5128:32;5169:33;5128:32;5169:33;:::i;:::-;5221:7;-1:-1:-1;5280:2:26;5265:18;;5252:32;5293:33;5252:32;5293:33;:::i;:::-;5345:7;-1:-1:-1;5404:3:26;5389:19;;5376:33;5418;5376;5418;:::i;:::-;5470:7;-1:-1:-1;5529:3:26;5514:19;;5501:33;5543;5501;5543;:::i;:::-;5595:7;-1:-1:-1;5654:3:26;5639:19;;5626:33;5668;5626;5668;:::i;:::-;5720:7;-1:-1:-1;5779:3:26;5764:19;;5751:33;5793;5751;5793;:::i;:::-;5845:7;5835:17;;;4869:989;;;;;;;;;;;:::o;5863:399::-;;;6003:2;5991:9;5982:7;5978:23;5974:32;5971:2;;;6024:6;6016;6009:22;5971:2;6061:9;6055:16;6080:33;6107:5;6080:33;:::i;:::-;6182:2;6167:18;;6161:25;6132:5;;-1:-1:-1;6195:35:26;6161:25;6195:35;:::i;6267:659::-;;;;;;6458:3;6446:9;6437:7;6433:23;6429:33;6426:2;;;6480:6;6472;6465:22;6426:2;6517:9;6511:16;6536:33;6563:5;6536:33;:::i;:::-;6588:5;6578:15;;;6633:2;6622:9;6618:18;6612:25;6602:35;;6677:2;6666:9;6662:18;6656:25;6646:35;;6726:2;6715:9;6711:18;6705:25;6739:35;6766:7;6739:35;:::i;:::-;6845:3;6830:19;;6824:26;6793:7;;-1:-1:-1;6859:35:26;6824:26;6859:35;:::i;:::-;6913:7;6903:17;;;6416:510;;;;;;;;:::o;6931:903::-;;;;;;;;7146:3;7134:9;7125:7;7121:23;7117:33;7114:2;;;7168:6;7160;7153:22;7114:2;7205:9;7199:16;7224:33;7251:5;7224:33;:::i;:::-;7326:2;7311:18;;7305:25;7276:5;;-1:-1:-1;7339:33:26;7305:25;7339:33;:::i;:::-;7391:7;-1:-1:-1;7417:50:26;7463:2;7448:18;;7417:50;:::i;:::-;7407:60;;7486:50;7532:2;7521:9;7517:18;7486:50;:::i;:::-;7476:60;;7555:51;7601:3;7590:9;7586:19;7555:51;:::i;:::-;7545:61;;7651:3;7640:9;7636:19;7630:26;7700:4;7691:7;7687:18;7678:7;7675:31;7665:2;;7725:6;7717;7710:22;7665:2;7753:7;-1:-1:-1;7779:49:26;7823:3;7808:19;;7779:49;:::i;:::-;7769:59;;7104:730;;;;;;;;;;:::o;7839:190::-;;7951:2;7939:9;7930:7;7926:23;7922:32;7919:2;;;7972:6;7964;7957:22;7919:2;-1:-1:-1;8000:23:26;;7909:120;-1:-1:-1;7909:120:26:o;8034:194::-;;8157:2;8145:9;8136:7;8132:23;8128:32;8125:2;;;8178:6;8170;8163:22;8125:2;-1:-1:-1;8206:16:26;;8115:113;-1:-1:-1;8115:113:26:o;8493:395::-;;;;8639:2;8627:9;8618:7;8614:23;8610:32;8607:2;;;8660:6;8652;8645:22;8607:2;8701:9;8688:23;8678:33;;8758:2;8747:9;8743:18;8730:32;8720:42;;8812:2;8801:9;8797:18;8784:32;8825:33;8852:5;8825:33;:::i;9465:464::-;;;;;9628:3;9616:9;9607:7;9603:23;9599:33;9596:2;;;9650:6;9642;9635:22;9596:2;9691:9;9678:23;9668:33;;9748:2;9737:9;9733:18;9720:32;9710:42;;9799:2;9788:9;9784:18;9771:32;9761:42;;9853:2;9842:9;9838:18;9825:32;9866:33;9893:5;9866:33;:::i;:::-;9586:343;;;;-1:-1:-1;9586:343:26;;-1:-1:-1;;9586:343:26:o;9934:533::-;;;;;;10114:3;10102:9;10093:7;10089:23;10085:33;10082:2;;;10136:6;10128;10121:22;10082:2;10177:9;10164:23;10154:33;;10234:2;10223:9;10219:18;10206:32;10196:42;;10285:2;10274:9;10270:18;10257:32;10247:42;;10336:2;10325:9;10321:18;10308:32;10298:42;;10390:3;10379:9;10375:19;10362:33;10404;10431:5;10404:33;:::i;10472:401::-;10669:2;10665:15;;;;-1:-1:-1;;10661:53:26;10649:66;;10765:1;10754:21;;;10749:3;10745:31;;;10740:2;10731:12;;10724:53;10816:21;;10807:31;;10802:2;10793:12;;10786:53;10864:2;10855:12;;10639:234::o;10878:274::-;;11045:6;11039:13;11061:53;11107:6;11102:3;11095:4;11087:6;11083:17;11061:53;:::i;:::-;11130:16;;;;;11015:137;-1:-1:-1;;11015:137:26:o;11157:203::-;-1:-1:-1;;;;;11321:32:26;;;;11303:51;;11291:2;11276:18;;11258:102::o;11365:375::-;-1:-1:-1;;;;;11623:15:26;;;11605:34;;11675:15;;;;11670:2;11655:18;;11648:43;11722:2;11707:18;;11700:34;;;;11555:2;11540:18;;11522:218::o;11745:638::-;-1:-1:-1;;;;;12088:15:26;;;12070:34;;12147:14;;12140:22;12135:2;12120:18;;12113:50;12194:2;12179:18;;12172:34;;;;12242:15;;;12237:2;12222:18;;12215:43;12050:3;12289;12274:19;;12267:32;;;11745:638;12315:19;;;12308:33;12373:3;12358:19;;12022:361::o;12388:663::-;-1:-1:-1;;;;;12693:32:26;;;;12675:51;;12773:1;12762:21;;;12757:2;12742:18;;12735:49;12820:21;;12815:2;12800:18;;12793:49;-1:-1:-1;;;;;12878:47:26;12873:2;12858:18;;12851:75;12713:3;12957;12942:19;;12935:32;;;12388:663;12983:19;;;12976:33;13041:3;13026:19;;12665:386::o;13056:582::-;-1:-1:-1;;;;;13325:32:26;;;;13307:51;;13405:1;13394:21;;;13389:2;13374:18;;13367:49;13452:21;;;;13447:2;13432:18;;13425:49;-1:-1:-1;;;;;13563:15:26;;;13558:2;13543:18;;13536:43;13616:15;13610:3;13595:19;;13588:44;13294:3;13279:19;;13261:377::o;13643:274::-;-1:-1:-1;;;;;13835:32:26;;;;13817:51;;13899:2;13884:18;;13877:34;13805:2;13790:18;;13772:145::o;13922:187::-;14087:14;;14080:22;14062:41;;14050:2;14035:18;;14017:92::o;14114:177::-;14260:25;;;14248:2;14233:18;;14215:76::o;14749:188::-;14920:1;14909:21;;;;14891:40;;14879:2;14864:18;;14846:91::o;14942:390::-;15173:1;15162:21;;;15144:40;;15220:21;;;;15215:2;15200:18;;15193:49;-1:-1:-1;;;;;15278:47:26;;;15273:2;15258:18;;15251:75;15132:2;15117:18;;15099:233::o;15724:402::-;15980:1;15969:21;;;;15951:40;;16022:2;16007:18;;16000:34;;;;16065:2;16050:18;;16043:34;16108:2;16093:18;;16086:34;15938:3;15923:19;;15905:221::o;16131:383::-;;16280:2;16269:9;16262:21;16312:6;16306:13;16355:6;16350:2;16339:9;16335:18;16328:34;16371:66;16430:6;16425:2;16414:9;16410:18;16405:2;16397:6;16393:15;16371:66;:::i;:::-;16498:2;16477:15;-1:-1:-1;;16473:29:26;16458:45;;;;16505:2;16454:54;;16252:262;-1:-1:-1;;16252:262:26:o;16519:399::-;16721:2;16703:21;;;16760:2;16740:18;;;16733:30;16799:34;16794:2;16779:18;;16772:62;-1:-1:-1;;;16865:2:26;16850:18;;16843:33;16908:3;16893:19;;16693:225::o;16923:334::-;17125:2;17107:21;;;17164:2;17144:18;;;17137:30;-1:-1:-1;;;17198:2:26;17183:18;;17176:40;17248:2;17233:18;;17097:160::o;17262:398::-;17464:2;17446:21;;;17503:2;17483:18;;;17476:30;17542:34;17537:2;17522:18;;17515:62;-1:-1:-1;;;17608:2:26;17593:18;;17586:32;17650:3;17635:19;;17436:224::o;17665:325::-;17867:2;17849:21;;;17906:1;17886:18;;;17879:29;-1:-1:-1;;;17939:2:26;17924:18;;17917:32;17981:2;17966:18;;17839:151::o;17995:345::-;18197:2;18179:21;;;18236:2;18216:18;;;18209:30;-1:-1:-1;;;18270:2:26;18255:18;;18248:51;18331:2;18316:18;;18169:171::o;18345:398::-;18547:2;18529:21;;;18586:2;18566:18;;;18559:30;18625:34;18620:2;18605:18;;18598:62;-1:-1:-1;;;18691:2:26;18676:18;;18669:32;18733:3;18718:19;;18519:224::o;18748:347::-;18950:2;18932:21;;;18989:2;18969:18;;;18962:30;19028:25;19023:2;19008:18;;19001:53;19086:2;19071:18;;18922:173::o;19100:353::-;19302:2;19284:21;;;19341:2;19321:18;;;19314:30;19380:31;19375:2;19360:18;;19353:59;19444:2;19429:18;;19274:179::o;19458:347::-;19660:2;19642:21;;;19699:2;19679:18;;;19672:30;19738:25;19733:2;19718:18;;19711:53;19796:2;19781:18;;19632:173::o;19810:402::-;20012:2;19994:21;;;20051:2;20031:18;;;20024:30;20090:34;20085:2;20070:18;;20063:62;-1:-1:-1;;;20156:2:26;20141:18;;20134:36;20202:3;20187:19;;19984:228::o;20217:331::-;20419:2;20401:21;;;20458:1;20438:18;;;20431:29;-1:-1:-1;;;20491:2:26;20476:18;;20469:38;20539:2;20524:18;;20391:157::o;20553:402::-;20755:2;20737:21;;;20794:2;20774:18;;;20767:30;20833:34;20828:2;20813:18;;20806:62;-1:-1:-1;;;20899:2:26;20884:18;;20877:36;20945:3;20930:19;;20727:228::o;20960:356::-;21162:2;21144:21;;;21181:18;;;21174:30;21240:34;21235:2;21220:18;;21213:62;21307:2;21292:18;;21134:182::o;21321:341::-;21523:2;21505:21;;;21562:2;21542:18;;;21535:30;-1:-1:-1;;;21596:2:26;21581:18;;21574:47;21653:2;21638:18;;21495:167::o;21667:335::-;21869:2;21851:21;;;21908:2;21888:18;;;21881:30;-1:-1:-1;;;21942:2:26;21927:18;;21920:41;21993:2;21978:18;;21841:161::o;22007:328::-;22209:2;22191:21;;;22248:1;22228:18;;;22221:29;-1:-1:-1;;;22281:2:26;22266:18;;22259:35;22326:2;22311:18;;22181:154::o;22340:336::-;22542:2;22524:21;;;22581:2;22561:18;;;22554:30;-1:-1:-1;;;22615:2:26;22600:18;;22593:42;22667:2;22652:18;;22514:162::o;22681:334::-;22883:2;22865:21;;;22922:2;22902:18;;;22895:30;-1:-1:-1;;;22956:2:26;22941:18;;22934:40;23006:2;22991:18;;22855:160::o;23020:329::-;23222:2;23204:21;;;23261:1;23241:18;;;23234:29;-1:-1:-1;;;23294:2:26;23279:18;;23272:36;23340:2;23325:18;;23194:155::o;23354:397::-;23556:2;23538:21;;;23595:2;23575:18;;;23568:30;23634:34;23629:2;23614:18;;23607:62;-1:-1:-1;;;23700:2:26;23685:18;;23678:31;23741:3;23726:19;;23528:223::o;23756:328::-;23958:2;23940:21;;;23997:1;23977:18;;;23970:29;-1:-1:-1;;;24030:2:26;24015:18;;24008:35;24075:2;24060:18;;23930:154::o;24089:401::-;24291:2;24273:21;;;24330:2;24310:18;;;24303:30;24369:34;24364:2;24349:18;;24342:62;-1:-1:-1;;;24435:2:26;24420:18;;24413:35;24480:3;24465:19;;24263:227::o;24495:334::-;24697:2;24679:21;;;24736:2;24716:18;;;24709:30;-1:-1:-1;;;24770:2:26;24755:18;;24748:40;24820:2;24805:18;;24669:160::o;24834:331::-;25036:2;25018:21;;;25075:1;25055:18;;;25048:29;-1:-1:-1;;;25108:2:26;25093:18;;25086:38;25156:2;25141:18;;25008:157::o;25170:341::-;25372:2;25354:21;;;25411:2;25391:18;;;25384:30;-1:-1:-1;;;25445:2:26;25430:18;;25423:47;25502:2;25487:18;;25344:167::o;25516:400::-;25718:2;25700:21;;;25757:2;25737:18;;;25730:30;25796:34;25791:2;25776:18;;25769:62;-1:-1:-1;;;25862:2:26;25847:18;;25840:34;25906:3;25891:19;;25690:226::o;25921:342::-;26123:2;26105:21;;;26162:2;26142:18;;;26135:30;-1:-1:-1;;;26196:2:26;26181:18;;26174:48;26254:2;26239:18;;26095:168::o;26268:353::-;26470:2;26452:21;;;26509:2;26489:18;;;26482:30;26548:31;26543:2;26528:18;;26521:59;26612:2;26597:18;;26442:179::o;26626:338::-;26828:2;26810:21;;;26867:2;26847:18;;;26840:30;-1:-1:-1;;;26901:2:26;26886:18;;26879:44;26955:2;26940:18;;26800:164::o;26969:406::-;27171:2;27153:21;;;27210:2;27190:18;;;27183:30;27249:34;27244:2;27229:18;;27222:62;-1:-1:-1;;;27315:2:26;27300:18;;27293:40;27365:3;27350:19;;27143:232::o;27380:355::-;27582:2;27564:21;;;27621:2;27601:18;;;27594:30;27660:33;27655:2;27640:18;;27633:61;27726:2;27711:18;;27554:181::o;27740:401::-;27942:2;27924:21;;;27981:2;27961:18;;;27954:30;28020:34;28015:2;28000:18;;27993:62;-1:-1:-1;;;28086:2:26;28071:18;;28064:35;28131:3;28116:19;;27914:227::o;28146:355::-;28348:2;28330:21;;;28387:2;28367:18;;;28360:30;28426:33;28421:2;28406:18;;28399:61;28492:2;28477:18;;28320:181::o;28688:248::-;28862:25;;;28918:2;28903:18;;28896:34;28850:2;28835:18;;28817:119::o;28941:319::-;29143:25;;;29199:2;29184:18;;29177:34;;;;29242:2;29227:18;;29220:34;29131:2;29116:18;;29098:162::o;29265:391::-;29496:25;;;29552:2;29537:18;;29530:34;;;;29595:2;29580:18;;29573:34;29638:2;29623:18;;29616:34;29483:3;29468:19;;29450:206::o;29661:184::-;29833:4;29821:17;;;;29803:36;;29791:2;29776:18;;29758:87::o;29850:128::-;;29921:1;29917:6;29914:1;29911:13;29908:2;;;29927:18;;:::i;:::-;-1:-1:-1;29963:9:26;;29898:80::o;29983:120::-;;30049:1;30039:2;;30054:18;;:::i;:::-;-1:-1:-1;30088:9:26;;30029:74::o;30108:168::-;;30214:1;30210;30206:6;30202:14;30199:1;30196:21;30191:1;30184:9;30177:17;30173:45;30170:2;;;30221:18;;:::i;:::-;-1:-1:-1;30261:9:26;;30160:116::o;30281:231::-;;-1:-1:-1;;;;;30419:10:26;;;;30389;;30441:12;;;30438:2;;;30456:18;;:::i;:::-;30493:13;;30330:182;-1:-1:-1;;;30330:182:26:o;30517:125::-;;30585:1;30582;30579:8;30576:2;;;30590:18;;:::i;:::-;-1:-1:-1;30627:9:26;;30566:76::o;30647:258::-;30719:1;30729:113;30743:6;30740:1;30737:13;30729:113;;;30819:11;;;30813:18;30800:11;;;30793:39;30765:2;30758:10;30729:113;;;30860:6;30857:1;30854:13;30851:2;;;-1:-1:-1;;30895:1:26;30877:16;;30870:27;30700:205::o;30910:380::-;30995:1;30985:12;;31042:1;31032:12;;;31053:2;;31107:4;31099:6;31095:17;31085:27;;31053:2;31160;31152:6;31149:14;31129:18;31126:38;31123:2;;;31206:10;31201:3;31197:20;31194:1;31187:31;31241:4;31238:1;31231:15;31269:4;31266:1;31259:15;31123:2;;30965:325;;;:::o;31295:166::-;;31366:1;31363;31352:16;31387:3;31377:2;;31394:18;;:::i;:::-;31451:3;31447:1;31444;31433:16;31428:27;31423:32;;;31331:130;;;;:::o;31466:112::-;;31524:1;31514:2;;31529:18;;:::i;:::-;-1:-1:-1;31563:9:26;;31504:74::o;31583:186::-;;31664:5;31661:1;31650:20;31698:7;31694:12;31685:7;31682:25;31679:2;;;31710:18;;:::i;:::-;31746:17;;;31625:144;-1:-1:-1;31625:144:26:o;31774:138::-;;-1:-1:-1;;;31830:22:26;;31827:2;;;31855:18;;:::i;:::-;31891:15;;31817:95::o;31917:127::-;31978:10;31973:3;31969:20;31966:1;31959:31;32009:4;32006:1;31999:15;32033:4;32030:1;32023:15;32049:127;32110:10;32105:3;32101:20;32098:1;32091:31;32141:4;32138:1;32131:15;32165:4;32162:1;32155:15;32181:133;-1:-1:-1;;;;;32258:31:26;;32248:42;;32238:2;;32304:1;32301;32294:12;32238:2;32228:86;:::o;32319:120::-;32408:5;32405:1;32394:20;32387:5;32384:31;32374:2;;32429:1;32426;32419:12;32444:148;-1:-1:-1;;;;;32525:5:26;32521:46;32514:5;32511:57;32501:2;;32582:1;32579;32572:12",
    "language": "Solidity",
    "natspec": {
      "kind": "dev",
      "methods": {
        "acceptGovernance()": {
          "notice": "`setGovernance()` should be called by the existing governance address prior to calling this function."
        },
        "allowance(address,address)": {
          "details": "See {IERC20-allowance}."
        },
        "approve(address,uint256)": {
          "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
        },
        "balanceOf(address)": {
          "details": "See {IERC20-balanceOf}."
        },
        "collectProtocol(uint256,uint256,address)": {
          "notice": "Used to collect accumulated protocol fees."
        },
        "constructor": {
          "notice": "dev After deploying, strategy needs to be set by offchain devs param _pool Underlying Uniswap V3 pool param _protocolFee Protocol fee expressed as multiple of 1e-6 param _maxTotalSupply Cap on total supply"
        },
        "decimals()": {
          "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
        },
        "decreaseAllowance(address,uint256)": {
          "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
        },
        "deposit(uint256,uint256,uint256,uint256,address)": {
          "details": "These tokens sit in the vault and are not used for liquidity on Uniswap until the next rebalance. Also note it's not necessary to check if user manipulated price to deposit cheaper, as the value of range orders can only by manipulated higher.",
          "notice": "Deposits tokens in proportion to the vault's current holdings.",
          "params": {
            "amount0Desired": "Max amount of token0 to deposit",
            "amount0Min": "Revert if resulting `amount0` is less than this",
            "amount1Desired": "Max amount of token1 to deposit",
            "amount1Min": "Revert if resulting `amount1` is less than this",
            "to": "Recipient of shares"
          },
          "returns": {
            "amount0": "Amount of token0 deposited",
            "amount1": "Amount of token1 deposited",
            "shares": "Number of shares minted"
          }
        },
        "emergencyBurn(int24,int24,uint128)": {
          "notice": "Removes liquidity in case of emergency."
        },
        "getBalance0()": {
          "notice": "Balance of token0 in vault not used in any position."
        },
        "getBalance1()": {
          "notice": "Balance of token1 in vault not used in any position."
        },
        "getPositionAmounts(int24,int24)": {
          "notice": "Amounts of token0 and token1 held in vault's position. Includes owed fees but excludes the proportion of fees that will be paid to the protocol. Doesn't include fees accrued since last poke."
        },
        "getTotalAmounts()": {
          "notice": "Calculates the vault's total holdings of token0 and token1 - in other words, how much of each token the vault would hold if it withdrew all its liquidity from Uniswap."
        },
        "increaseAllowance(address,uint256)": {
          "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
        },
        "name()": {
          "details": "Returns the name of the token."
        },
        "rebalance(int256,uint160,int24,int24,int24,int24,int24,int24)": {
          "details": "Two orders are placed - a base order and a limit order. The base order is placed first with as much liquidity as possible. This order should use up all of one token, leaving only the other one. This excess amount is then placed as a single-sided bid or ask order.",
          "notice": "Updates vault's positions. Can only be called by the strategy."
        },
        "setGovernance(address)": {
          "notice": "Governance address is not updated until the new governance address has called `acceptGovernance()` to accept this responsibility."
        },
        "setMaxTotalSupply(uint256)": {
          "notice": "Used to change deposit cap for a guarded launch or to ensure vault doesn't grow too large relative to the pool. Cap is on total supply rather than amounts of token0 and token1 as those amounts fluctuate naturally over time."
        },
        "setProtocolFee(uint256)": {
          "notice": "Used to change the protocol fee charged on pool fees earned from Uniswap, expressed as multiple of 1e-6."
        },
        "setSharpeKeeper(address)": {
          "notice": "Used to set the keeper contract that determines the position ranges and calls rebalance(). Must be called after this vault is deployed."
        },
        "sweep(address,uint256,address)": {
          "notice": "Removes tokens accidentally sent to this vault."
        },
        "symbol()": {
          "details": "Returns the symbol of the token, usually a shorter version of the name."
        },
        "totalSupply()": {
          "details": "See {IERC20-totalSupply}."
        },
        "transfer(address,uint256)": {
          "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
        },
        "transferFrom(address,address,uint256)": {
          "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
        },
        "uniswapV3MintCallback(uint256,uint256,bytes)": {
          "details": "Callback for Uniswap V3 pool."
        },
        "uniswapV3SwapCallback(int256,int256,bytes)": {
          "details": "Callback for Uniswap V3 pool."
        },
        "withdraw(uint256,uint256,uint256,address)": {
          "notice": "Withdraws tokens in proportion to the vault's holdings.",
          "params": {
            "amount0Min": "Revert if resulting `amount0` is smaller than this",
            "amount1Min": "Revert if resulting `amount1` is smaller than this",
            "shares": "Shares burned by sender",
            "to": "Recipient of tokens"
          },
          "returns": {
            "amount0": "Amount of token0 sent to recipient",
            "amount1": "Amount of token1 sent to recipient"
          }
        }
      },
      "version": 1
    },
    "offset": [
      1648,
      23774
    ],
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x269 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87E5E083 GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xC4A7761E GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDC2C256F GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDC2C256F EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xEAE989A2 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF39C38A0 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xFA082743 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x505 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0xC4A7761E EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xD331BEF7 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xD3487997 EQ PUSH2 0x4B4 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0x115 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xA91EF6EB EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xABBFFCB9 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xB0E21E8A EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xB3A3D00C EQ PUSH2 0x476 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x87E5E083 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x888A9134 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xA00FA77F EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x401 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x2AB4D052 GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x41AEC538 GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x41AEC538 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x51E87AF7 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x629D9405 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x787DCE3D EQ PUSH2 0x3C3 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x2AB4D052 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x365D0ED7 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x3F3E4C11 EQ PUSH2 0x37D JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0xF35BCAC GT PUSH2 0x231 JUMPI DUP1 PUSH4 0xF35BCAC EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x238EFCBC EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x318 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x430C130 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xC42383A EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x281 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x3545 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x37B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x31F0 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x374B JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x375F JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x303 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x3756 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x705 JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B0 JUMP JUMPDEST PUSH2 0x743 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x773 JUMP JUMPDEST PUSH2 0x33B PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x35B PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x35B2 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E6D JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x31F0 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x281 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x3515 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x303 PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x303 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x315C JUMP JUMPDEST PUSH2 0xB6C JUMP JUMPDEST PUSH2 0x281 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3515 JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x281 PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3356 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0x31F0 JUMP JUMPDEST PUSH2 0x108A JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x422 CALLDATASIZE PUSH1 0x4 PUSH2 0x31F0 JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0x43A PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x3276 JUMP JUMPDEST PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP3 SWAP2 SWAP1 PUSH2 0x3E5F JUMP JUMPDEST PUSH2 0x281 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x315C JUMP JUMPDEST PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x281 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A3 JUMP JUMPDEST PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x315C JUMP JUMPDEST PUSH2 0x137D JUMP JUMPDEST PUSH2 0x43A PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x43A PUSH2 0x4AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3572 JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST PUSH2 0x281 PUSH2 0x4C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3305 JUMP JUMPDEST PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x281 PUSH2 0x4D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3235 JUMP JUMPDEST PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x303 PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x187C JUMP JUMPDEST PUSH2 0x303 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x18AD JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x281 PUSH2 0x513 CALLDATASIZE PUSH1 0x4 PUSH2 0x3305 JUMP JUMPDEST PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x558 SWAP1 DUP5 PUSH2 0x197B JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0xC SLOAD PUSH2 0x568 SWAP1 DUP4 PUSH2 0x197B JUMP JUMPDEST PUSH1 0xC SSTORE DUP3 ISZERO PUSH2 0x5A5 JUMPI PUSH2 0x5A5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP6 PUSH2 0x1987 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x5DF JUMPI PUSH2 0x5DF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP5 PUSH2 0x1987 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5F3 SWAP1 PUSH2 0x3F62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x61F SWAP1 PUSH2 0x3F62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x66C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x641 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x66C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x64F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x681 PUSH2 0x19DD JUMP JUMPDEST SWAP1 POP PUSH2 0x68E DUP2 DUP6 DUP6 PUSH2 0x19E1 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x74E PUSH2 0x19DD JUMP JUMPDEST SWAP1 POP PUSH2 0x75B DUP6 DUP3 DUP6 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x766 DUP6 DUP6 DUP6 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3DAC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE DUP8 ISZERO ISZERO DUP1 PUSH2 0x7B9 JUMPI POP PUSH1 0x0 DUP8 GT JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3A6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7F6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x388F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x834 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x856 SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x860 DUP9 DUP9 PUSH2 0x1CC3 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B5D JUMP JUMPDEST DUP6 DUP3 LT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3829 JUMP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3C22 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x8FF JUMPI PUSH2 0x8FF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x1DE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x93A JUMPI PUSH2 0x93A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x1DE6 JUMP JUMPDEST PUSH2 0x944 DUP5 DUP5 PUSH2 0x1E07 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x98B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 SLOAD PUSH2 0x99E PUSH2 0x6FF JUMP JUMPDEST GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3D3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9DA PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x68E SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xA16 SWAP1 DUP8 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B39 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF4 PUSH1 0xC SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xACA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x352D JUMP JUMPDEST SWAP1 PUSH2 0x197B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF4 PUSH1 0xB SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B39 JUMP JUMPDEST PUSH3 0xF4240 DUP2 LT PUSH2 0xBD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3ACF JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3DAC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B13 JUMP JUMPDEST PUSH2 0xC38 DUP7 DUP7 PUSH2 0x1ED3 JUMP JUMPDEST PUSH2 0xC42 DUP5 DUP5 PUSH2 0x1ED3 JUMP JUMPDEST PUSH2 0xC4C DUP3 DUP3 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x3484 JUMP JUMPDEST POP POP POP POP POP SWAP2 POP POP DUP1 PUSH1 0x2 SIGNEXTEND DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3A07 JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3C46 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0xD57 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x1FC8 JUMP JUMPDEST POP POP PUSH1 0xA SLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0xD84 SWAP3 POP PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP3 POP PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND PUSH2 0x1FC8 JUMP JUMPDEST POP POP PUSH1 0xA SLOAD SWAP3 SWAP4 POP PUSH2 0xDB0 SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP4 POP PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND SWAP1 POP DUP5 PUSH2 0x208F JUMP JUMPDEST POP POP PUSH1 0xA SLOAD PUSH2 0xDD8 SWAP3 POP PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP3 POP PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND DUP4 PUSH2 0x208F JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 PUSH2 0xDE8 PUSH2 0xB18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDF4 PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP PUSH32 0x210F60ADF1DB7A02E9DB9A49EC7C2EB2060C516CBCFD01A0C05288144738EE5D DUP4 DUP4 DUP4 PUSH2 0xE22 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE32 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP11 ISZERO PUSH2 0xF11 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x128ACB08 ADDRESS PUSH1 0x0 DUP15 SGT DUP1 PUSH2 0xE87 JUMPI PUSH2 0xE82 DUP16 PUSH2 0x3FF4 JUMP JUMPDEST PUSH2 0xE89 JUMP JUMPDEST DUP15 JUMPDEST DUP15 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEFA SWAP2 SWAP1 PUSH2 0x32E2 JUMP JUMPDEST POP POP PUSH2 0xF04 PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0E PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xF1F DUP11 DUP11 DUP6 DUP6 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP PUSH2 0xF2C DUP11 DUP11 DUP4 PUSH2 0x239E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x2 DUP13 DUP2 SIGNEXTEND PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT SWAP3 DUP15 SWAP1 SIGNEXTEND SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xB8 SHL MUL PUSH3 0xFFFFFF PUSH1 0xB8 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE PUSH2 0xF72 PUSH2 0xB18 JUMP JUMPDEST SWAP3 POP PUSH2 0xF7C PUSH2 0xA4A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0xF8C DUP10 DUP10 DUP7 DUP7 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF9C DUP9 DUP9 DUP8 DUP8 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x1006 JUMPI PUSH2 0xFC3 DUP11 DUP11 DUP5 PUSH2 0x239E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x2 DUP13 DUP2 SIGNEXTEND PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xD0 SHL MUL PUSH3 0xFFFFFF PUSH1 0xD0 SHL NOT SWAP3 DUP15 SWAP1 SIGNEXTEND SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xE8 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x1011 DUP9 DUP9 DUP4 PUSH2 0x239E JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x2 DUP11 DUP2 SIGNEXTEND PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xD0 SHL MUL PUSH3 0xFFFFFF PUSH1 0xD0 SHL NOT SWAP3 DUP13 SWAP1 SIGNEXTEND SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xE8 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5F3 SWAP1 PUSH2 0x3F62 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1095 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP4 DUP2 LT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3DE3 JUMP JUMPDEST PUSH2 0x10EB DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x19E1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1101 PUSH2 0x19DD JUMP JUMPDEST SWAP1 POP PUSH2 0x68E DUP2 DUP6 DUP6 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1120 DUP8 DUP8 PUSH2 0x1FC8 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP SWAP3 POP PUSH2 0x1133 DUP8 DUP8 DUP6 PUSH2 0x23FF JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP7 POP SWAP5 POP PUSH1 0x0 SWAP1 PUSH2 0x114C SWAP1 PUSH3 0xF4240 SWAP1 PUSH2 0x197B JUMP JUMPDEST SWAP1 POP PUSH2 0x1178 PUSH2 0x1171 PUSH3 0xF4240 PUSH2 0x116B PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND DUP6 PUSH2 0x24C6 JUMP JUMPDEST SWAP1 PUSH2 0x24D2 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x24DE JUMP JUMPDEST SWAP6 POP PUSH2 0x119E PUSH2 0x1197 PUSH3 0xF4240 PUSH2 0x116B PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND DUP6 PUSH2 0x24C6 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x24DE JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B39 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA34123A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA34123A7 SWAP1 PUSH2 0x1271 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x376D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x128A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x129E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x32E2 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x9E3D67B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x4F1EB3D8 SWAP1 PUSH2 0x131F SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x134C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1370 SWAP2 SWAP1 PUSH2 0x33F5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B39 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x13F4 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x110E JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1420 SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x110E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x143A DUP3 PUSH2 0x1434 DUP7 PUSH2 0x1434 PUSH2 0xB18 JUMP JUMPDEST SWAP1 PUSH2 0x24DE JUMP JUMPDEST SWAP6 POP PUSH2 0x144C DUP2 PUSH2 0x1434 DUP6 PUSH2 0x1434 PUSH2 0xA4A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x14C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3DAC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE DUP6 PUSH2 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1507 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST PUSH2 0x1523 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x388F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152D PUSH2 0x6FF JUMP JUMPDEST SWAP1 POP PUSH2 0x1539 CALLER DUP9 PUSH2 0x24EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1551 DUP3 PUSH2 0x116B DUP11 PUSH2 0x154B PUSH2 0xB18 JUMP JUMPDEST SWAP1 PUSH2 0x24C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1565 DUP4 PUSH2 0x116B DUP12 PUSH2 0x154B PUSH2 0xA4A JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1591 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP14 DUP9 PUSH2 0x25DB JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x15BF SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP16 DUP11 PUSH2 0x25DB JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x15D2 DUP3 PUSH2 0x1434 DUP9 DUP8 PUSH2 0x24DE JUMP JUMPDEST SWAP9 POP PUSH2 0x15E2 DUP2 PUSH2 0x1434 DUP8 DUP7 PUSH2 0x24DE JUMP JUMPDEST SWAP8 POP DUP12 DUP10 LT ISZERO PUSH2 0x1604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3829 JUMP JUMPDEST DUP11 DUP9 LT ISZERO PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3C22 JUMP JUMPDEST DUP9 ISZERO PUSH2 0x165E JUMPI PUSH2 0x165E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP12 DUP12 PUSH2 0x1987 JUMP JUMPDEST DUP8 ISZERO PUSH2 0x1698 JUMPI PUSH2 0x1698 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP12 DUP11 PUSH2 0x1987 JUMP JUMPDEST DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F DUP16 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x16DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ISZERO PUSH2 0x176E JUMPI PUSH2 0x176E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP7 PUSH2 0x1987 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x17A8 JUMPI PUSH2 0x17A8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP6 PUSH2 0x1987 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B39 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x184C JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x1868 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3AF4 JUMP JUMPDEST PUSH2 0x5DF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SGT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP7 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT ISZERO PUSH2 0x17A8 JUMPI PUSH2 0x17A8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP6 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76C DUP3 DUP5 PUSH2 0x3F1F JUMP JUMPDEST PUSH2 0x5DF DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19A6 SWAP3 SWAP2 SWAP1 PUSH2 0x3732 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2681 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1A07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3C93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x38DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x1A88 SWAP1 DUP6 SWAP1 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA1 DUP5 DUP5 PUSH2 0x187C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x17A8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1ACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3953 JUMP JUMPDEST PUSH2 0x17A8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1AFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3BDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x37E6 JUMP JUMPDEST PUSH2 0x1B30 DUP4 DUP4 DUP4 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1B69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x39C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1BA0 SWAP1 DUP5 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BEA SWAP2 SWAP1 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17A8 DUP5 DUP5 DUP5 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C09 DUP4 DUP4 PUSH2 0x1FC8 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA34123A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA34123A7 SWAP1 PUSH2 0x1C72 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x376D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1370 SWAP2 SWAP1 PUSH2 0x32E2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1CD1 PUSH2 0x6FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1CDE PUSH2 0x13C9 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 PUSH1 0x0 EQ DUP1 PUSH2 0x1CF1 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 PUSH2 0x1CFC JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1D16 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH2 0x1D32 JUMPI DUP8 SWAP5 POP DUP7 SWAP4 POP PUSH2 0x1D2B DUP6 DUP6 PUSH2 0x2710 JUMP JUMPDEST SWAP6 POP PUSH2 0x1DDC JUMP JUMPDEST DUP2 PUSH2 0x1D48 JUMPI DUP7 SWAP4 POP PUSH2 0x1D2B DUP2 PUSH2 0x116B DUP7 DUP7 PUSH2 0x24C6 JUMP JUMPDEST DUP1 PUSH2 0x1D5E JUMPI DUP8 SWAP5 POP PUSH2 0x1D2B DUP3 PUSH2 0x116B DUP8 DUP7 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7C PUSH2 0x1D6D DUP11 DUP5 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x1D77 DUP11 DUP7 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1D9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3BBE JUMP JUMPDEST PUSH2 0x1DB1 PUSH1 0x1 PUSH2 0x1434 DUP5 PUSH2 0x116B DUP6 DUP5 PUSH2 0x197B JUMP JUMPDEST SWAP6 POP PUSH2 0x1DC6 PUSH1 0x1 PUSH2 0x1434 DUP6 PUSH2 0x116B DUP6 DUP5 PUSH2 0x197B JUMP JUMPDEST SWAP5 POP PUSH2 0x1DD8 DUP3 PUSH2 0x116B DUP6 DUP2 DUP6 DUP10 PUSH2 0x24C6 JUMP JUMPDEST SWAP7 POP POP JUMPDEST POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x17A8 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH2 0x1E39 PUSH1 0x0 DUP4 DUP4 PUSH2 0x5DF JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E4B SWAP2 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1E78 SWAP1 DUP5 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1EBB SWAP1 DUP6 SWAP1 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1ECF PUSH1 0x0 DUP4 DUP4 PUSH2 0x5DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x2 DUP3 DUP2 SIGNEXTEND SWAP1 DUP5 SWAP1 SIGNEXTEND SLT PUSH2 0x1F1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x38AB JUMP JUMPDEST PUSH3 0xD89E7 NOT PUSH1 0x2 DUP5 SWAP1 SIGNEXTEND SLT ISZERO PUSH2 0x1F42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3C68 JUMP JUMPDEST PUSH2 0x1F4F PUSH3 0xD89E7 NOT PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x1F74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3CD7 JUMP JUMPDEST PUSH2 0x1F7E DUP2 DUP5 PUSH2 0x3F9D JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x1F9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x391C JUMP JUMPDEST PUSH2 0x1FA8 DUP2 DUP4 PUSH2 0x3F9D JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x398A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1FDC ADDRESS DUP10 DUP10 PUSH2 0x2736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x514EA4BF PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x514EA4BF SWAP1 PUSH2 0x202B SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x3756 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2057 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x207B SWAP2 SWAP1 PUSH2 0x3423 JUMP JUMPDEST SWAP4 SWAP13 SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND ISZERO PUSH2 0x214A JUMPI PUSH1 0x40 MLOAD PUSH4 0xA34123A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA34123A7 SWAP1 PUSH2 0x20F3 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x376D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x210C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2120 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2144 SWAP2 SWAP1 PUSH2 0x32E2 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4F1EB3D8 ADDRESS DUP12 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21A8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21F9 SWAP2 SWAP1 PUSH2 0x33F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND SWAP1 POP PUSH2 0x2213 DUP3 DUP8 PUSH2 0x197B JUMP JUMPDEST SWAP4 POP PUSH2 0x221F DUP2 DUP7 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP4 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x2290 JUMPI PUSH2 0x2241 PUSH3 0xF4240 PUSH2 0x116B DUP10 DUP5 PUSH2 0x24C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x2254 PUSH3 0xF4240 PUSH2 0x116B DUP9 DUP5 PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2260 DUP8 DUP5 PUSH2 0x197B JUMP JUMPDEST SWAP7 POP PUSH2 0x226C DUP7 DUP4 PUSH2 0x197B JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP7 POP PUSH2 0x227C SWAP1 DUP5 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0xC SLOAD PUSH2 0x228C SWAP1 DUP4 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0xC SSTORE JUMPDEST PUSH32 0x1AC56D7E866E3F5EA9AA92AA11758EAD39A0A5F013F3FEFB0F47CB9D008EDD27 DUP8 DUP8 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x22C5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x234B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x236F SWAP2 SWAP1 PUSH2 0x3484 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH2 0x2394 DUP2 PUSH2 0x2384 DUP9 PUSH2 0x276C JUMP JUMPDEST PUSH2 0x238D DUP9 PUSH2 0x276C JUMP JUMPDEST DUP8 DUP8 PUSH2 0x2B46 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND ISZERO PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x3C8A7D8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x3C8A7D8D SWAP1 PUSH2 0x1C72 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2471 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2495 SWAP2 SWAP1 PUSH2 0x3484 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH2 0x24B9 DUP2 PUSH2 0x24AA DUP9 PUSH2 0x276C JUMP JUMPDEST PUSH2 0x24B3 DUP9 PUSH2 0x276C JUMP JUMPDEST DUP8 PUSH2 0x2C0A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76C DUP3 DUP5 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76C DUP3 DUP5 PUSH2 0x3EC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76C DUP3 DUP5 PUSH2 0x3EAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3B7D JUMP JUMPDEST PUSH2 0x251C DUP3 PUSH1 0x0 DUP4 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2555 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x384D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2584 SWAP1 DUP5 SWAP1 PUSH2 0x3F1F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x25C7 SWAP1 DUP7 SWAP1 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5DF DUP4 PUSH1 0x0 DUP5 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x25EA DUP8 DUP8 PUSH2 0x1FC8 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2612 DUP6 PUSH2 0x116B DUP9 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x24C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2676 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2633 DUP13 DUP13 PUSH2 0x262E DUP9 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x208F JUMP JUMPDEST SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0x2655 PUSH2 0x264E DUP11 PUSH2 0x116B DUP6 DUP15 PUSH2 0x24C6 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x24DE JUMP JUMPDEST SWAP8 POP PUSH2 0x266F PUSH2 0x2668 DUP11 PUSH2 0x116B DUP5 DUP15 PUSH2 0x24C6 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x24DE JUMP JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D6 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CD1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x5DF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x26F4 SWAP2 SWAP1 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3D62 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x2720 JUMPI DUP2 PUSH2 0x76C JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2720 JUMPI DUP2 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x274D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x2783 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x2790 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x2790 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x27A6 JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x27B8 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x27F7 JUMPI PUSH1 0x80 PUSH2 0x27F2 DUP3 PUSH16 0xFFF97272373D413259A46990580E213A PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x2821 JUMPI PUSH1 0x80 PUSH2 0x281C DUP3 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x284B JUMPI PUSH1 0x80 PUSH2 0x2846 DUP3 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x2875 JUMPI PUSH1 0x80 PUSH2 0x2870 DUP3 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x289F JUMPI PUSH1 0x80 PUSH2 0x289A DUP3 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x28C9 JUMPI PUSH1 0x80 PUSH2 0x28C4 DUP3 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x28F3 JUMPI PUSH1 0x80 PUSH2 0x28EE DUP3 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x291E JUMPI PUSH1 0x80 PUSH2 0x2919 DUP3 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x2949 JUMPI PUSH1 0x80 PUSH2 0x2944 DUP3 PUSH16 0xF987A7253AC413176F2B074CF7815E54 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x2974 JUMPI PUSH1 0x80 PUSH2 0x296F DUP3 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x299F JUMPI PUSH1 0x80 PUSH2 0x299A DUP3 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x29CA JUMPI PUSH1 0x80 PUSH2 0x29C5 DUP3 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x29F5 JUMPI PUSH1 0x80 PUSH2 0x29F0 DUP3 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x2A20 JUMPI PUSH1 0x80 PUSH2 0x2A1B DUP3 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x2A4B JUMPI PUSH1 0x80 PUSH2 0x2A46 DUP3 PUSH16 0x31BE135F97D08FD981231505542FCFA6 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x2A77 JUMPI PUSH1 0x80 PUSH2 0x2A72 DUP3 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x2AA2 JUMPI PUSH1 0x80 PUSH2 0x2A9D DUP3 PUSH15 0x5D6AF8DEDB81196699C329225EE604 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x2ACC JUMPI PUSH1 0x80 PUSH2 0x2AC7 DUP3 PUSH14 0x2216E584F5FA1EA926041BEDFE98 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x2AF4 JUMPI PUSH1 0x80 PUSH2 0x2AEF DUP3 PUSH12 0x48A170391F7DC42444E8FA2 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x2B0F JUMPI PUSH2 0x2B0C DUP2 PUSH1 0x0 NOT PUSH2 0x3EC4 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x2B1E PUSH5 0x100000000 DUP3 PUSH2 0x3FBF JUMP JUMPDEST ISZERO PUSH2 0x2B2A JUMPI PUSH1 0x1 PUSH2 0x2B2D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x2B3E SWAP1 PUSH1 0xFF AND PUSH1 0x20 DUP4 SWAP1 SHR PUSH2 0x3EAC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x2B66 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x2B91 JUMPI PUSH2 0x2B8A DUP6 DUP6 DUP6 PUSH2 0x2CE0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C01 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x2BF3 JUMPI PUSH1 0x0 PUSH2 0x2BB8 DUP8 DUP7 DUP7 PUSH2 0x2CE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2BC7 DUP8 DUP10 DUP7 PUSH2 0x2D4A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH2 0x2BE8 JUMPI DUP1 PUSH2 0x2BEA JUMP JUMPDEST DUP2 JUMPDEST SWAP3 POP POP POP PUSH2 0x2C01 JUMP JUMPDEST PUSH2 0x2BFE DUP6 DUP6 DUP5 PUSH2 0x2D4A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x2C2B JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x2C56 JUMPI PUSH2 0x2C4F DUP6 DUP6 DUP6 PUSH2 0x2D80 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C9D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x2C8F JUMPI PUSH2 0x2C7B DUP7 DUP6 DUP6 PUSH2 0x2D80 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C88 DUP6 DUP8 DUP6 PUSH2 0x2DF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x2C9A DUP6 DUP6 DUP6 PUSH2 0x2DF3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 GT ISZERO PUSH2 0x2CCD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B3E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2E3D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x2D00 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH1 0x0 PUSH2 0x2D23 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x2EFD JUMP JUMPDEST SWAP1 POP PUSH2 0x2C01 PUSH2 0x2D45 DUP5 DUP4 PUSH2 0x2D37 DUP10 DUP10 PUSH2 0x3EF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EFD JUMP JUMPDEST PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x2D6A JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x2B3E PUSH2 0x2D45 DUP4 PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x2D37 DUP9 DUP9 PUSH2 0x3EF7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x2DA0 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2DE9 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 SHL PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH2 0x2DD1 DUP8 DUP8 PUSH2 0x3EF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EFD JUMP JUMPDEST PUSH2 0x2B3E SWAP2 SWAP1 PUSH2 0x3EC4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x2E13 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x2B3E PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH2 0x2E2A DUP7 DUP7 PUSH2 0x3EF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x2EFD JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2E5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3A29 JUMP JUMPDEST PUSH2 0x2E68 DUP6 PUSH2 0x3089 JUMP JUMPDEST PUSH2 0x2E84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2EA0 SWAP2 SWAP1 PUSH2 0x3625 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EDD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2EF2 DUP3 DUP3 DUP7 PUSH2 0x30BA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP7 DUP7 MUL SWAP3 POP DUP3 DUP2 LT SWAP1 DUP4 SWAP1 SUB SUB SWAP1 POP DUP1 PUSH2 0x2F33 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x2F28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x76C JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x2F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD DUP1 DUP5 SUB SWAP4 DUP2 GT SWAP1 SWAP3 SUB SWAP2 SWAP1 POP PUSH1 0x0 PUSH2 0x2F5F DUP7 NOT PUSH1 0x1 PUSH2 0x3EAC JUMP JUMPDEST DUP7 AND SWAP6 DUP7 SWAP1 DIV SWAP6 SWAP4 DUP5 SWAP1 DIV SWAP4 PUSH1 0x0 DUP2 SWAP1 SUB DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2F80 DUP2 DUP5 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 SWAP4 OR SWAP3 PUSH1 0x0 PUSH2 0x2F91 DUP8 PUSH1 0x3 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x2 XOR SWAP1 POP PUSH2 0x2FA0 DUP2 DUP9 PUSH2 0x3ED8 JUMP JUMPDEST PUSH2 0x2FAB SWAP1 PUSH1 0x2 PUSH2 0x3F1F JUMP JUMPDEST PUSH2 0x2FB5 SWAP1 DUP3 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC1 DUP2 DUP9 PUSH2 0x3ED8 JUMP JUMPDEST PUSH2 0x2FCC SWAP1 PUSH1 0x2 PUSH2 0x3F1F JUMP JUMPDEST PUSH2 0x2FD6 SWAP1 DUP3 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FE2 DUP2 DUP9 PUSH2 0x3ED8 JUMP JUMPDEST PUSH2 0x2FED SWAP1 PUSH1 0x2 PUSH2 0x3F1F JUMP JUMPDEST PUSH2 0x2FF7 SWAP1 DUP3 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3003 DUP2 DUP9 PUSH2 0x3ED8 JUMP JUMPDEST PUSH2 0x300E SWAP1 PUSH1 0x2 PUSH2 0x3F1F JUMP JUMPDEST PUSH2 0x3018 SWAP1 DUP3 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3024 DUP2 DUP9 PUSH2 0x3ED8 JUMP JUMPDEST PUSH2 0x302F SWAP1 PUSH1 0x2 PUSH2 0x3F1F JUMP JUMPDEST PUSH2 0x3039 SWAP1 DUP3 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3045 DUP2 DUP9 PUSH2 0x3ED8 JUMP JUMPDEST PUSH2 0x3050 SWAP1 PUSH1 0x2 PUSH2 0x3F1F JUMP JUMPDEST PUSH2 0x305A SWAP1 DUP3 PUSH2 0x3ED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3066 DUP2 DUP7 PUSH2 0x3ED8 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE DUP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 DUP1 PUSH1 0x20 ADD SWAP1 SWAP4 EXTCODECOPY MLOAD GT SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x30C9 JUMPI POP DUP2 PUSH2 0x76C JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x30D9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x37B3 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3114 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x312B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x316D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x76C DUP2 PUSH2 0x403A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x318A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3195 DUP2 PUSH2 0x403A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x31A5 DUP2 PUSH2 0x403A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31C4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x31CF DUP2 PUSH2 0x403A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x31DF DUP2 PUSH2 0x403A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3202 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x320D DUP2 PUSH2 0x403A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x322C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x76C DUP3 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3249 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3254 DUP2 PUSH2 0x403A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x326B DUP2 PUSH2 0x403A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3288 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3293 DUP2 PUSH2 0x4052 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x31A5 DUP2 PUSH2 0x4052 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x32B7 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x32C2 DUP2 PUSH2 0x4052 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x32D2 DUP2 PUSH2 0x4052 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x326B DUP2 PUSH2 0x4061 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32F4 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x331A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x333E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x334A DUP8 DUP3 DUP9 ADD PUSH2 0x3103 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3372 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x3384 DUP2 PUSH2 0x403A JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x3394 DUP2 PUSH2 0x4052 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x33A4 DUP2 PUSH2 0x4052 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH2 0x33B4 DUP2 PUSH2 0x4052 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x33C4 DUP2 PUSH2 0x4052 JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x33D4 DUP2 PUSH2 0x4052 JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH2 0x33E4 DUP2 PUSH2 0x4052 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3407 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x3412 DUP2 PUSH2 0x4061 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x31A5 DUP2 PUSH2 0x4061 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x343A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x3445 DUP2 PUSH2 0x4061 JUMP JUMPDEST DUP1 SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x3465 DUP2 PUSH2 0x4061 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x3476 DUP2 PUSH2 0x4061 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x349E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x34A9 DUP2 PUSH2 0x403A JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP PUSH2 0x34BA DUP2 PUSH2 0x4052 JUMP JUMPDEST SWAP6 POP PUSH2 0x34C8 PUSH1 0x40 DUP10 ADD PUSH2 0x314A JUMP JUMPDEST SWAP5 POP PUSH2 0x34D6 PUSH1 0x60 DUP10 ADD PUSH2 0x314A JUMP JUMPDEST SWAP4 POP PUSH2 0x34E4 PUSH1 0x80 DUP10 ADD PUSH2 0x314A JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x34F9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP2 POP PUSH2 0x3507 PUSH1 0xC0 DUP10 ADD PUSH2 0x30F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3526 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x353E JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3559 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x326B DUP2 PUSH2 0x403A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3587 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x35A7 DUP2 PUSH2 0x403A JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x35C9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x3476 DUP2 PUSH2 0x403A JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 MSTORE PUSH1 0x2 SWAP2 DUP3 SIGNEXTEND PUSH1 0xE8 SWAP1 DUP2 SHL PUSH1 0x14 DUP6 ADD MSTORE SWAP2 SIGNEXTEND SWAP1 SHL PUSH1 0x17 DUP3 ADD MSTORE PUSH1 0x1A ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3637 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3F36 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x2 SWAP3 DUP4 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SIGNEXTEND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x2 SWAP4 DUP5 SIGNEXTEND PUSH1 0x20 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP5 SWAP1 SWAP5 SIGNEXTEND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x37D2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3F36 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x30B6B7BAB73A1826B4B7 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x746F PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x3A34B1B5A637BBB2B9101E103A34B1B5AAB83832B9 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x7469636B4C6F7765722025207469636B53706163696E67000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x7469636B55707065722025207469636B53706163696E67000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x3134B22AB83832B9 PUSH1 0xC1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x616D6F756E743044657369726564206F7220616D6F756E743144657369726564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x70656E64696E67476F7665726E616E6365 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x70726F746F636F6C466565 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x5 SWAP1 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x29B430B93832A5B2B2B832B9 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x736861726573 PUSH1 0xD0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x5 SWAP1 DUP3 ADD MSTORE PUSH5 0x63726F7373 PUSH1 0xD8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x30B6B7BAB73A18A6B4B7 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x30B9B5A637BBB2B9 PUSH1 0xC1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x7469636B4C6F77657220746F6F206C6F77 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0xE8D2C6D6AAE0E0CAE440E8DEDE40D0D2CED PUSH1 0x73 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x6D6178546F74616C537570706C79 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3EBF JUMPI PUSH2 0x3EBF PUSH2 0x400E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3ED3 JUMPI PUSH2 0x3ED3 PUSH2 0x4024 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3EF2 JUMPI PUSH2 0x3EF2 PUSH2 0x400E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x3F17 JUMPI PUSH2 0x3F17 PUSH2 0x400E JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3F31 JUMPI PUSH2 0x3F31 PUSH2 0x400E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F51 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3F39 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17A8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3F76 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3F97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 SIGNEXTEND DUP1 PUSH2 0x3FB0 JUMPI PUSH2 0x3FB0 PUSH2 0x4024 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x2 SIGNEXTEND SMOD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3FCE JUMPI PUSH2 0x3FCE PUSH2 0x4024 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND PUSH3 0x7FFFFF NOT DUP2 EQ ISZERO PUSH2 0x3FED JUMPI PUSH2 0x3FED PUSH2 0x400E JUMP JUMPDEST SWAP1 SUB SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ ISZERO PUSH2 0x400A JUMPI PUSH2 0x400A PUSH2 0x400E JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x404F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0x404F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x404F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xC0 0xA9 RETURNDATASIZE 0x24 0xCB 0x21 0xBE SSTORE PUSH7 0xF8BEF62BEC6DA6 RETURNDATASIZE GT 0xE JUMPDEST DUP6 0xAD PUSH13 0xE14459D6A78436664736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
    "pcMap": {
      "0": {
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x80"
      },
      "2": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "4": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "5": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "CALLVALUE",
        "path": "23"
      },
      "6": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x10"
      },
      "11": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "12": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "14": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "15": {
        "dev": "Cannot send ether to nonpayable function",
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "REVERT",
        "path": "23"
      },
      "16": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "17": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "POP",
        "path": "23"
      },
      "18": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "20": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "21": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "LT",
        "path": "23"
      },
      "22": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x269"
      },
      "25": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "26": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "28": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "CALLDATALOAD",
        "path": "23"
      },
      "29": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "31": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "SHR",
        "path": "23"
      },
      "32": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "33": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x87E5E083"
      },
      "38": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "GT",
        "path": "23"
      },
      "39": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x151"
      },
      "42": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "43": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "44": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xC4A7761E"
      },
      "49": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "GT",
        "path": "23"
      },
      "50": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xC3"
      },
      "53": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "54": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "55": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xDC2C256F"
      },
      "60": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "GT",
        "path": "23"
      },
      "61": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x87"
      },
      "64": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "65": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "66": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xDC2C256F"
      },
      "71": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "72": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x4C7"
      },
      "75": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "76": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "77": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xDD62ED3E"
      },
      "82": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "83": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x4DA"
      },
      "86": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "87": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "88": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xEAE989A2"
      },
      "93": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "94": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x4ED"
      },
      "97": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "98": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "99": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xF39C38A0"
      },
      "104": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "105": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x4F5"
      },
      "108": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "109": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "110": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xFA082743"
      },
      "115": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "116": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x4FD"
      },
      "119": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "120": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "121": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xFA461E33"
      },
      "126": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "127": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x505"
      },
      "130": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "131": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x269"
      },
      "134": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMP",
        "path": "23"
      },
      "135": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "136": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "137": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xC4A7761E"
      },
      "142": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "143": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x489"
      },
      "146": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "147": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "148": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xD0C93A7C"
      },
      "153": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "154": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x491"
      },
      "157": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "158": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "159": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xD21220A7"
      },
      "164": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "165": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x499"
      },
      "168": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "169": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "170": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xD331BEF7"
      },
      "175": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "176": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x4A1"
      },
      "179": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "180": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "181": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xD3487997"
      },
      "186": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "187": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x4B4"
      },
      "190": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "191": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x269"
      },
      "194": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMP",
        "path": "23"
      },
      "195": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "196": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "197": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xA9059CBB"
      },
      "202": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "GT",
        "path": "23"
      },
      "203": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x115"
      },
      "206": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "207": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "208": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xA9059CBB"
      },
      "213": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "214": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x414"
      },
      "217": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "218": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "219": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xA91EF6EB"
      },
      "224": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "225": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x427"
      },
      "228": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "229": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "230": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xAB033EA9"
      },
      "235": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "236": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x448"
      },
      "239": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "240": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "241": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xABBFFCB9"
      },
      "246": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "247": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x45B"
      },
      "250": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "251": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "252": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xB0E21E8A"
      },
      "257": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "258": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x46E"
      },
      "261": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "262": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "263": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xB3A3D00C"
      },
      "268": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "269": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x476"
      },
      "272": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "273": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x269"
      },
      "276": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMP",
        "path": "23"
      },
      "277": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "278": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "279": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x87E5E083"
      },
      "284": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "285": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3D6"
      },
      "288": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "289": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "290": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x888A9134"
      },
      "295": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "296": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3E9"
      },
      "299": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "300": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "301": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x95D89B41"
      },
      "306": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "307": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3F1"
      },
      "310": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "311": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "312": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xA00FA77F"
      },
      "317": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "318": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3F9"
      },
      "321": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "322": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "323": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xA457C2D7"
      },
      "328": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "329": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x401"
      },
      "332": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "333": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x269"
      },
      "336": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMP",
        "path": "23"
      },
      "337": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "338": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "339": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x2AB4D052"
      },
      "344": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "GT",
        "path": "23"
      },
      "345": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1EA"
      },
      "348": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "349": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "350": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x41AEC538"
      },
      "355": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "GT",
        "path": "23"
      },
      "356": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1AE"
      },
      "359": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "360": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "361": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x41AEC538"
      },
      "366": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "367": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x390"
      },
      "370": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "371": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "372": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x51E87AF7"
      },
      "377": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "378": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x398"
      },
      "381": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "382": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "383": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x5AA6E675"
      },
      "388": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "389": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3A0"
      },
      "392": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "393": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "394": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x629D9405"
      },
      "399": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "400": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3A8"
      },
      "403": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "404": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "405": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x70A08231"
      },
      "410": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "411": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B0"
      },
      "414": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "415": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "416": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x787DCE3D"
      },
      "421": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "422": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3C3"
      },
      "425": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "426": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x269"
      },
      "429": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMP",
        "path": "23"
      },
      "430": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "431": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "432": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x2AB4D052"
      },
      "437": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "438": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x32B"
      },
      "441": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "442": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "443": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x313CE567"
      },
      "448": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "449": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x333"
      },
      "452": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "453": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "454": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x365D0ED7"
      },
      "459": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "460": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x348"
      },
      "463": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "464": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "465": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x39509351"
      },
      "470": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "471": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x36A"
      },
      "474": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "475": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "476": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x3F3E4C11"
      },
      "481": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "482": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x37D"
      },
      "485": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "486": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x269"
      },
      "489": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMP",
        "path": "23"
      },
      "490": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "491": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "492": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xF35BCAC"
      },
      "497": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "GT",
        "path": "23"
      },
      "498": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x231"
      },
      "501": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "502": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "503": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xF35BCAC"
      },
      "508": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "509": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2DE"
      },
      "512": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "513": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "514": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x16F0115B"
      },
      "519": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "520": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2F3"
      },
      "523": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "524": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "525": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x18160DDD"
      },
      "530": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "531": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2FB"
      },
      "534": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "535": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "536": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x238EFCBC"
      },
      "541": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "542": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x310"
      },
      "545": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "546": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "547": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x23B872DD"
      },
      "552": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "553": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x318"
      },
      "556": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "557": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x269"
      },
      "560": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMP",
        "path": "23"
      },
      "561": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "562": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "563": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x430C130"
      },
      "568": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "569": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x26E"
      },
      "572": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "573": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "574": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x6FDDE03"
      },
      "579": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "580": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x283"
      },
      "583": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "584": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "585": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x95EA7B3"
      },
      "590": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "591": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2A1"
      },
      "594": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "595": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "596": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xC42383A"
      },
      "601": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "602": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2C1"
      },
      "605": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "606": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "607": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xDFE1681"
      },
      "612": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "EQ",
        "path": "23"
      },
      "613": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2D6"
      },
      "616": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "617": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "618": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "620": {
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "DUP1",
        "path": "23"
      },
      "621": {
        "first_revert": true,
        "fn": null,
        "offset": [
          1648,
          23774
        ],
        "op": "REVERT",
        "path": "23"
      },
      "622": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "623": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "626": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x27C"
      },
      "629": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "630": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "632": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3545"
      },
      "635": {
        "fn": "SharpeAI.collectProtocol",
        "jump": "i",
        "offset": [
          20924,
          21315
        ],
        "op": "JUMP",
        "path": "23"
      },
      "636": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "637": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x518"
      },
      "640": {
        "fn": "SharpeAI.collectProtocol",
        "jump": "i",
        "offset": [
          20924,
          21315
        ],
        "op": "JUMP",
        "path": "23"
      },
      "641": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "642": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "STOP",
        "path": "23"
      },
      "643": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "644": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x28B"
      },
      "647": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5E4"
      },
      "650": {
        "fn": "ERC20.name",
        "jump": "i",
        "offset": [
          2156,
          2254
        ],
        "op": "JUMP",
        "path": "1"
      },
      "651": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "652": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "654": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "655": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x298"
      },
      "658": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "659": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "660": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x37B3"
      },
      "663": {
        "fn": "ERC20.name",
        "jump": "i",
        "offset": [
          2156,
          2254
        ],
        "op": "JUMP",
        "path": "1"
      },
      "664": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "665": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "667": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "668": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "DUP1",
        "path": "1"
      },
      "669": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "670": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "SUB",
        "path": "1"
      },
      "671": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "672": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "RETURN",
        "path": "1"
      },
      "673": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "674": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2B4"
      },
      "677": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2AF"
      },
      "680": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "681": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "683": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x31F0"
      },
      "686": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          4433,
          4630
        ],
        "op": "JUMP",
        "path": "1"
      },
      "687": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "688": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x676"
      },
      "691": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          4433,
          4630
        ],
        "op": "JUMP",
        "path": "1"
      },
      "692": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "693": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "695": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "696": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x298"
      },
      "699": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "700": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "701": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x374B"
      },
      "704": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          4433,
          4630
        ],
        "op": "JUMP",
        "path": "1"
      },
      "705": {
        "offset": [
          2678,
          2705
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "706": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2C9"
      },
      "709": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x698"
      },
      "712": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          2678,
          2705
        ],
        "op": "JUMP",
        "path": "23"
      },
      "713": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "714": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "716": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "717": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x298"
      },
      "720": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "721": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "722": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3641"
      },
      "725": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          2678,
          2705
        ],
        "op": "JUMP",
        "path": "23"
      },
      "726": {
        "offset": [
          2492,
          2522
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "727": {
        "fn": "ERC20.approve",
        "offset": [
          2492,
          2522
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2C9"
      },
      "730": {
        "fn": "ERC20.approve",
        "offset": [
          2492,
          2522
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x6A7"
      },
      "733": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          2492,
          2522
        ],
        "op": "JUMP",
        "path": "23"
      },
      "734": {
        "offset": [
          2873,
          2896
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "735": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2E6"
      },
      "738": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x6CB"
      },
      "741": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          2873,
          2896
        ],
        "op": "JUMP",
        "path": "23"
      },
      "742": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "743": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "745": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "746": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x298"
      },
      "749": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "750": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "751": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x375F"
      },
      "754": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          2873,
          2896
        ],
        "op": "JUMP",
        "path": "23"
      },
      "755": {
        "offset": [
          2449,
          2485
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "756": {
        "fn": "ERC20.approve",
        "offset": [
          2449,
          2485
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2C9"
      },
      "759": {
        "fn": "ERC20.approve",
        "offset": [
          2449,
          2485
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x6DB"
      },
      "762": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          2449,
          2485
        ],
        "op": "JUMP",
        "path": "23"
      },
      "763": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "764": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x303"
      },
      "767": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x6FF"
      },
      "770": {
        "fn": "ERC20.totalSupply",
        "jump": "i",
        "offset": [
          3244,
          3350
        ],
        "op": "JUMP",
        "path": "1"
      },
      "771": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "772": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "774": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "775": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x298"
      },
      "778": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "779": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "780": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3756"
      },
      "783": {
        "fn": "ERC20.totalSupply",
        "jump": "i",
        "offset": [
          3244,
          3350
        ],
        "op": "JUMP",
        "path": "1"
      },
      "784": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23510,
          23661
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "785": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23510,
          23661
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "788": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23510,
          23661
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x705"
      },
      "791": {
        "fn": "SharpeAI.acceptGovernance",
        "jump": "i",
        "offset": [
          23510,
          23661
        ],
        "op": "JUMP",
        "path": "23"
      },
      "792": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "793": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2B4"
      },
      "796": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x326"
      },
      "799": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "800": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "802": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x31B0"
      },
      "805": {
        "fn": "ERC20.transferFrom",
        "jump": "i",
        "offset": [
          5192,
          5478
        ],
        "op": "JUMP",
        "path": "1"
      },
      "806": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "807": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x743"
      },
      "810": {
        "fn": "ERC20.transferFrom",
        "jump": "i",
        "offset": [
          5192,
          5478
        ],
        "op": "JUMP",
        "path": "1"
      },
      "811": {
        "offset": [
          2642,
          2671
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "812": {
        "fn": "ERC20.transferFrom",
        "offset": [
          2642,
          2671
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x303"
      },
      "815": {
        "fn": "ERC20.transferFrom",
        "offset": [
          2642,
          2671
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x773"
      },
      "818": {
        "fn": "ERC20.transferFrom",
        "jump": "i",
        "offset": [
          2642,
          2671
        ],
        "op": "JUMP",
        "path": "23"
      },
      "819": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "820": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x33B"
      },
      "823": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x779"
      },
      "826": {
        "fn": "ERC20.decimals",
        "jump": "i",
        "offset": [
          3093,
          3184
        ],
        "op": "JUMP",
        "path": "1"
      },
      "827": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "828": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "830": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "831": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x298"
      },
      "834": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "835": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "836": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3E9E"
      },
      "839": {
        "fn": "ERC20.decimals",
        "jump": "i",
        "offset": [
          3093,
          3184
        ],
        "op": "JUMP",
        "path": "1"
      },
      "840": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "841": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x35B"
      },
      "844": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x356"
      },
      "847": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "848": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "850": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x35B2"
      },
      "853": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          4629,
          6022
        ],
        "op": "JUMP",
        "path": "23"
      },
      "854": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "855": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x77E"
      },
      "858": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          4629,
          6022
        ],
        "op": "JUMP",
        "path": "23"
      },
      "859": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "860": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "862": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "863": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x298"
      },
      "866": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "867": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "868": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "869": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "870": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3E6D"
      },
      "873": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          4629,
          6022
        ],
        "op": "JUMP",
        "path": "23"
      },
      "874": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5873,
          6109
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "875": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5873,
          6109
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2B4"
      },
      "878": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5873,
          6109
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x378"
      },
      "881": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5873,
          6109
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "882": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5873,
          6109
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "884": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5873,
          6109
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x31F0"
      },
      "887": {
        "fn": "ERC20.increaseAllowance",
        "jump": "i",
        "offset": [
          5873,
          6109
        ],
        "op": "JUMP",
        "path": "1"
      },
      "888": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5873,
          6109
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "889": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5873,
          6109
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x9CF"
      },
      "892": {
        "fn": "ERC20.increaseAllowance",
        "jump": "i",
        "offset": [
          5873,
          6109
        ],
        "op": "JUMP",
        "path": "1"
      },
      "893": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22558,
          22685
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "894": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22558,
          22685
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "897": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22558,
          22685
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x38B"
      },
      "900": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22558,
          22685
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "901": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22558,
          22685
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "903": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22558,
          22685
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3515"
      },
      "906": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "jump": "i",
        "offset": [
          22558,
          22685
        ],
        "op": "JUMP",
        "path": "23"
      },
      "907": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22558,
          22685
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "908": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22558,
          22685
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xA1B"
      },
      "911": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "jump": "i",
        "offset": [
          22558,
          22685
        ],
        "op": "JUMP",
        "path": "23"
      },
      "912": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18064,
          18200
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "913": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18064,
          18200
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x303"
      },
      "916": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18064,
          18200
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xA4A"
      },
      "919": {
        "fn": "SharpeAI.getBalance1",
        "jump": "i",
        "offset": [
          18064,
          18200
        ],
        "op": "JUMP",
        "path": "23"
      },
      "920": {
        "offset": [
          2843,
          2866
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "921": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2843,
          2866
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2E6"
      },
      "924": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2843,
          2866
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xAF9"
      },
      "927": {
        "fn": "SharpeAI.getBalance1",
        "jump": "i",
        "offset": [
          2843,
          2866
        ],
        "op": "JUMP",
        "path": "23"
      },
      "928": {
        "offset": [
          2712,
          2737
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "929": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2712,
          2737
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2C9"
      },
      "932": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2712,
          2737
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xB09"
      },
      "935": {
        "fn": "SharpeAI.getBalance1",
        "jump": "i",
        "offset": [
          2712,
          2737
        ],
        "op": "JUMP",
        "path": "23"
      },
      "936": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17833,
          17969
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "937": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17833,
          17969
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x303"
      },
      "940": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17833,
          17969
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xB18"
      },
      "943": {
        "fn": "SharpeAI.getBalance0",
        "jump": "i",
        "offset": [
          17833,
          17969
        ],
        "op": "JUMP",
        "path": "23"
      },
      "944": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "945": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x303"
      },
      "948": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3BE"
      },
      "951": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "952": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "954": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x315C"
      },
      "957": {
        "fn": "ERC20.balanceOf",
        "jump": "i",
        "offset": [
          3408,
          3533
        ],
        "op": "JUMP",
        "path": "1"
      },
      "958": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "959": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xB6C"
      },
      "962": {
        "fn": "ERC20.balanceOf",
        "jump": "i",
        "offset": [
          3408,
          3533
        ],
        "op": "JUMP",
        "path": "1"
      },
      "963": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22100,
          22268
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "964": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22100,
          22268
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "967": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22100,
          22268
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3D1"
      },
      "970": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22100,
          22268
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "971": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22100,
          22268
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "973": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22100,
          22268
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3515"
      },
      "976": {
        "fn": "SharpeAI.setProtocolFee",
        "jump": "i",
        "offset": [
          22100,
          22268
        ],
        "op": "JUMP",
        "path": "23"
      },
      "977": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22100,
          22268
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "978": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22100,
          22268
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xB8B"
      },
      "981": {
        "fn": "SharpeAI.setProtocolFee",
        "jump": "i",
        "offset": [
          22100,
          22268
        ],
        "op": "JUMP",
        "path": "23"
      },
      "982": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11199,
          13740
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "983": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11199,
          13740
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "986": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11199,
          13740
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3E4"
      },
      "989": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11199,
          13740
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "990": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11199,
          13740
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "992": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11199,
          13740
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3356"
      },
      "995": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          11199,
          13740
        ],
        "op": "JUMP",
        "path": "23"
      },
      "996": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11199,
          13740
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "997": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11199,
          13740
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xBDC"
      },
      "1000": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          11199,
          13740
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1001": {
        "offset": [
          2814,
          2836
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1002": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2814,
          2836
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2E6"
      },
      "1005": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2814,
          2836
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1065"
      },
      "1008": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          2814,
          2836
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1009": {
        "fn": "ERC20.symbol",
        "offset": [
          2367,
          2469
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1010": {
        "fn": "ERC20.symbol",
        "offset": [
          2367,
          2469
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x28B"
      },
      "1013": {
        "fn": "ERC20.symbol",
        "offset": [
          2367,
          2469
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1075"
      },
      "1016": {
        "fn": "ERC20.symbol",
        "jump": "i",
        "offset": [
          2367,
          2469
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1017": {
        "offset": [
          2945,
          2980
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1018": {
        "fn": "ERC20.symbol",
        "offset": [
          2945,
          2980
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x303"
      },
      "1021": {
        "fn": "ERC20.symbol",
        "offset": [
          2945,
          2980
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1084"
      },
      "1024": {
        "fn": "ERC20.symbol",
        "jump": "i",
        "offset": [
          2945,
          2980
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1025": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6596,
          7025
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1026": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6596,
          7025
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2B4"
      },
      "1029": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6596,
          7025
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x40F"
      },
      "1032": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6596,
          7025
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "1033": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6596,
          7025
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1035": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6596,
          7025
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x31F0"
      },
      "1038": {
        "fn": "ERC20.decreaseAllowance",
        "jump": "i",
        "offset": [
          6596,
          7025
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1039": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6596,
          7025
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1040": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6596,
          7025
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x108A"
      },
      "1043": {
        "fn": "ERC20.decreaseAllowance",
        "jump": "i",
        "offset": [
          6596,
          7025
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1044": {
        "fn": "ERC20.transfer",
        "offset": [
          3729,
          3918
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1045": {
        "fn": "ERC20.transfer",
        "offset": [
          3729,
          3918
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2B4"
      },
      "1048": {
        "fn": "ERC20.transfer",
        "offset": [
          3729,
          3918
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x422"
      },
      "1051": {
        "fn": "ERC20.transfer",
        "offset": [
          3729,
          3918
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "1052": {
        "fn": "ERC20.transfer",
        "offset": [
          3729,
          3918
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1054": {
        "fn": "ERC20.transfer",
        "offset": [
          3729,
          3918
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x31F0"
      },
      "1057": {
        "fn": "ERC20.transfer",
        "jump": "i",
        "offset": [
          3729,
          3918
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1058": {
        "fn": "ERC20.transfer",
        "offset": [
          3729,
          3918
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1059": {
        "fn": "ERC20.transfer",
        "offset": [
          3729,
          3918
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x10F6"
      },
      "1062": {
        "fn": "ERC20.transfer",
        "jump": "i",
        "offset": [
          3729,
          3918
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1063": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1064": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x43A"
      },
      "1067": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x435"
      },
      "1070": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "1071": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1073": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3276"
      },
      "1076": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17114,
          17738
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1077": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1078": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x110E"
      },
      "1081": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17114,
          17738
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1082": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1083": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "1085": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "1086": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x298"
      },
      "1089": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "1090": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "1091": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "1092": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3E5F"
      },
      "1095": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17114,
          17738
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1096": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23240,
          23358
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1097": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23240,
          23358
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "1100": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23240,
          23358
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x456"
      },
      "1103": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23240,
          23358
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "1104": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23240,
          23358
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1106": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23240,
          23358
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x315C"
      },
      "1109": {
        "fn": "SharpeAI.setGovernance",
        "jump": "i",
        "offset": [
          23240,
          23358
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1110": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23240,
          23358
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1111": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23240,
          23358
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x11AB"
      },
      "1114": {
        "fn": "SharpeAI.setGovernance",
        "jump": "i",
        "offset": [
          23240,
          23358
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1115": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1116": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "1119": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x469"
      },
      "1122": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "1123": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1125": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x32A3"
      },
      "1128": {
        "fn": "SharpeAI.emergencyBurn",
        "jump": "i",
        "offset": [
          22767,
          23060
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1129": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1130": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x11F7"
      },
      "1133": {
        "fn": "SharpeAI.emergencyBurn",
        "jump": "i",
        "offset": [
          22767,
          23060
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1134": {
        "offset": [
          2609,
          2635
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1135": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          2609,
          2635
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x303"
      },
      "1138": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          2609,
          2635
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1377"
      },
      "1141": {
        "fn": "SharpeAI.emergencyBurn",
        "jump": "i",
        "offset": [
          2609,
          2635
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1142": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21826,
          21945
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1143": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21826,
          21945
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "1146": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21826,
          21945
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x484"
      },
      "1149": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21826,
          21945
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "1150": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21826,
          21945
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1152": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21826,
          21945
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x315C"
      },
      "1155": {
        "fn": "SharpeAI.setSharpeKeeper",
        "jump": "i",
        "offset": [
          21826,
          21945
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1156": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21826,
          21945
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1157": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21826,
          21945
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x137D"
      },
      "1160": {
        "fn": "SharpeAI.setSharpeKeeper",
        "jump": "i",
        "offset": [
          21826,
          21945
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1161": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16423,
          16865
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1162": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16423,
          16865
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x43A"
      },
      "1165": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16423,
          16865
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x13C9"
      },
      "1168": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "i",
        "offset": [
          16423,
          16865
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1169": {
        "offset": [
          2566,
          2600
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1170": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          2566,
          2600
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2E6"
      },
      "1173": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          2566,
          2600
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1456"
      },
      "1176": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "i",
        "offset": [
          2566,
          2600
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1177": {
        "offset": [
          2529,
          2559
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1178": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          2529,
          2559
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2C9"
      },
      "1181": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          2529,
          2559
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x147A"
      },
      "1184": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "i",
        "offset": [
          2529,
          2559
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1185": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1186": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x43A"
      },
      "1189": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x4AF"
      },
      "1192": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "1193": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1195": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3572"
      },
      "1198": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          8460,
          9967
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1199": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1200": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x149E"
      },
      "1203": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          8460,
          9967
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1204": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1205": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "1208": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x4C2"
      },
      "1211": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "1212": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1214": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3305"
      },
      "1217": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "jump": "i",
        "offset": [
          20083,
          20412
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1218": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1219": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x16FF"
      },
      "1222": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "jump": "i",
        "offset": [
          20083,
          20412
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1223": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21405,
          21632
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1224": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21405,
          21632
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "1227": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21405,
          21632
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x4D5"
      },
      "1230": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21405,
          21632
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "1231": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21405,
          21632
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1233": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21405,
          21632
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3235"
      },
      "1236": {
        "fn": "SharpeAI.sweep",
        "jump": "i",
        "offset": [
          21405,
          21632
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1237": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21405,
          21632
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1238": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21405,
          21632
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x17AE"
      },
      "1241": {
        "fn": "SharpeAI.sweep",
        "jump": "i",
        "offset": [
          21405,
          21632
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1242": {
        "fn": "ERC20.allowance",
        "offset": [
          3976,
          4125
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1243": {
        "fn": "ERC20.allowance",
        "offset": [
          3976,
          4125
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x303"
      },
      "1246": {
        "fn": "ERC20.allowance",
        "offset": [
          3976,
          4125
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x4E8"
      },
      "1249": {
        "fn": "ERC20.allowance",
        "offset": [
          3976,
          4125
        ],
        "op": "CALLDATASIZE",
        "path": "1"
      },
      "1250": {
        "fn": "ERC20.allowance",
        "offset": [
          3976,
          4125
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "1252": {
        "fn": "ERC20.allowance",
        "offset": [
          3976,
          4125
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3178"
      },
      "1255": {
        "fn": "ERC20.allowance",
        "jump": "i",
        "offset": [
          3976,
          4125
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1256": {
        "fn": "ERC20.allowance",
        "offset": [
          3976,
          4125
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1257": {
        "fn": "ERC20.allowance",
        "offset": [
          3976,
          4125
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x187C"
      },
      "1260": {
        "fn": "ERC20.allowance",
        "jump": "i",
        "offset": [
          3976,
          4125
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1261": {
        "offset": [
          2903,
          2938
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1262": {
        "fn": "ERC20.allowance",
        "offset": [
          2903,
          2938
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x303"
      },
      "1265": {
        "fn": "ERC20.allowance",
        "offset": [
          2903,
          2938
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x18A7"
      },
      "1268": {
        "fn": "ERC20.allowance",
        "jump": "i",
        "offset": [
          2903,
          2938
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1269": {
        "offset": [
          2744,
          2776
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1270": {
        "fn": "ERC20.allowance",
        "offset": [
          2744,
          2776
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2C9"
      },
      "1273": {
        "fn": "ERC20.allowance",
        "offset": [
          2744,
          2776
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x18AD"
      },
      "1276": {
        "fn": "ERC20.allowance",
        "jump": "i",
        "offset": [
          2744,
          2776
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1277": {
        "offset": [
          2785,
          2807
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1278": {
        "fn": "ERC20.allowance",
        "offset": [
          2785,
          2807
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2E6"
      },
      "1281": {
        "fn": "ERC20.allowance",
        "offset": [
          2785,
          2807
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x18BC"
      },
      "1284": {
        "fn": "ERC20.allowance",
        "jump": "i",
        "offset": [
          2785,
          2807
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1285": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20464,
          20839
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1286": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20464,
          20839
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x281"
      },
      "1289": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20464,
          20839
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x513"
      },
      "1292": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20464,
          20839
        ],
        "op": "CALLDATASIZE",
        "path": "23"
      },
      "1293": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20464,
          20839
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1295": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20464,
          20839
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3305"
      },
      "1298": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "jump": "i",
        "offset": [
          20464,
          20839
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1299": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20464,
          20839
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1300": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20464,
          20839
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x18CC"
      },
      "1303": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "jump": "i",
        "offset": [
          20464,
          20839
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1304": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1305": {
        "offset": [
          23726,
          23736
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x9"
      },
      "1307": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23726,
          23736
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "1308": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1310": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1312": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1314": {
        "op": "SHL"
      },
      "1315": {
        "op": "SUB"
      },
      "1316": {
        "offset": [
          23726,
          23736
        ],
        "op": "AND",
        "path": "23"
      },
      "1317": {
        "offset": [
          23712,
          23722
        ],
        "op": "CALLER",
        "path": "23"
      },
      "1318": {
        "offset": [
          23712,
          23736
        ],
        "op": "EQ",
        "path": "23"
      },
      "1319": {
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x54B"
      },
      "1322": {
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "1323": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "1325": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "1326": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1330": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1332": {
        "op": "SHL"
      },
      "1333": {
        "offset": [
          23704,
          23751
        ],
        "op": "DUP2",
        "path": "23"
      },
      "1334": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "1335": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1337": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "ADD",
        "path": "23"
      },
      "1338": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "1341": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "1342": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B39"
      },
      "1345": {
        "fn": "SharpeAI.collectProtocol",
        "jump": "i",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1346": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1347": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "1349": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "1350": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "DUP1",
        "path": "23"
      },
      "1351": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "1352": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "SUB",
        "path": "23"
      },
      "1353": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "1354": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "REVERT",
        "optimizer_revert": true,
        "path": "23"
      },
      "1355": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1356": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21087,
          21107
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 0,
        "value": "0xB"
      },
      "1358": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21087,
          21107
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "1359": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21087,
          21120
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x558"
      },
      "1362": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21087,
          21120
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "1363": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21112,
          21119
        ],
        "op": "DUP5",
        "path": "23"
      },
      "1364": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21087,
          21111
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x197B"
      },
      "1367": {
        "fn": "SharpeAI.collectProtocol",
        "jump": "i",
        "offset": [
          21087,
          21120
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1368": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21087,
          21120
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1369": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21064,
          21084
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xB"
      },
      "1371": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21064,
          21120
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "1372": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21154,
          21174
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 1,
        "value": "0xC"
      },
      "1374": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21154,
          21174
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "1375": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21154,
          21187
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x568"
      },
      "1378": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21154,
          21187
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "1379": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21179,
          21186
        ],
        "op": "DUP4",
        "path": "23"
      },
      "1380": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21154,
          21178
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x197B"
      },
      "1383": {
        "fn": "SharpeAI.collectProtocol",
        "jump": "i",
        "offset": [
          21154,
          21187
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1384": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21154,
          21187
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1385": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21131,
          21151
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xC"
      },
      "1387": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21131,
          21187
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "1388": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21202,
          21213
        ],
        "op": "DUP3",
        "path": "23"
      },
      "1389": {
        "branch": 218,
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21202,
          21213
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "1390": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21198,
          21247
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x5A5"
      },
      "1393": {
        "branch": 218,
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21198,
          21247
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "1394": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21215,
          21247
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 2,
        "value": "0x5A5"
      },
      "1397": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1399": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1401": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1403": {
        "op": "SHL"
      },
      "1404": {
        "op": "SUB"
      },
      "1405": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21215,
          21221
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "1438": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21215,
          21234
        ],
        "op": "AND",
        "path": "23"
      },
      "1439": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21235,
          21237
        ],
        "op": "DUP3",
        "path": "23"
      },
      "1440": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21239,
          21246
        ],
        "op": "DUP6",
        "path": "23"
      },
      "1441": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21215,
          21234
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1987"
      },
      "1444": {
        "fn": "SharpeAI.collectProtocol",
        "jump": "i",
        "offset": [
          21215,
          21247
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1445": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21215,
          21247
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1446": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21262,
          21273
        ],
        "op": "DUP2",
        "path": "23"
      },
      "1447": {
        "branch": 219,
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21262,
          21273
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "1448": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21258,
          21307
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x5DF"
      },
      "1451": {
        "branch": 219,
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21258,
          21307
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "1452": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21275,
          21307
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 3,
        "value": "0x5DF"
      },
      "1455": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1457": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1459": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1461": {
        "op": "SHL"
      },
      "1462": {
        "op": "SUB"
      },
      "1463": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21275,
          21281
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "1496": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21275,
          21294
        ],
        "op": "AND",
        "path": "23"
      },
      "1497": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21295,
          21297
        ],
        "op": "DUP3",
        "path": "23"
      },
      "1498": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21299,
          21306
        ],
        "op": "DUP5",
        "path": "23"
      },
      "1499": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21275,
          21294
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1987"
      },
      "1502": {
        "fn": "SharpeAI.collectProtocol",
        "jump": "i",
        "offset": [
          21275,
          21307
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1503": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          21275,
          21307
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1504": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "POP",
        "path": "23"
      },
      "1505": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "POP",
        "path": "23"
      },
      "1506": {
        "fn": "SharpeAI.collectProtocol",
        "offset": [
          20924,
          21315
        ],
        "op": "POP",
        "path": "23"
      },
      "1507": {
        "fn": "SharpeAI.collectProtocol",
        "jump": "o",
        "offset": [
          20924,
          21315
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1508": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1509": {
        "fn": "ERC20.name",
        "offset": [
          2210,
          2223
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x60"
      },
      "1511": {
        "fn": "ERC20.name",
        "offset": [
          2242,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 4,
        "value": "0x3"
      },
      "1513": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1514": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1515": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5F3"
      },
      "1518": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1519": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3F62"
      },
      "1522": {
        "fn": "ERC20.name",
        "jump": "i",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1523": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1524": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1525": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "1527": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "ADD",
        "path": "1"
      },
      "1528": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1530": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1531": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1532": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DIV",
        "path": "1"
      },
      "1533": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "MUL",
        "path": "1"
      },
      "1534": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1536": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "ADD",
        "path": "1"
      },
      "1537": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1539": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "1540": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1541": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1542": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "ADD",
        "path": "1"
      },
      "1543": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "1545": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1546": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1547": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "1548": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1549": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1550": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1551": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1552": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1553": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1555": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "ADD",
        "path": "1"
      },
      "1556": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1557": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1558": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1559": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x61F"
      },
      "1562": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1563": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3F62"
      },
      "1566": {
        "fn": "ERC20.name",
        "jump": "i",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1567": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1568": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1569": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "1570": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x66C"
      },
      "1573": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1574": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1575": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "1577": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "LT",
        "path": "1"
      },
      "1578": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x641"
      },
      "1581": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1582": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x100"
      },
      "1585": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1586": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP4",
        "path": "1"
      },
      "1587": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1588": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DIV",
        "path": "1"
      },
      "1589": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "MUL",
        "path": "1"
      },
      "1590": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP4",
        "path": "1"
      },
      "1591": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1592": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1593": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1595": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "ADD",
        "path": "1"
      },
      "1596": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1597": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x66C"
      },
      "1600": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1601": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1602": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1603": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "ADD",
        "path": "1"
      },
      "1604": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1605": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1606": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1608": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1609": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1611": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1613": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "1614": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1615": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1616": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1617": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1618": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1619": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "1620": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1621": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "1623": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "ADD",
        "path": "1"
      },
      "1624": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1625": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "1627": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "ADD",
        "path": "1"
      },
      "1628": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1629": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP4",
        "path": "1"
      },
      "1630": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "GT",
        "path": "1"
      },
      "1631": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x64F"
      },
      "1634": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "1635": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1636": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1637": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SUB",
        "path": "1"
      },
      "1638": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1F"
      },
      "1640": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "AND",
        "path": "1"
      },
      "1641": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1642": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "ADD",
        "path": "1"
      },
      "1643": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1644": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1645": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "POP",
        "path": "1"
      },
      "1646": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "POP",
        "path": "1"
      },
      "1647": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "POP",
        "path": "1"
      },
      "1648": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "POP",
        "path": "1"
      },
      "1649": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "POP",
        "path": "1"
      },
      "1650": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1651": {
        "fn": "ERC20.name",
        "offset": [
          2235,
          2247
        ],
        "op": "POP",
        "path": "1"
      },
      "1652": {
        "fn": "ERC20.name",
        "offset": [
          2156,
          2254
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1653": {
        "fn": "ERC20.name",
        "jump": "o",
        "offset": [
          2156,
          2254
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1654": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1655": {
        "fn": "ERC20.approve",
        "offset": [
          4516,
          4520
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1657": {
        "fn": "ERC20.approve",
        "offset": [
          4532,
          4545
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1658": {
        "fn": "ERC20.approve",
        "offset": [
          4548,
          4560
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x681"
      },
      "1661": {
        "fn": "ERC20.approve",
        "offset": [
          4548,
          4558
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19DD"
      },
      "1664": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          4548,
          4560
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1665": {
        "fn": "ERC20.approve",
        "offset": [
          4548,
          4560
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1666": {
        "fn": "ERC20.approve",
        "offset": [
          4532,
          4560
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1667": {
        "fn": "ERC20.approve",
        "offset": [
          4532,
          4560
        ],
        "op": "POP",
        "path": "1"
      },
      "1668": {
        "fn": "ERC20.approve",
        "offset": [
          4570,
          4602
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 5,
        "value": "0x68E"
      },
      "1671": {
        "fn": "ERC20.approve",
        "offset": [
          4579,
          4584
        ],
        "op": "DUP2",
        "path": "1"
      },
      "1672": {
        "fn": "ERC20.approve",
        "offset": [
          4586,
          4593
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1673": {
        "fn": "ERC20.approve",
        "offset": [
          4595,
          4601
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1674": {
        "fn": "ERC20.approve",
        "offset": [
          4570,
          4578
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19E1"
      },
      "1677": {
        "fn": "ERC20.approve",
        "jump": "i",
        "offset": [
          4570,
          4602
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1678": {
        "fn": "ERC20.approve",
        "offset": [
          4570,
          4602
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1679": {
        "op": "POP"
      },
      "1680": {
        "fn": "ERC20.approve",
        "offset": [
          4619,
          4623
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 6,
        "value": "0x1"
      },
      "1682": {
        "fn": "ERC20.approve",
        "offset": [
          4619,
          4623
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "1683": {
        "fn": "ERC20.approve",
        "offset": [
          4433,
          4630
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "1684": {
        "op": "POP"
      },
      "1685": {
        "op": "POP"
      },
      "1686": {
        "op": "POP"
      },
      "1687": {
        "fn": "ERC20.approve",
        "jump": "o",
        "offset": [
          4433,
          4630
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1688": {
        "offset": [
          2678,
          2705
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1689": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x8"
      },
      "1691": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "1692": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1694": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1696": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1698": {
        "op": "SHL"
      },
      "1699": {
        "op": "SUB"
      },
      "1700": {
        "offset": [
          2678,
          2705
        ],
        "op": "AND",
        "path": "23"
      },
      "1701": {
        "fn": "ERC20.approve",
        "offset": [
          2678,
          2705
        ],
        "op": "DUP2",
        "path": "23"
      },
      "1702": {
        "fn": "ERC20.approve",
        "jump": "o",
        "offset": [
          2678,
          2705
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1703": {
        "offset": [
          2492,
          2522
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1704": {
        "fn": "ERC20.approve",
        "offset": [
          2492,
          2522
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "1737": {
        "fn": "ERC20.approve",
        "offset": [
          2492,
          2522
        ],
        "op": "DUP2",
        "path": "23"
      },
      "1738": {
        "fn": "ERC20.approve",
        "jump": "o",
        "offset": [
          2492,
          2522
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1739": {
        "offset": [
          2873,
          2896
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1740": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "1742": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "1743": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1745": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "1747": {
        "op": "SHL"
      },
      "1748": {
        "offset": [
          2873,
          2896
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "1749": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "DIV",
        "path": "23"
      },
      "1750": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "1752": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "1753": {
        "fn": "ERC20.approve",
        "offset": [
          2873,
          2896
        ],
        "op": "DUP2",
        "path": "23"
      },
      "1754": {
        "fn": "ERC20.approve",
        "jump": "o",
        "offset": [
          2873,
          2896
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1755": {
        "offset": [
          2449,
          2485
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1756": {
        "fn": "ERC20.approve",
        "offset": [
          2449,
          2485
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "1789": {
        "fn": "ERC20.approve",
        "offset": [
          2449,
          2485
        ],
        "op": "DUP2",
        "path": "23"
      },
      "1790": {
        "fn": "ERC20.approve",
        "jump": "o",
        "offset": [
          2449,
          2485
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1791": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1792": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3331,
          3343
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 7,
        "value": "0x2"
      },
      "1794": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3331,
          3343
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "1795": {
        "fn": "ERC20.totalSupply",
        "offset": [
          3244,
          3350
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1796": {
        "fn": "ERC20.totalSupply",
        "jump": "o",
        "offset": [
          3244,
          3350
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1797": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23510,
          23661
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1798": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23580,
          23597
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 8,
        "value": "0xA"
      },
      "1800": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23580,
          23597
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "1801": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1803": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1805": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1807": {
        "op": "SHL"
      },
      "1808": {
        "op": "SUB"
      },
      "1809": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23580,
          23597
        ],
        "op": "AND",
        "path": "23"
      },
      "1810": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23566,
          23576
        ],
        "op": "CALLER",
        "path": "23"
      },
      "1811": {
        "branch": 220,
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23566,
          23597
        ],
        "op": "EQ",
        "path": "23"
      },
      "1812": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x72F"
      },
      "1815": {
        "branch": 220,
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "1816": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "1818": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "1819": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1823": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1825": {
        "op": "SHL"
      },
      "1826": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "DUP2",
        "path": "23"
      },
      "1827": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "1828": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1830": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "ADD",
        "path": "23"
      },
      "1831": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "1834": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "1835": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3AA4"
      },
      "1838": {
        "fn": "SharpeAI.acceptGovernance",
        "jump": "i",
        "offset": [
          23558,
          23619
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1839": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23558,
          23619
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1840": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23630,
          23640
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 9,
        "value": "0x9"
      },
      "1842": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23630,
          23653
        ],
        "op": "DUP1",
        "path": "23"
      },
      "1843": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23630,
          23653
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "1844": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1846": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1848": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1850": {
        "op": "SHL"
      },
      "1851": {
        "op": "SUB"
      },
      "1852": {
        "op": "NOT"
      },
      "1853": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23630,
          23653
        ],
        "op": "AND",
        "path": "23"
      },
      "1854": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23643,
          23653
        ],
        "op": "CALLER",
        "path": "23"
      },
      "1855": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23630,
          23653
        ],
        "op": "OR",
        "path": "23"
      },
      "1856": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23630,
          23653
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "1857": {
        "fn": "SharpeAI.acceptGovernance",
        "offset": [
          23630,
          23653
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "1858": {
        "fn": "SharpeAI.acceptGovernance",
        "jump": "o",
        "offset": [
          23510,
          23661
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1859": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1860": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5319,
          5323
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "1862": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5335,
          5350
        ],
        "op": "DUP1",
        "path": "1"
      },
      "1863": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5353,
          5365
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x74E"
      },
      "1866": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5353,
          5363
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19DD"
      },
      "1869": {
        "fn": "ERC20.transferFrom",
        "jump": "i",
        "offset": [
          5353,
          5365
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1870": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5353,
          5365
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1871": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5335,
          5365
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1872": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5335,
          5365
        ],
        "op": "POP",
        "path": "1"
      },
      "1873": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5375,
          5413
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 10,
        "value": "0x75B"
      },
      "1876": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5391,
          5395
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1877": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5397,
          5404
        ],
        "op": "DUP3",
        "path": "1"
      },
      "1878": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5406,
          5412
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1879": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5375,
          5390
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A95"
      },
      "1882": {
        "fn": "ERC20.transferFrom",
        "jump": "i",
        "offset": [
          5375,
          5413
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1883": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5375,
          5413
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1884": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5423,
          5450
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 11,
        "value": "0x766"
      },
      "1887": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5433,
          5437
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1888": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5439,
          5441
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1889": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5443,
          5449
        ],
        "op": "DUP6",
        "path": "1"
      },
      "1890": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5423,
          5432
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1AD9"
      },
      "1893": {
        "fn": "ERC20.transferFrom",
        "jump": "i",
        "offset": [
          5423,
          5450
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1894": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5423,
          5450
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1895": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5467,
          5471
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 12,
        "value": "0x1"
      },
      "1897": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5460,
          5471
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "1898": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5460,
          5471
        ],
        "op": "POP",
        "path": "1"
      },
      "1899": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5460,
          5471
        ],
        "op": "POP",
        "path": "1"
      },
      "1900": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1901": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "1902": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "1903": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "POP",
        "path": "1"
      },
      "1904": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "POP",
        "path": "1"
      },
      "1905": {
        "fn": "ERC20.transferFrom",
        "offset": [
          5192,
          5478
        ],
        "op": "POP",
        "path": "1"
      },
      "1906": {
        "fn": "ERC20.transferFrom",
        "jump": "o",
        "offset": [
          5192,
          5478
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1907": {
        "offset": [
          2642,
          2671
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1908": {
        "fn": "ERC20.transferFrom",
        "offset": [
          2642,
          2671
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x7"
      },
      "1910": {
        "fn": "ERC20.transferFrom",
        "offset": [
          2642,
          2671
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "1911": {
        "fn": "ERC20.transferFrom",
        "offset": [
          2642,
          2671
        ],
        "op": "DUP2",
        "path": "23"
      },
      "1912": {
        "fn": "ERC20.transferFrom",
        "jump": "o",
        "offset": [
          2642,
          2671
        ],
        "op": "JUMP",
        "path": "23"
      },
      "1913": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "1914": {
        "fn": "ERC20.decimals",
        "offset": [
          3175,
          3177
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 13,
        "value": "0x12"
      },
      "1916": {
        "fn": "ERC20.decimals",
        "offset": [
          3093,
          3184
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "1917": {
        "fn": "ERC20.decimals",
        "jump": "o",
        "offset": [
          3093,
          3184
        ],
        "op": "JUMP",
        "path": "1"
      },
      "1918": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1919": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4888,
          4902
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "1921": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4917,
          4932
        ],
        "op": "DUP1",
        "path": "23"
      },
      "1922": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4947,
          4962
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "1924": {
        "offset": [
          1744,
          1745
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1926": {
        "offset": [
          2325,
          2332
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x5"
      },
      "1928": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2325,
          2332
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "1929": {
        "offset": [
          2325,
          2344
        ],
        "op": "EQ",
        "path": "0"
      },
      "1930": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2325,
          2344
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "1931": {
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x7A6"
      },
      "1934": {
        "offset": [
          2317,
          2380
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "1935": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "1937": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2317,
          2380
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "1938": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1942": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1944": {
        "op": "SHL"
      },
      "1945": {
        "offset": [
          2317,
          2380
        ],
        "op": "DUP2",
        "path": "0"
      },
      "1946": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2317,
          2380
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "1947": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "1949": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2317,
          2380
        ],
        "op": "ADD",
        "path": "0"
      },
      "1950": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x542"
      },
      "1953": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2317,
          2380
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "1954": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x3DAC"
      },
      "1957": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          2317,
          2380
        ],
        "op": "JUMP",
        "path": "0"
      },
      "1958": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2317,
          2380
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "1959": {
        "offset": [
          1744,
          1745
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "1961": {
        "offset": [
          2455,
          2462
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x5"
      },
      "1963": {
        "offset": [
          2455,
          2473
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "1964": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4998,
          5016
        ],
        "op": "DUP8",
        "path": "23",
        "statement": 14
      },
      "1965": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4998,
          5016
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "1966": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4998,
          5016
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "1967": {
        "branch": 221,
        "fn": "SharpeAI.deposit",
        "offset": [
          4998,
          5016
        ],
        "op": "DUP1",
        "path": "23"
      },
      "1968": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4998,
          5038
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x7B9"
      },
      "1971": {
        "branch": 221,
        "fn": "SharpeAI.deposit",
        "offset": [
          4998,
          5038
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "1972": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4998,
          5038
        ],
        "op": "POP",
        "path": "23"
      },
      "1973": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5037,
          5038
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "1975": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5020,
          5034
        ],
        "op": "DUP8",
        "path": "23"
      },
      "1976": {
        "branch": 222,
        "fn": "SharpeAI.deposit",
        "offset": [
          5020,
          5038
        ],
        "op": "GT",
        "path": "23"
      },
      "1977": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4998,
          5038
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "1978": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x7D5"
      },
      "1981": {
        "branch": 222,
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "1982": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "1984": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "1985": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1989": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1991": {
        "op": "SHL"
      },
      "1992": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "DUP2",
        "path": "23"
      },
      "1993": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "1994": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "1996": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "ADD",
        "path": "23"
      },
      "1997": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "2000": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2001": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3A6F"
      },
      "2004": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          4990,
          5075
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2005": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4990,
          5075
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2006": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2008": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2010": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2012": {
        "op": "SHL"
      },
      "2013": {
        "op": "SUB"
      },
      "2014": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5094,
          5110
        ],
        "op": "DUP5",
        "path": "23",
        "statement": 15
      },
      "2015": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5094,
          5110
        ],
        "op": "AND",
        "path": "23"
      },
      "2016": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5094,
          5110
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2017": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5094,
          5110
        ],
        "op": "DUP1",
        "path": "23"
      },
      "2018": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5094,
          5110
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2019": {
        "branch": 223,
        "fn": "SharpeAI.deposit",
        "offset": [
          5094,
          5110
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2020": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5094,
          5133
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x7F6"
      },
      "2023": {
        "branch": 223,
        "fn": "SharpeAI.deposit",
        "offset": [
          5094,
          5133
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2024": {
        "op": "POP"
      },
      "2025": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2027": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2029": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2031": {
        "op": "SHL"
      },
      "2032": {
        "op": "SUB"
      },
      "2033": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5114,
          5133
        ],
        "op": "DUP5",
        "path": "23"
      },
      "2034": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5114,
          5133
        ],
        "op": "AND",
        "path": "23"
      },
      "2035": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5128,
          5132
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "2036": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5114,
          5133
        ],
        "op": "EQ",
        "path": "23"
      },
      "2037": {
        "branch": 224,
        "fn": "SharpeAI.deposit",
        "offset": [
          5114,
          5133
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2038": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5094,
          5133
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2039": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x812"
      },
      "2042": {
        "branch": 224,
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2043": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2045": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2046": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2050": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2052": {
        "op": "SHL"
      },
      "2053": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2054": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "2055": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "2057": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "ADD",
        "path": "23"
      },
      "2058": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "2061": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2062": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x388F"
      },
      "2065": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5086,
          5140
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2066": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5086,
          5140
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2067": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5229,
          5238
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 16,
        "value": "0xA"
      },
      "2069": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5229,
          5238
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "2070": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5223,
          5250
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x834"
      },
      "2073": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5223,
          5250
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2074": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2076": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2078": {
        "op": "SHL"
      },
      "2079": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5229,
          5238
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2080": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5229,
          5238
        ],
        "op": "DIV",
        "path": "23"
      },
      "2081": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5229,
          5238
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "2083": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5229,
          5238
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2084": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5229,
          5238
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2085": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5229,
          5238
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "2086": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5229,
          5238
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "2087": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2089": {
        "op": "PUSH1",
        "value": "0xB8"
      },
      "2091": {
        "op": "SHL"
      },
      "2092": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5240,
          5249
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2093": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5240,
          5249
        ],
        "op": "DIV",
        "path": "23"
      },
      "2094": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5240,
          5249
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2095": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5240,
          5249
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "2096": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5223,
          5228
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1BFD"
      },
      "2099": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5223,
          5250
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2100": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5223,
          5250
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2101": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5267,
          5277
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 17,
        "value": "0xA"
      },
      "2103": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5267,
          5277
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "2104": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5261,
          5290
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x856"
      },
      "2107": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5261,
          5290
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2108": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2110": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "2112": {
        "op": "SHL"
      },
      "2113": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5267,
          5277
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2114": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5267,
          5277
        ],
        "op": "DIV",
        "path": "23"
      },
      "2115": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5267,
          5277
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "2117": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5267,
          5277
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2118": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5267,
          5277
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2119": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5267,
          5277
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "2120": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5267,
          5277
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "2121": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2123": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "2125": {
        "op": "SHL"
      },
      "2126": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5279,
          5289
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2127": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5279,
          5289
        ],
        "op": "DIV",
        "path": "23"
      },
      "2128": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5279,
          5289
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2129": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5279,
          5289
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "2130": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5261,
          5266
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1BFD"
      },
      "2133": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5261,
          5290
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2134": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5261,
          5290
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2135": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5395,
          5448
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 18,
        "value": "0x860"
      },
      "2138": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5417,
          5431
        ],
        "op": "DUP9",
        "path": "23"
      },
      "2139": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5433,
          5447
        ],
        "op": "DUP9",
        "path": "23"
      },
      "2140": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5395,
          5416
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1CC3"
      },
      "2143": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5395,
          5448
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2144": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5395,
          5448
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2145": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5366,
          5448
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "2146": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5366,
          5448
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "2147": {
        "op": "POP"
      },
      "2148": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5366,
          5448
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "2149": {
        "op": "POP"
      },
      "2150": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5366,
          5448
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2151": {
        "op": "POP"
      },
      "2152": {
        "branch": 225,
        "fn": "SharpeAI.deposit",
        "offset": [
          5467,
          5477
        ],
        "op": "DUP3",
        "path": "23",
        "statement": 19
      },
      "2153": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x884"
      },
      "2156": {
        "branch": 225,
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2157": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2159": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2160": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2164": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2166": {
        "op": "SHL"
      },
      "2167": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2168": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "2169": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "2171": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "ADD",
        "path": "23"
      },
      "2172": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "2175": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2176": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B5D"
      },
      "2179": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5459,
          5488
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2180": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5459,
          5488
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2181": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5518,
          5528
        ],
        "op": "DUP6",
        "path": "23",
        "statement": 20
      },
      "2182": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5507,
          5514
        ],
        "op": "DUP3",
        "path": "23"
      },
      "2183": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5507,
          5528
        ],
        "op": "LT",
        "path": "23"
      },
      "2184": {
        "branch": 226,
        "fn": "SharpeAI.deposit",
        "offset": [
          5507,
          5528
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2185": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x8A4"
      },
      "2188": {
        "branch": 226,
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2189": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2191": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2192": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2196": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2198": {
        "op": "SHL"
      },
      "2199": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2200": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "2201": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "2203": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "ADD",
        "path": "23"
      },
      "2204": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "2207": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2208": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3829"
      },
      "2211": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5499,
          5543
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2212": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5499,
          5543
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2213": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5573,
          5583
        ],
        "op": "DUP5",
        "path": "23",
        "statement": 21
      },
      "2214": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5562,
          5569
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2215": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5562,
          5583
        ],
        "op": "LT",
        "path": "23"
      },
      "2216": {
        "branch": 227,
        "fn": "SharpeAI.deposit",
        "offset": [
          5562,
          5583
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2217": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x8C4"
      },
      "2220": {
        "branch": 227,
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2221": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2223": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2224": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2228": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2230": {
        "op": "SHL"
      },
      "2231": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2232": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "2233": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "2235": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "ADD",
        "path": "23"
      },
      "2236": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "2239": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2240": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3C22"
      },
      "2243": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5554,
          5598
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2244": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5554,
          5598
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2245": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5654,
          5665
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2246": {
        "branch": 228,
        "fn": "SharpeAI.deposit",
        "offset": [
          5654,
          5665
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2247": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5650,
          5726
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x8FF"
      },
      "2250": {
        "branch": 228,
        "fn": "SharpeAI.deposit",
        "offset": [
          5650,
          5726
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2251": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5667,
          5726
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 22,
        "value": "0x8FF"
      },
      "2254": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2256": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2258": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2260": {
        "op": "SHL"
      },
      "2261": {
        "op": "SUB"
      },
      "2262": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5667,
          5673
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "2295": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5667,
          5690
        ],
        "op": "AND",
        "path": "23"
      },
      "2296": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5691,
          5701
        ],
        "op": "CALLER",
        "path": "23"
      },
      "2297": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5711,
          5715
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "2298": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5718,
          5725
        ],
        "op": "DUP6",
        "path": "23"
      },
      "2299": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5667,
          5690
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1DE6"
      },
      "2302": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5667,
          5726
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2303": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5667,
          5726
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2304": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5741,
          5752
        ],
        "op": "DUP1",
        "path": "23"
      },
      "2305": {
        "branch": 229,
        "fn": "SharpeAI.deposit",
        "offset": [
          5741,
          5752
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2306": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5737,
          5813
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x93A"
      },
      "2309": {
        "branch": 229,
        "fn": "SharpeAI.deposit",
        "offset": [
          5737,
          5813
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2310": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5754,
          5813
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 23,
        "value": "0x93A"
      },
      "2313": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2315": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2317": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2319": {
        "op": "SHL"
      },
      "2320": {
        "op": "SUB"
      },
      "2321": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5754,
          5760
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "2354": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5754,
          5777
        ],
        "op": "AND",
        "path": "23"
      },
      "2355": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5778,
          5788
        ],
        "op": "CALLER",
        "path": "23"
      },
      "2356": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5798,
          5802
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "2357": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5805,
          5812
        ],
        "op": "DUP5",
        "path": "23"
      },
      "2358": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5754,
          5777
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1DE6"
      },
      "2361": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5754,
          5813
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2362": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5754,
          5813
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2363": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5863,
          5880
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 24,
        "value": "0x944"
      },
      "2366": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5869,
          5871
        ],
        "op": "DUP5",
        "path": "23"
      },
      "2367": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5873,
          5879
        ],
        "op": "DUP5",
        "path": "23"
      },
      "2368": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5863,
          5868
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1E07"
      },
      "2371": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5863,
          5880
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2372": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5863,
          5880
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2373": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5916,
          5918
        ],
        "op": "DUP4",
        "path": "23",
        "statement": 25
      },
      "2374": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2376": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2378": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2380": {
        "op": "SHL"
      },
      "2381": {
        "op": "SUB"
      },
      "2382": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "AND",
        "path": "23"
      },
      "2383": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5904,
          5914
        ],
        "op": "CALLER",
        "path": "23"
      },
      "2384": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2386": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2388": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2390": {
        "op": "SHL"
      },
      "2391": {
        "op": "SUB"
      },
      "2392": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "AND",
        "path": "23"
      },
      "2393": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6"
      },
      "2426": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5920,
          5926
        ],
        "op": "DUP6",
        "path": "23"
      },
      "2427": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5928,
          5935
        ],
        "op": "DUP6",
        "path": "23"
      },
      "2428": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5937,
          5944
        ],
        "op": "DUP6",
        "path": "23"
      },
      "2429": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2431": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2432": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x98B"
      },
      "2435": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "2436": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "2437": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "2438": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2439": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3E6D"
      },
      "2442": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5896,
          5945
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2443": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2444": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2446": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2447": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "DUP1",
        "path": "23"
      },
      "2448": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "2449": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "SUB",
        "path": "23"
      },
      "2450": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2451": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5896,
          5945
        ],
        "op": "LOG3",
        "path": "23"
      },
      "2452": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5981,
          5995
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 26,
        "value": "0x7"
      },
      "2454": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5981,
          5995
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "2455": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5964,
          5977
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x99E"
      },
      "2458": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5964,
          5975
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x6FF"
      },
      "2461": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5964,
          5977
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2462": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5964,
          5977
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2463": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5964,
          5995
        ],
        "op": "GT",
        "path": "23"
      },
      "2464": {
        "branch": 230,
        "fn": "SharpeAI.deposit",
        "offset": [
          5964,
          5995
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2465": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x9BC"
      },
      "2468": {
        "branch": 230,
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2469": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2471": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2472": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2476": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2478": {
        "op": "SHL"
      },
      "2479": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2480": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "2481": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "2483": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "ADD",
        "path": "23"
      },
      "2484": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "2487": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2488": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3D3A"
      },
      "2491": {
        "fn": "SharpeAI.deposit",
        "jump": "i",
        "offset": [
          5956,
          6014
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2492": {
        "fn": "SharpeAI.deposit",
        "offset": [
          5956,
          6014
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2493": {
        "offset": [
          1701,
          1702
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "2495": {
        "offset": [
          2628,
          2635
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x5"
      },
      "2497": {
        "offset": [
          2628,
          2650
        ],
        "op": "DUP2",
        "path": "0"
      },
      "2498": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2628,
          2650
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "2499": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2628,
          2650
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "2500": {
        "fn": "SharpeAI.deposit",
        "offset": [
          2628,
          2650
        ],
        "op": "POP",
        "path": "0"
      },
      "2501": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "SWAP6",
        "path": "23"
      },
      "2502": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "POP",
        "path": "23"
      },
      "2503": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "SWAP6",
        "path": "23"
      },
      "2504": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "POP",
        "path": "23"
      },
      "2505": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "SWAP6",
        "path": "23"
      },
      "2506": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "2507": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "POP",
        "path": "23"
      },
      "2508": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "POP",
        "path": "23"
      },
      "2509": {
        "fn": "SharpeAI.deposit",
        "offset": [
          4629,
          6022
        ],
        "op": "POP",
        "path": "23"
      },
      "2510": {
        "fn": "SharpeAI.deposit",
        "jump": "o",
        "offset": [
          4629,
          6022
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2511": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5873,
          6109
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2512": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5961,
          5965
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2514": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5977,
          5990
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2515": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5993,
          6005
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x9DA"
      },
      "2518": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5993,
          6003
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19DD"
      },
      "2521": {
        "fn": "ERC20.increaseAllowance",
        "jump": "i",
        "offset": [
          5993,
          6005
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2522": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5993,
          6005
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2523": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2525": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2527": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2529": {
        "op": "SHL"
      },
      "2530": {
        "op": "SUB"
      },
      "2531": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "DUP1",
        "path": "1",
        "statement": 27
      },
      "2532": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2533": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "AND",
        "path": "1"
      },
      "2534": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2536": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2537": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2538": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2539": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6051
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "2541": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2543": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2544": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2545": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2546": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2548": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "DUP1",
        "path": "1"
      },
      "2549": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2550": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6058
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "2551": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6067
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "2552": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6067
        ],
        "op": "DUP10",
        "path": "1"
      },
      "2553": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6067
        ],
        "op": "AND",
        "path": "1"
      },
      "2554": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6067
        ],
        "op": "DUP4",
        "path": "1"
      },
      "2555": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6067
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2556": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6067
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "2557": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6067
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2558": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6067
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2559": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6067
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "2560": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6067
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "2561": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5977,
          6005
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2562": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5977,
          6005
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2563": {
        "op": "POP"
      },
      "2564": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6015,
          6081
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x68E"
      },
      "2567": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6015,
          6081
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2568": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5977,
          6005
        ],
        "op": "DUP3",
        "path": "1"
      },
      "2569": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          5977,
          6005
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2570": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6031,
          6038
        ],
        "op": "DUP7",
        "path": "1"
      },
      "2571": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6031,
          6038
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2572": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6080
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0xA16"
      },
      "2575": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6080
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2576": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6070,
          6080
        ],
        "op": "DUP8",
        "path": "1"
      },
      "2577": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6070,
          6080
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2578": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6080
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3EAC"
      },
      "2581": {
        "fn": "ERC20.increaseAllowance",
        "jump": "i",
        "offset": [
          6040,
          6080
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2582": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6040,
          6080
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2583": {
        "fn": "ERC20.increaseAllowance",
        "offset": [
          6015,
          6023
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19E1"
      },
      "2586": {
        "fn": "ERC20.increaseAllowance",
        "jump": "i",
        "offset": [
          6015,
          6081
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2587": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22558,
          22685
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2588": {
        "offset": [
          23726,
          23736
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x9"
      },
      "2590": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          23726,
          23736
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "2591": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2593": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2595": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2597": {
        "op": "SHL"
      },
      "2598": {
        "op": "SUB"
      },
      "2599": {
        "offset": [
          23726,
          23736
        ],
        "op": "AND",
        "path": "23"
      },
      "2600": {
        "offset": [
          23712,
          23722
        ],
        "op": "CALLER",
        "path": "23"
      },
      "2601": {
        "offset": [
          23712,
          23736
        ],
        "op": "EQ",
        "path": "23"
      },
      "2602": {
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xA45"
      },
      "2605": {
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2606": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2608": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          23704,
          23751
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2609": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2613": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2615": {
        "op": "SHL"
      },
      "2616": {
        "offset": [
          23704,
          23751
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2617": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          23704,
          23751
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "2618": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "2620": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          23704,
          23751
        ],
        "op": "ADD",
        "path": "23"
      },
      "2621": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "2624": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          23704,
          23751
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2625": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B39"
      },
      "2628": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "jump": "i",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2629": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2630": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22645,
          22659
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 28,
        "value": "0x7"
      },
      "2632": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "offset": [
          22645,
          22677
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "2633": {
        "fn": "SharpeAI.setMaxTotalSupply",
        "jump": "o",
        "offset": [
          22558,
          22685
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2634": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18064,
          18200
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2635": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18108,
          18115
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "2637": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18192
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 29,
        "value": "0xAF4"
      },
      "2640": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18171,
          18191
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xC"
      },
      "2642": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18171,
          18191
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "2643": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18141
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "2676": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2678": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2680": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2682": {
        "op": "SHL"
      },
      "2683": {
        "op": "SUB"
      },
      "2684": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18151
        ],
        "op": "AND",
        "path": "23"
      },
      "2685": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18151
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x70A08231"
      },
      "2690": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18160,
          18164
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "2691": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2693": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2694": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP3",
        "path": "23"
      },
      "2695": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xFFFFFFFF"
      },
      "2700": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "AND",
        "path": "23"
      },
      "2701": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "2703": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "SHL",
        "path": "23"
      },
      "2704": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2705": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "2706": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "2708": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "ADD",
        "path": "23"
      },
      "2709": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xA9E"
      },
      "2712": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "2713": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2714": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3641"
      },
      "2717": {
        "fn": "SharpeAI.getBalance1",
        "jump": "i",
        "offset": [
          18135,
          18166
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2718": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2719": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x20"
      },
      "2721": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2723": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2724": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP1",
        "path": "23"
      },
      "2725": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP4",
        "path": "23"
      },
      "2726": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "SUB",
        "path": "23"
      },
      "2727": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2728": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP7",
        "path": "23"
      },
      "2729": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP1",
        "path": "23"
      },
      "2730": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "2731": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2732": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP1",
        "path": "23"
      },
      "2733": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2734": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xAB6"
      },
      "2737": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2738": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "2740": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP1",
        "path": "23"
      },
      "2741": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "REVERT",
        "path": "23"
      },
      "2742": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2743": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "POP",
        "path": "23"
      },
      "2744": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "GAS",
        "path": "23"
      },
      "2745": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "STATICCALL",
        "path": "23"
      },
      "2746": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2747": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP1",
        "path": "23"
      },
      "2748": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "2749": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xACA"
      },
      "2752": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2753": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "2754": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "2756": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP1",
        "path": "23"
      },
      "2757": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "2758": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "2759": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "2761": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "REVERT",
        "path": "23"
      },
      "2762": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2763": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "POP",
        "path": "23"
      },
      "2764": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "POP",
        "path": "23"
      },
      "2765": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "POP",
        "path": "23"
      },
      "2766": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "POP",
        "path": "23"
      },
      "2767": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2769": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2770": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "2771": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "2773": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "NOT",
        "path": "23"
      },
      "2774": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "2776": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP3",
        "path": "23"
      },
      "2777": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "ADD",
        "path": "23"
      },
      "2778": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "AND",
        "path": "23"
      },
      "2779": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP3",
        "path": "23"
      },
      "2780": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "ADD",
        "path": "23"
      },
      "2781": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP1",
        "path": "23"
      },
      "2782": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2784": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "2785": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "POP",
        "path": "23"
      },
      "2786": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2787": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "ADD",
        "path": "23"
      },
      "2788": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2789": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xAEE"
      },
      "2792": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "2793": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2794": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x352D"
      },
      "2797": {
        "fn": "SharpeAI.getBalance1",
        "jump": "i",
        "offset": [
          18135,
          18166
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2798": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18166
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2799": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18170
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2800": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18170
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x197B"
      },
      "2803": {
        "fn": "SharpeAI.getBalance1",
        "jump": "i",
        "offset": [
          18135,
          18192
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2804": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18135,
          18192
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2805": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18128,
          18192
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2806": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18128,
          18192
        ],
        "op": "POP",
        "path": "23"
      },
      "2807": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          18064,
          18200
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2808": {
        "fn": "SharpeAI.getBalance1",
        "jump": "o",
        "offset": [
          18064,
          18200
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2809": {
        "offset": [
          2843,
          2866
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2810": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2843,
          2866
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "2812": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2843,
          2866
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "2813": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2815": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "2817": {
        "op": "SHL"
      },
      "2818": {
        "offset": [
          2843,
          2866
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2819": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2843,
          2866
        ],
        "op": "DIV",
        "path": "23"
      },
      "2820": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2843,
          2866
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "2822": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2843,
          2866
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "2823": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2843,
          2866
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2824": {
        "fn": "SharpeAI.getBalance1",
        "jump": "o",
        "offset": [
          2843,
          2866
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2825": {
        "offset": [
          2712,
          2737
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2826": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2712,
          2737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x9"
      },
      "2828": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2712,
          2737
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "2829": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2831": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2833": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2835": {
        "op": "SHL"
      },
      "2836": {
        "op": "SUB"
      },
      "2837": {
        "offset": [
          2712,
          2737
        ],
        "op": "AND",
        "path": "23"
      },
      "2838": {
        "fn": "SharpeAI.getBalance1",
        "offset": [
          2712,
          2737
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2839": {
        "fn": "SharpeAI.getBalance1",
        "jump": "o",
        "offset": [
          2712,
          2737
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2840": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17833,
          17969
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2841": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17877,
          17884
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "2843": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17961
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 30,
        "value": "0xAF4"
      },
      "2846": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17940,
          17960
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xB"
      },
      "2848": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17940,
          17960
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "2849": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17910
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "2882": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2884": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2886": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2888": {
        "op": "SHL"
      },
      "2889": {
        "op": "SUB"
      },
      "2890": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17920
        ],
        "op": "AND",
        "path": "23"
      },
      "2891": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17920
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x70A08231"
      },
      "2896": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17929,
          17933
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "2897": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2899": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2900": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "DUP3",
        "path": "23"
      },
      "2901": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xFFFFFFFF"
      },
      "2906": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "AND",
        "path": "23"
      },
      "2907": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "2909": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "SHL",
        "path": "23"
      },
      "2910": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2911": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "2912": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "2914": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "ADD",
        "path": "23"
      },
      "2915": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xA9E"
      },
      "2918": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "2919": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2920": {
        "fn": "SharpeAI.getBalance0",
        "offset": [
          17904,
          17935
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3641"
      },
      "2923": {
        "fn": "SharpeAI.getBalance0",
        "jump": "i",
        "offset": [
          17904,
          17935
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2924": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2925": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2927": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2929": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2931": {
        "op": "SHL"
      },
      "2932": {
        "op": "SUB"
      },
      "2933": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "DUP2",
        "path": "1",
        "statement": 31
      },
      "2934": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "AND",
        "path": "1"
      },
      "2935": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3482,
          3489
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "2937": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2938": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2939": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2940": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "2942": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "DUP2",
        "path": "1"
      },
      "2943": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2944": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "2945": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "2947": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2948": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "2949": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3508,
          3526
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "2950": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "2951": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "2952": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "2953": {
        "fn": "ERC20.balanceOf",
        "offset": [
          3408,
          3533
        ],
        "op": "POP",
        "path": "1"
      },
      "2954": {
        "fn": "ERC20.balanceOf",
        "jump": "o",
        "offset": [
          3408,
          3533
        ],
        "op": "JUMP",
        "path": "1"
      },
      "2955": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22100,
          22268
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2956": {
        "offset": [
          23726,
          23736
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x9"
      },
      "2958": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          23726,
          23736
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "2959": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2961": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2963": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2965": {
        "op": "SHL"
      },
      "2966": {
        "op": "SUB"
      },
      "2967": {
        "offset": [
          23726,
          23736
        ],
        "op": "AND",
        "path": "23"
      },
      "2968": {
        "offset": [
          23712,
          23722
        ],
        "op": "CALLER",
        "path": "23"
      },
      "2969": {
        "offset": [
          23712,
          23736
        ],
        "op": "EQ",
        "path": "23"
      },
      "2970": {
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xBB5"
      },
      "2973": {
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "2974": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "2976": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          23704,
          23751
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "2977": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2981": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2983": {
        "op": "SHL"
      },
      "2984": {
        "offset": [
          23704,
          23751
        ],
        "op": "DUP2",
        "path": "23"
      },
      "2985": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          23704,
          23751
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "2986": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "2988": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          23704,
          23751
        ],
        "op": "ADD",
        "path": "23"
      },
      "2989": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "2992": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          23704,
          23751
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "2993": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B39"
      },
      "2996": {
        "fn": "SharpeAI.setProtocolFee",
        "jump": "i",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMP",
        "path": "23"
      },
      "2997": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "2998": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22204,
          22207
        ],
        "op": "PUSH3",
        "path": "23",
        "statement": 32,
        "value": "0xF4240"
      },
      "3002": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22189,
          22201
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3003": {
        "branch": 231,
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22189,
          22207
        ],
        "op": "LT",
        "path": "23"
      },
      "3004": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xBD7"
      },
      "3007": {
        "branch": 231,
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "3008": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3010": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3011": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "3015": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "3017": {
        "op": "SHL"
      },
      "3018": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3019": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "3020": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "3022": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "ADD",
        "path": "23"
      },
      "3023": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "3026": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3027": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3ACF"
      },
      "3030": {
        "fn": "SharpeAI.setProtocolFee",
        "jump": "i",
        "offset": [
          22181,
          22223
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3031": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22181,
          22223
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3032": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22234,
          22245
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 33,
        "value": "0x6"
      },
      "3034": {
        "fn": "SharpeAI.setProtocolFee",
        "offset": [
          22234,
          22260
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "3035": {
        "fn": "SharpeAI.setProtocolFee",
        "jump": "o",
        "offset": [
          22100,
          22268
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3036": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11199,
          13740
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3037": {
        "offset": [
          1744,
          1745
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "3039": {
        "offset": [
          2325,
          2332
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x5"
      },
      "3041": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2325,
          2332
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "3042": {
        "offset": [
          2325,
          2344
        ],
        "op": "EQ",
        "path": "0"
      },
      "3043": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2325,
          2344
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "3044": {
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0xBFF"
      },
      "3047": {
        "offset": [
          2317,
          2380
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "3048": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "3050": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2317,
          2380
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "3051": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "3055": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "3057": {
        "op": "SHL"
      },
      "3058": {
        "offset": [
          2317,
          2380
        ],
        "op": "DUP2",
        "path": "0"
      },
      "3059": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2317,
          2380
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "3060": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "3062": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2317,
          2380
        ],
        "op": "ADD",
        "path": "0"
      },
      "3063": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x542"
      },
      "3066": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2317,
          2380
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "3067": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x3DAC"
      },
      "3070": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          2317,
          2380
        ],
        "op": "JUMP",
        "path": "0"
      },
      "3071": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2317,
          2380
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "3072": {
        "offset": [
          1744,
          1745
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "3074": {
        "offset": [
          2455,
          2462
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x5"
      },
      "3076": {
        "offset": [
          2455,
          2473
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "3077": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11501,
          11513
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 34,
        "value": "0x8"
      },
      "3079": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11501,
          11513
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "3080": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3082": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3084": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3086": {
        "op": "SHL"
      },
      "3087": {
        "op": "SUB"
      },
      "3088": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11501,
          11513
        ],
        "op": "AND",
        "path": "23"
      },
      "3089": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11487,
          11497
        ],
        "op": "CALLER",
        "path": "23"
      },
      "3090": {
        "branch": 232,
        "fn": "SharpeAI.rebalance",
        "offset": [
          11487,
          11513
        ],
        "op": "EQ",
        "path": "23"
      },
      "3091": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xC2E"
      },
      "3094": {
        "branch": 232,
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "3095": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3097": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3098": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "3102": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "3104": {
        "op": "SHL"
      },
      "3105": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3106": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "3107": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "3109": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "ADD",
        "path": "23"
      },
      "3110": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "3113": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3114": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B13"
      },
      "3117": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          11479,
          11530
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3118": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11479,
          11530
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3119": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11541,
          11576
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 35,
        "value": "0xC38"
      },
      "3122": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11553,
          11563
        ],
        "op": "DUP7",
        "path": "23"
      },
      "3123": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11565,
          11575
        ],
        "op": "DUP7",
        "path": "23"
      },
      "3124": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11541,
          11552
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1ED3"
      },
      "3127": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          11541,
          11576
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3128": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11541,
          11576
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3129": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11587,
          11620
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 36,
        "value": "0xC42"
      },
      "3132": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11599,
          11608
        ],
        "op": "DUP5",
        "path": "23"
      },
      "3133": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11610,
          11619
        ],
        "op": "DUP5",
        "path": "23"
      },
      "3134": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11587,
          11598
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1ED3"
      },
      "3137": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          11587,
          11620
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3138": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11587,
          11620
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3139": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11631,
          11664
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 37,
        "value": "0xC4C"
      },
      "3142": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11643,
          11652
        ],
        "op": "DUP3",
        "path": "23"
      },
      "3143": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11654,
          11663
        ],
        "op": "DUP3",
        "path": "23"
      },
      "3144": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11631,
          11642
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1ED3"
      },
      "3147": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          11631,
          11664
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3148": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11631,
          11664
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3149": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11680,
          11690
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3151": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11708
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "3184": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3186": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3188": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3190": {
        "op": "SHL"
      },
      "3191": {
        "op": "SUB"
      },
      "3192": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11714
        ],
        "op": "AND",
        "path": "23"
      },
      "3193": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11714
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x3850C7BD"
      },
      "3198": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3200": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3201": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3202": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xFFFFFFFF"
      },
      "3207": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "AND",
        "path": "23"
      },
      "3208": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "3210": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "SHL",
        "path": "23"
      },
      "3211": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3212": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "3213": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "3215": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "ADD",
        "path": "23"
      },
      "3216": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "3218": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3220": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3221": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3222": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP4",
        "path": "23"
      },
      "3223": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "SUB",
        "path": "23"
      },
      "3224": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3225": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP7",
        "path": "23"
      },
      "3226": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3227": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "3228": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "3229": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3230": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "3231": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xCA7"
      },
      "3234": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "3235": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3237": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3238": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "REVERT",
        "path": "23"
      },
      "3239": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3240": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3241": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "GAS",
        "path": "23"
      },
      "3242": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "STATICCALL",
        "path": "23"
      },
      "3243": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "3244": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3245": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "3246": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xCBB"
      },
      "3249": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "3250": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "3251": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3253": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3254": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "3255": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "3256": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3258": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "REVERT",
        "path": "23"
      },
      "3259": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3260": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3261": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3262": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3263": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3264": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3266": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3267": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "3268": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "3270": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "NOT",
        "path": "23"
      },
      "3271": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "3273": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP3",
        "path": "23"
      },
      "3274": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "ADD",
        "path": "23"
      },
      "3275": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "AND",
        "path": "23"
      },
      "3276": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP3",
        "path": "23"
      },
      "3277": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "ADD",
        "path": "23"
      },
      "3278": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3279": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3281": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "3282": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3283": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3284": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "ADD",
        "path": "23"
      },
      "3285": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3286": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xCDF"
      },
      "3289": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3290": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3291": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3484"
      },
      "3294": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          11704,
          11716
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3295": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11704,
          11716
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3296": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11677,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3297": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11677,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3298": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11677,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3299": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11677,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3300": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11677,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3301": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11677,
          11716
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3302": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11677,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3303": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11677,
          11716
        ],
        "op": "POP",
        "path": "23"
      },
      "3304": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11748,
          11752
        ],
        "op": "DUP1",
        "path": "23",
        "statement": 38
      },
      "3305": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11735,
          11752
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "3307": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11735,
          11752
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3308": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11735,
          11744
        ],
        "op": "DUP5",
        "path": "23"
      },
      "3309": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11735,
          11752
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "3311": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11735,
          11752
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3312": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11735,
          11752
        ],
        "op": "SGT",
        "path": "23"
      },
      "3313": {
        "branch": 233,
        "fn": "SharpeAI.rebalance",
        "offset": [
          11735,
          11752
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "3314": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xD0D"
      },
      "3317": {
        "branch": 233,
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "3318": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3320": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3321": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "3325": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "3327": {
        "op": "SHL"
      },
      "3328": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3329": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "3330": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "3332": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "ADD",
        "path": "23"
      },
      "3333": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "3336": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3337": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3A07"
      },
      "3340": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          11727,
          11765
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3341": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11727,
          11765
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3342": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11796,
          11800
        ],
        "op": "DUP1",
        "path": "23",
        "statement": 39
      },
      "3343": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11784,
          11800
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "3345": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11784,
          11800
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3346": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11784,
          11793
        ],
        "op": "DUP4",
        "path": "23"
      },
      "3347": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11784,
          11800
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "3349": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11784,
          11800
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3350": {
        "branch": 234,
        "fn": "SharpeAI.rebalance",
        "offset": [
          11784,
          11800
        ],
        "op": "SGT",
        "path": "23"
      },
      "3351": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xD32"
      },
      "3354": {
        "branch": 234,
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "3355": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3357": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3358": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "3362": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "3364": {
        "op": "SHL"
      },
      "3365": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3366": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "3367": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "3369": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "ADD",
        "path": "23"
      },
      "3370": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "3373": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3374": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3C46"
      },
      "3377": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          11776,
          11813
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3378": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11776,
          11813
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3379": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11994,
          12003
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "3381": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11994,
          12003
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "3382": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11951,
          11972
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3384": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11951,
          11972
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3385": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11984,
          12015
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xD57"
      },
      "3388": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11984,
          12015
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3389": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3391": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3393": {
        "op": "SHL"
      },
      "3394": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11994,
          12003
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3395": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11994,
          12003
        ],
        "op": "DIV",
        "path": "23"
      },
      "3396": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11994,
          12003
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "3398": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11994,
          12003
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3399": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11994,
          12003
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3400": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11994,
          12003
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3401": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11994,
          12003
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3402": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3404": {
        "op": "PUSH1",
        "value": "0xB8"
      },
      "3406": {
        "op": "SHL"
      },
      "3407": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12005,
          12014
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3408": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12005,
          12014
        ],
        "op": "DIV",
        "path": "23"
      },
      "3409": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12005,
          12014
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3410": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12005,
          12014
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3411": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11984,
          11993
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1FC8"
      },
      "3414": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          11984,
          12015
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3415": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11984,
          12015
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3416": {
        "op": "POP"
      },
      "3417": {
        "op": "POP"
      },
      "3418": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12075,
          12085
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "3420": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12075,
          12085
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "3421": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11950,
          12015
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3422": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          11950,
          12015
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "3423": {
        "op": "POP"
      },
      "3424": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12031,
          12053
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3426": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12031,
          12053
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3427": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12065,
          12098
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xD84"
      },
      "3430": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12065,
          12098
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3431": {
        "op": "POP"
      },
      "3432": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3434": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "3436": {
        "op": "SHL"
      },
      "3437": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12075,
          12085
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3438": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12075,
          12085
        ],
        "op": "DIV",
        "path": "23"
      },
      "3439": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12075,
          12085
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "3441": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12075,
          12085
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3442": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12075,
          12085
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3443": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12075,
          12085
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3444": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12075,
          12085
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3445": {
        "op": "POP"
      },
      "3446": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3448": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "3450": {
        "op": "SHL"
      },
      "3451": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12087,
          12097
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3452": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12087,
          12097
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3453": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12087,
          12097
        ],
        "op": "DIV",
        "path": "23"
      },
      "3454": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12087,
          12097
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3455": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12087,
          12097
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3456": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12065,
          12074
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1FC8"
      },
      "3459": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12065,
          12098
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3460": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12065,
          12098
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3461": {
        "op": "POP"
      },
      "3462": {
        "op": "POP"
      },
      "3463": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12129,
          12138
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 40,
        "value": "0xA"
      },
      "3465": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12129,
          12138
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "3466": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12030,
          12098
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3467": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12030,
          12098
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "3468": {
        "op": "POP"
      },
      "3469": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12113,
          12165
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xDB0"
      },
      "3472": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12113,
          12165
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3473": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3475": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3477": {
        "op": "SHL"
      },
      "3478": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12129,
          12138
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3479": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12129,
          12138
        ],
        "op": "DIV",
        "path": "23"
      },
      "3480": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12129,
          12138
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "3482": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12129,
          12138
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3483": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12129,
          12138
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3484": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12129,
          12138
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3485": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12129,
          12138
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "3486": {
        "op": "POP"
      },
      "3487": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3489": {
        "op": "PUSH1",
        "value": "0xB8"
      },
      "3491": {
        "op": "SHL"
      },
      "3492": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12140,
          12149
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3493": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12140,
          12149
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3494": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12140,
          12149
        ],
        "op": "DIV",
        "path": "23"
      },
      "3495": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12140,
          12149
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3496": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12140,
          12149
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3497": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12140,
          12149
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3498": {
        "op": "POP"
      },
      "3499": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12151,
          12164
        ],
        "op": "DUP5",
        "path": "23"
      },
      "3500": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12113,
          12128
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x208F"
      },
      "3503": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12113,
          12165
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3504": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12113,
          12165
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3505": {
        "op": "POP"
      },
      "3506": {
        "op": "POP"
      },
      "3507": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12196,
          12206
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 41,
        "value": "0xA"
      },
      "3509": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12196,
          12206
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "3510": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12180,
          12235
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xDD8"
      },
      "3513": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12180,
          12235
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3514": {
        "op": "POP"
      },
      "3515": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3517": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "3519": {
        "op": "SHL"
      },
      "3520": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12196,
          12206
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3521": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12196,
          12206
        ],
        "op": "DIV",
        "path": "23"
      },
      "3522": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12196,
          12206
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "3524": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12196,
          12206
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3525": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12196,
          12206
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3526": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12196,
          12206
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3527": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12196,
          12206
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3528": {
        "op": "POP"
      },
      "3529": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3531": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "3533": {
        "op": "SHL"
      },
      "3534": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12208,
          12218
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3535": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12208,
          12218
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3536": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12208,
          12218
        ],
        "op": "DIV",
        "path": "23"
      },
      "3537": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12208,
          12218
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3538": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12208,
          12218
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3539": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12220,
          12234
        ],
        "op": "DUP4",
        "path": "23"
      },
      "3540": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12180,
          12195
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x208F"
      },
      "3543": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12180,
          12235
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3544": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12180,
          12235
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3545": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12180,
          12235
        ],
        "op": "POP",
        "path": "23"
      },
      "3546": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12180,
          12235
        ],
        "op": "POP",
        "path": "23"
      },
      "3547": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12180,
          12235
        ],
        "op": "POP",
        "path": "23"
      },
      "3548": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12180,
          12235
        ],
        "op": "POP",
        "path": "23"
      },
      "3549": {
        "offset": [
          2484,
          2485
        ],
        "op": "POP",
        "path": "0"
      },
      "3550": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2484,
          2485
        ],
        "op": "POP",
        "path": "0"
      },
      "3551": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12315,
          12331
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3553": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12334,
          12347
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xDE8"
      },
      "3556": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12334,
          12345
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xB18"
      },
      "3559": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12334,
          12347
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3560": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12334,
          12347
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3561": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12315,
          12347
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3562": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12315,
          12347
        ],
        "op": "POP",
        "path": "23"
      },
      "3563": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12358,
          12374
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3565": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12377,
          12390
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xDF4"
      },
      "3568": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12377,
          12388
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xA4A"
      },
      "3571": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12377,
          12390
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3572": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12377,
          12390
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3573": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12358,
          12390
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3574": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12358,
          12390
        ],
        "op": "POP",
        "path": "23"
      },
      "3575": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "PUSH32",
        "path": "23",
        "statement": 42,
        "value": "0x210F60ADF1DB7A02E9DB9A49EC7C2EB2060C516CBCFD01A0C05288144738EE5D"
      },
      "3608": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12415,
          12419
        ],
        "op": "DUP4",
        "path": "23"
      },
      "3609": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12421,
          12429
        ],
        "op": "DUP4",
        "path": "23"
      },
      "3610": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12431,
          12439
        ],
        "op": "DUP4",
        "path": "23"
      },
      "3611": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12441,
          12454
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xE22"
      },
      "3614": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12441,
          12452
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x6FF"
      },
      "3617": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12441,
          12454
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3618": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12441,
          12454
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3619": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3621": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3622": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xE32"
      },
      "3625": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "3626": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "3627": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3628": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3629": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3630": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3793"
      },
      "3633": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12406,
          12455
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3634": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3635": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3637": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3638": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3639": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3640": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "SUB",
        "path": "23"
      },
      "3641": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3642": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12406,
          12455
        ],
        "op": "LOG1",
        "path": "23"
      },
      "3643": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12472,
          12487
        ],
        "op": "DUP11",
        "path": "23"
      },
      "3644": {
        "branch": 235,
        "fn": "SharpeAI.rebalance",
        "offset": [
          12472,
          12487
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "3645": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12468,
          12800
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xF11"
      },
      "3648": {
        "branch": 235,
        "fn": "SharpeAI.rebalance",
        "offset": [
          12468,
          12800
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "3649": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3651": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3653": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3655": {
        "op": "SHL"
      },
      "3656": {
        "op": "SUB"
      },
      "3657": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12508
        ],
        "op": "PUSH32",
        "path": "23",
        "statement": 43,
        "value": "0x0"
      },
      "3690": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12513
        ],
        "op": "AND",
        "path": "23"
      },
      "3691": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12513
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x128ACB08"
      },
      "3696": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12540,
          12544
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "3697": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12577,
          12578
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3699": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12564,
          12578
        ],
        "op": "DUP15",
        "path": "23"
      },
      "3700": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12564,
          12578
        ],
        "op": "SGT",
        "path": "23"
      },
      "3701": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12564,
          12578
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3702": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12597,
          12638
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xE87"
      },
      "3705": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12597,
          12638
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "3706": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12627,
          12638
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xE82"
      },
      "3709": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12628,
          12638
        ],
        "op": "DUP16",
        "path": "23"
      },
      "3710": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12627,
          12638
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3FF4"
      },
      "3713": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12627,
          12638
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3714": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12627,
          12638
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3715": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12597,
          12638
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xE89"
      },
      "3718": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12597,
          12638
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3719": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12597,
          12638
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3720": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12614,
          12624
        ],
        "op": "DUP15",
        "path": "23"
      },
      "3721": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12597,
          12638
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3722": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12657,
          12674
        ],
        "op": "DUP15",
        "path": "23"
      },
      "3723": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3725": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3726": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP6",
        "path": "23"
      },
      "3727": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xFFFFFFFF"
      },
      "3732": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "AND",
        "path": "23"
      },
      "3733": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "3735": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "SHL",
        "path": "23"
      },
      "3736": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3737": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "3738": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "3740": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "ADD",
        "path": "23"
      },
      "3741": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xEA9"
      },
      "3744": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "3745": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "3746": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3747": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3748": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3749": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3679"
      },
      "3752": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12504,
          12710
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3753": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3754": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3756": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3757": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3758": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3759": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP4",
        "path": "23"
      },
      "3760": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "SUB",
        "path": "23"
      },
      "3761": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3762": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3764": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP8",
        "path": "23"
      },
      "3765": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3766": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "3767": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "3768": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3769": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "3770": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xEC2"
      },
      "3773": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "3774": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3776": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3777": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "REVERT",
        "path": "23"
      },
      "3778": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3779": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "POP",
        "path": "23"
      },
      "3780": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "GAS",
        "path": "23"
      },
      "3781": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "CALL",
        "path": "23"
      },
      "3782": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "3783": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3784": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "3785": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xED6"
      },
      "3788": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "3789": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "3790": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3792": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3793": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "3794": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "3795": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3797": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "REVERT",
        "path": "23"
      },
      "3798": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3799": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "POP",
        "path": "23"
      },
      "3800": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "POP",
        "path": "23"
      },
      "3801": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "POP",
        "path": "23"
      },
      "3802": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "POP",
        "path": "23"
      },
      "3803": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3805": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "3806": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "3807": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "3809": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "NOT",
        "path": "23"
      },
      "3810": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "3812": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP3",
        "path": "23"
      },
      "3813": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "ADD",
        "path": "23"
      },
      "3814": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "AND",
        "path": "23"
      },
      "3815": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP3",
        "path": "23"
      },
      "3816": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "ADD",
        "path": "23"
      },
      "3817": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3818": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "3820": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "3821": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "POP",
        "path": "23"
      },
      "3822": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3823": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "ADD",
        "path": "23"
      },
      "3824": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3825": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xEFA"
      },
      "3828": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3829": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3830": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x32E2"
      },
      "3833": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12504,
          12710
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3834": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3835": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "POP",
        "path": "23"
      },
      "3836": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12504,
          12710
        ],
        "op": "POP",
        "path": "23"
      },
      "3837": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12736,
          12749
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 44,
        "value": "0xF04"
      },
      "3840": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12736,
          12747
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xB18"
      },
      "3843": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12736,
          12749
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3844": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12736,
          12749
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3845": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12725,
          12749
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3846": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12725,
          12749
        ],
        "op": "POP",
        "path": "23"
      },
      "3847": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12775,
          12788
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 45,
        "value": "0xF0E"
      },
      "3850": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12775,
          12786
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xA4A"
      },
      "3853": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12775,
          12788
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3854": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12775,
          12788
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3855": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12764,
          12788
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3856": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12764,
          12788
        ],
        "op": "POP",
        "path": "23"
      },
      "3857": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12468,
          12800
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3858": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12852,
          12869
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3860": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12872,
          12936
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xF1F"
      },
      "3863": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12893,
          12903
        ],
        "op": "DUP11",
        "path": "23"
      },
      "3864": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12905,
          12915
        ],
        "op": "DUP11",
        "path": "23"
      },
      "3865": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12917,
          12925
        ],
        "op": "DUP6",
        "path": "23"
      },
      "3866": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12927,
          12935
        ],
        "op": "DUP6",
        "path": "23"
      },
      "3867": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12872,
          12892
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x22DB"
      },
      "3870": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12872,
          12936
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3871": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12872,
          12936
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3872": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12852,
          12936
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3873": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12852,
          12936
        ],
        "op": "POP",
        "path": "23"
      },
      "3874": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12947,
          12996
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 46,
        "value": "0xF2C"
      },
      "3877": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12962,
          12972
        ],
        "op": "DUP11",
        "path": "23"
      },
      "3878": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12974,
          12984
        ],
        "op": "DUP11",
        "path": "23"
      },
      "3879": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12986,
          12995
        ],
        "op": "DUP4",
        "path": "23"
      },
      "3880": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12947,
          12961
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x239E"
      },
      "3883": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          12947,
          12996
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3884": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          12947,
          12996
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3885": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13008,
          13017
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 47,
        "value": "0xA"
      },
      "3887": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "DUP1",
        "path": "23"
      },
      "3888": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "3889": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "3891": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "DUP13",
        "path": "23"
      },
      "3892": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3893": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3894": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "PUSH3",
        "path": "23",
        "value": "0xFFFFFF"
      },
      "3898": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3899": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "DUP2",
        "path": "23"
      },
      "3900": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "AND",
        "path": "23"
      },
      "3901": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3903": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3905": {
        "op": "SHL"
      },
      "3906": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "MUL",
        "path": "23"
      },
      "3907": {
        "op": "PUSH3",
        "value": "0xFFFFFF"
      },
      "3911": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "3913": {
        "op": "SHL"
      },
      "3914": {
        "op": "NOT"
      },
      "3915": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3916": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "DUP15",
        "path": "23"
      },
      "3917": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3918": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "3919": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3920": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3921": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "AND",
        "path": "23"
      },
      "3922": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3924": {
        "op": "PUSH1",
        "value": "0xB8"
      },
      "3926": {
        "op": "SHL"
      },
      "3927": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "MUL",
        "path": "23"
      },
      "3928": {
        "op": "PUSH3",
        "value": "0xFFFFFF"
      },
      "3932": {
        "op": "PUSH1",
        "value": "0xB8"
      },
      "3934": {
        "op": "SHL"
      },
      "3935": {
        "op": "NOT"
      },
      "3936": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3937": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "3938": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "AND",
        "path": "23"
      },
      "3939": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3940": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3941": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3942": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "OR",
        "path": "23"
      },
      "3943": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "AND",
        "path": "23"
      },
      "3944": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "OR",
        "path": "23"
      },
      "3945": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3946": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13007,
          13056
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "3947": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13080,
          13093
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 48,
        "value": "0xF72"
      },
      "3950": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13080,
          13091
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xB18"
      },
      "3953": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          13080,
          13093
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3954": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13080,
          13093
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3955": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13069,
          13093
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "3956": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13069,
          13093
        ],
        "op": "POP",
        "path": "23"
      },
      "3957": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13115,
          13128
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 49,
        "value": "0xF7C"
      },
      "3960": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13115,
          13126
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xA4A"
      },
      "3963": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          13115,
          13128
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3964": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13115,
          13128
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3965": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13104,
          13128
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "3966": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13104,
          13128
        ],
        "op": "POP",
        "path": "23"
      },
      "3967": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13220,
          13240
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3969": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13243,
          13305
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xF8C"
      },
      "3972": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13264,
          13273
        ],
        "op": "DUP10",
        "path": "23"
      },
      "3973": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13275,
          13284
        ],
        "op": "DUP10",
        "path": "23"
      },
      "3974": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13286,
          13294
        ],
        "op": "DUP7",
        "path": "23"
      },
      "3975": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13296,
          13304
        ],
        "op": "DUP7",
        "path": "23"
      },
      "3976": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13243,
          13263
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x22DB"
      },
      "3979": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          13243,
          13305
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3980": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13243,
          13305
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3981": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13220,
          13305
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3982": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13220,
          13305
        ],
        "op": "POP",
        "path": "23"
      },
      "3983": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13316,
          13336
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "3985": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13339,
          13401
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xF9C"
      },
      "3988": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13360,
          13369
        ],
        "op": "DUP9",
        "path": "23"
      },
      "3989": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13371,
          13380
        ],
        "op": "DUP9",
        "path": "23"
      },
      "3990": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13382,
          13390
        ],
        "op": "DUP8",
        "path": "23"
      },
      "3991": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13392,
          13400
        ],
        "op": "DUP8",
        "path": "23"
      },
      "3992": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13339,
          13359
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x22DB"
      },
      "3995": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          13339,
          13401
        ],
        "op": "JUMP",
        "path": "23"
      },
      "3996": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13339,
          13401
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "3997": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13316,
          13401
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "3998": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13316,
          13401
        ],
        "op": "POP",
        "path": "23"
      },
      "3999": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13431,
          13443
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4000": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4002": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4004": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "4006": {
        "op": "SHL"
      },
      "4007": {
        "op": "SUB"
      },
      "4008": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13416,
          13443
        ],
        "op": "AND",
        "path": "23"
      },
      "4009": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13416,
          13428
        ],
        "op": "DUP3",
        "path": "23"
      },
      "4010": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4012": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4014": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "4016": {
        "op": "SHL"
      },
      "4017": {
        "op": "SUB"
      },
      "4018": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13416,
          13443
        ],
        "op": "AND",
        "path": "23"
      },
      "4019": {
        "branch": 236,
        "fn": "SharpeAI.rebalance",
        "offset": [
          13416,
          13443
        ],
        "op": "GT",
        "path": "23"
      },
      "4020": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13412,
          13733
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "4021": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13412,
          13733
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1006"
      },
      "4024": {
        "branch": 236,
        "fn": "SharpeAI.rebalance",
        "offset": [
          13412,
          13733
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "4025": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13460,
          13510
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 50,
        "value": "0xFC3"
      },
      "4028": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13475,
          13484
        ],
        "op": "DUP11",
        "path": "23"
      },
      "4029": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13486,
          13495
        ],
        "op": "DUP11",
        "path": "23"
      },
      "4030": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13497,
          13509
        ],
        "op": "DUP5",
        "path": "23"
      },
      "4031": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13460,
          13474
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x239E"
      },
      "4034": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          13460,
          13510
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4035": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13460,
          13510
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4036": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13526,
          13536
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 51,
        "value": "0xA"
      },
      "4038": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4039": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "4040": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "4042": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "DUP13",
        "path": "23"
      },
      "4043": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4044": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "4045": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "PUSH3",
        "path": "23",
        "value": "0xFFFFFF"
      },
      "4049": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4050": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4051": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "AND",
        "path": "23"
      },
      "4052": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4054": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "4056": {
        "op": "SHL"
      },
      "4057": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "MUL",
        "path": "23"
      },
      "4058": {
        "op": "PUSH3",
        "value": "0xFFFFFF"
      },
      "4062": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "4064": {
        "op": "SHL"
      },
      "4065": {
        "op": "NOT"
      },
      "4066": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4067": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "DUP15",
        "path": "23"
      },
      "4068": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4069": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "4070": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4071": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "4072": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "AND",
        "path": "23"
      },
      "4073": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4075": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "4077": {
        "op": "SHL"
      },
      "4078": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "MUL",
        "path": "23"
      },
      "4079": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4081": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4083": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "4085": {
        "op": "SHL"
      },
      "4086": {
        "op": "SUB"
      },
      "4087": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4088": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "4089": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "AND",
        "path": "23"
      },
      "4090": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4091": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4092": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4093": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "OR",
        "path": "23"
      },
      "4094": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "AND",
        "path": "23"
      },
      "4095": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "OR",
        "path": "23"
      },
      "4096": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4097": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13525,
          13574
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "4098": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13412,
          13733
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1050"
      },
      "4101": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13412,
          13733
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4102": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13412,
          13733
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4103": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13607,
          13657
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 52,
        "value": "0x1011"
      },
      "4106": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13622,
          13631
        ],
        "op": "DUP9",
        "path": "23"
      },
      "4107": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13633,
          13642
        ],
        "op": "DUP9",
        "path": "23"
      },
      "4108": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13644,
          13656
        ],
        "op": "DUP4",
        "path": "23"
      },
      "4109": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13607,
          13621
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x239E"
      },
      "4112": {
        "fn": "SharpeAI.rebalance",
        "jump": "i",
        "offset": [
          13607,
          13657
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4113": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13607,
          13657
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4114": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13673,
          13683
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 53,
        "value": "0xA"
      },
      "4116": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4117": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "4118": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "4120": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "DUP11",
        "path": "23"
      },
      "4121": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4122": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "4123": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "PUSH3",
        "path": "23",
        "value": "0xFFFFFF"
      },
      "4127": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4128": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4129": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "AND",
        "path": "23"
      },
      "4130": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4132": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "4134": {
        "op": "SHL"
      },
      "4135": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "MUL",
        "path": "23"
      },
      "4136": {
        "op": "PUSH3",
        "value": "0xFFFFFF"
      },
      "4140": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "4142": {
        "op": "SHL"
      },
      "4143": {
        "op": "NOT"
      },
      "4144": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4145": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "DUP13",
        "path": "23"
      },
      "4146": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4147": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "4148": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4149": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "4150": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "AND",
        "path": "23"
      },
      "4151": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4153": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "4155": {
        "op": "SHL"
      },
      "4156": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "MUL",
        "path": "23"
      },
      "4157": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4159": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4161": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "4163": {
        "op": "SHL"
      },
      "4164": {
        "op": "SUB"
      },
      "4165": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4166": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "4167": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "AND",
        "path": "23"
      },
      "4168": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4169": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4170": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4171": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "OR",
        "path": "23"
      },
      "4172": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "AND",
        "path": "23"
      },
      "4173": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "OR",
        "path": "23"
      },
      "4174": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4175": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13672,
          13721
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "4176": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          13412,
          13733
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4177": {
        "op": "POP"
      },
      "4178": {
        "op": "POP"
      },
      "4179": {
        "offset": [
          1701,
          1702
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "4181": {
        "offset": [
          2628,
          2635
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x5"
      },
      "4183": {
        "offset": [
          2628,
          2650
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "4184": {
        "op": "POP"
      },
      "4185": {
        "op": "POP"
      },
      "4186": {
        "op": "POP"
      },
      "4187": {
        "op": "POP"
      },
      "4188": {
        "op": "POP"
      },
      "4189": {
        "op": "POP"
      },
      "4190": {
        "op": "POP"
      },
      "4191": {
        "op": "POP"
      },
      "4192": {
        "op": "POP"
      },
      "4193": {
        "op": "POP"
      },
      "4194": {
        "op": "POP"
      },
      "4195": {
        "op": "POP"
      },
      "4196": {
        "fn": "SharpeAI.rebalance",
        "jump": "o",
        "offset": [
          11199,
          13740
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4197": {
        "offset": [
          2814,
          2836
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4198": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2814,
          2836
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "4200": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2814,
          2836
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "4201": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4203": {
        "op": "PUSH1",
        "value": "0xB8"
      },
      "4205": {
        "op": "SHL"
      },
      "4206": {
        "offset": [
          2814,
          2836
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4207": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2814,
          2836
        ],
        "op": "DIV",
        "path": "23"
      },
      "4208": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2814,
          2836
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "4210": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2814,
          2836
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "4211": {
        "fn": "SharpeAI.rebalance",
        "offset": [
          2814,
          2836
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4212": {
        "fn": "SharpeAI.rebalance",
        "jump": "o",
        "offset": [
          2814,
          2836
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4213": {
        "fn": "ERC20.symbol",
        "offset": [
          2367,
          2469
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4214": {
        "fn": "ERC20.symbol",
        "offset": [
          2423,
          2436
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x60"
      },
      "4216": {
        "fn": "ERC20.symbol",
        "offset": [
          2455,
          2462
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 54,
        "value": "0x4"
      },
      "4218": {
        "fn": "ERC20.symbol",
        "offset": [
          2448,
          2462
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4219": {
        "fn": "ERC20.symbol",
        "offset": [
          2448,
          2462
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "4220": {
        "fn": "ERC20.symbol",
        "offset": [
          2448,
          2462
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5F3"
      },
      "4223": {
        "fn": "ERC20.symbol",
        "offset": [
          2448,
          2462
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4224": {
        "fn": "ERC20.symbol",
        "offset": [
          2448,
          2462
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3F62"
      },
      "4227": {
        "fn": "ERC20.symbol",
        "jump": "i",
        "offset": [
          2448,
          2462
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4228": {
        "offset": [
          2945,
          2980
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4229": {
        "fn": "ERC20.symbol",
        "offset": [
          2945,
          2980
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xC"
      },
      "4231": {
        "fn": "ERC20.symbol",
        "offset": [
          2945,
          2980
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "4232": {
        "fn": "ERC20.symbol",
        "offset": [
          2945,
          2980
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4233": {
        "fn": "ERC20.symbol",
        "jump": "o",
        "offset": [
          2945,
          2980
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4234": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6596,
          7025
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4235": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6689,
          6693
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4237": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6705,
          6718
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4238": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6721,
          6733
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1095"
      },
      "4241": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6721,
          6731
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19DD"
      },
      "4244": {
        "fn": "ERC20.decreaseAllowance",
        "jump": "i",
        "offset": [
          6721,
          6733
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4245": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6721,
          6733
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4246": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4248": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4250": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4252": {
        "op": "SHL"
      },
      "4253": {
        "op": "SUB"
      },
      "4254": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4255": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4256": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "AND",
        "path": "1"
      },
      "4257": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6743,
          6767
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4259": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4260": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4261": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4262": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6781
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "4264": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "4266": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4267": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4268": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4269": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4271": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4272": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "DUP4",
        "path": "1"
      },
      "4273": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6788
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "4274": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6797
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "4275": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6797
        ],
        "op": "DUP10",
        "path": "1"
      },
      "4276": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6797
        ],
        "op": "AND",
        "path": "1"
      },
      "4277": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6797
        ],
        "op": "DUP4",
        "path": "1"
      },
      "4278": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6797
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4279": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6797
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "4280": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6797
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4281": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6797
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4282": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6797
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "4283": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6770,
          6797
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "4284": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6705,
          6733
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4285": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6705,
          6733
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "4286": {
        "op": "POP"
      },
      "4287": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6815,
          6850
        ],
        "op": "DUP4",
        "path": "1",
        "statement": 55
      },
      "4288": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6815,
          6850
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4289": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6815,
          6850
        ],
        "op": "LT",
        "path": "1"
      },
      "4290": {
        "branch": 270,
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6815,
          6850
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "4291": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x10DE"
      },
      "4294": {
        "branch": 270,
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "4295": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "4297": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "4298": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "4302": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "4304": {
        "op": "SHL"
      },
      "4305": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4306": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "4307": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "4309": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "ADD",
        "path": "1"
      },
      "4310": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x542"
      },
      "4313": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4314": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3DE3"
      },
      "4317": {
        "fn": "ERC20.decreaseAllowance",
        "jump": "i",
        "offset": [
          6807,
          6892
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4318": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6807,
          6892
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4319": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6926,
          6986
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 56,
        "value": "0x10EB"
      },
      "4322": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6935,
          6940
        ],
        "op": "DUP3",
        "path": "1"
      },
      "4323": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6942,
          6949
        ],
        "op": "DUP7",
        "path": "1"
      },
      "4324": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6970,
          6985
        ],
        "op": "DUP7",
        "path": "1"
      },
      "4325": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6951,
          6967
        ],
        "op": "DUP5",
        "path": "1"
      },
      "4326": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6951,
          6985
        ],
        "op": "SUB",
        "path": "1"
      },
      "4327": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6926,
          6934
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19E1"
      },
      "4330": {
        "fn": "ERC20.decreaseAllowance",
        "jump": "i",
        "offset": [
          6926,
          6986
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4331": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6926,
          6986
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4332": {
        "op": "POP"
      },
      "4333": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          7014,
          7018
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 57,
        "value": "0x1"
      },
      "4335": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          7014,
          7018
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "4336": {
        "fn": "ERC20.decreaseAllowance",
        "offset": [
          6596,
          7025
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "4337": {
        "op": "POP"
      },
      "4338": {
        "op": "POP"
      },
      "4339": {
        "op": "POP"
      },
      "4340": {
        "op": "POP"
      },
      "4341": {
        "fn": "ERC20.decreaseAllowance",
        "jump": "o",
        "offset": [
          6596,
          7025
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4342": {
        "fn": "ERC20.transfer",
        "offset": [
          3729,
          3918
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4343": {
        "fn": "ERC20.transfer",
        "offset": [
          3808,
          3812
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "4345": {
        "fn": "ERC20.transfer",
        "offset": [
          3824,
          3837
        ],
        "op": "DUP1",
        "path": "1"
      },
      "4346": {
        "fn": "ERC20.transfer",
        "offset": [
          3840,
          3852
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1101"
      },
      "4349": {
        "fn": "ERC20.transfer",
        "offset": [
          3840,
          3850
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19DD"
      },
      "4352": {
        "fn": "ERC20.transfer",
        "jump": "i",
        "offset": [
          3840,
          3852
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4353": {
        "fn": "ERC20.transfer",
        "offset": [
          3840,
          3852
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "4354": {
        "fn": "ERC20.transfer",
        "offset": [
          3824,
          3852
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "4355": {
        "fn": "ERC20.transfer",
        "offset": [
          3824,
          3852
        ],
        "op": "POP",
        "path": "1"
      },
      "4356": {
        "fn": "ERC20.transfer",
        "offset": [
          3862,
          3890
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 58,
        "value": "0x68E"
      },
      "4359": {
        "fn": "ERC20.transfer",
        "offset": [
          3872,
          3877
        ],
        "op": "DUP2",
        "path": "1"
      },
      "4360": {
        "fn": "ERC20.transfer",
        "offset": [
          3879,
          3881
        ],
        "op": "DUP6",
        "path": "1"
      },
      "4361": {
        "fn": "ERC20.transfer",
        "offset": [
          3883,
          3889
        ],
        "op": "DUP6",
        "path": "1"
      },
      "4362": {
        "fn": "ERC20.transfer",
        "offset": [
          3862,
          3871
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1AD9"
      },
      "4365": {
        "fn": "ERC20.transfer",
        "jump": "i",
        "offset": [
          3862,
          3890
        ],
        "op": "JUMP",
        "path": "1"
      },
      "4366": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4367": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17224,
          17239
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4369": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17241,
          17256
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4370": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17275,
          17292
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4372": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17298,
          17317
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4373": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17319,
          17338
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4375": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17355,
          17386
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1120"
      },
      "4378": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17365,
          17374
        ],
        "op": "DUP8",
        "path": "23"
      },
      "4379": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17376,
          17385
        ],
        "op": "DUP8",
        "path": "23"
      },
      "4380": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17355,
          17364
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1FC8"
      },
      "4383": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17355,
          17386
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4384": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17355,
          17386
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4385": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17274,
          17386
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "4386": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17274,
          17386
        ],
        "op": "POP",
        "path": "23"
      },
      "4387": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17274,
          17386
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "4388": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17274,
          17386
        ],
        "op": "POP",
        "path": "23"
      },
      "4389": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17274,
          17386
        ],
        "op": "POP",
        "path": "23"
      },
      "4390": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17274,
          17386
        ],
        "op": "POP",
        "path": "23"
      },
      "4391": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17274,
          17386
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4392": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17274,
          17386
        ],
        "op": "POP",
        "path": "23"
      },
      "4393": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17418,
          17471
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 59,
        "value": "0x1133"
      },
      "4396": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17439,
          17448
        ],
        "op": "DUP8",
        "path": "23"
      },
      "4397": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17450,
          17459
        ],
        "op": "DUP8",
        "path": "23"
      },
      "4398": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17461,
          17470
        ],
        "op": "DUP6",
        "path": "23"
      },
      "4399": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17418,
          17438
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x23FF"
      },
      "4402": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17418,
          17471
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4403": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17418,
          17471
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4404": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17558,
          17569
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x6"
      },
      "4406": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17558,
          17569
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "4407": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17397,
          17471
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "4408": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17397,
          17471
        ],
        "op": "SWAP7",
        "path": "23"
      },
      "4409": {
        "op": "POP"
      },
      "4410": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17397,
          17471
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "4411": {
        "op": "POP"
      },
      "4412": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17519,
          17538
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4414": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17519,
          17538
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4415": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17541,
          17570
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x114C"
      },
      "4418": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17541,
          17570
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4419": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17549,
          17552
        ],
        "op": "PUSH3",
        "path": "23",
        "value": "0xF4240"
      },
      "4423": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17549,
          17552
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4424": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17541,
          17557
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x197B"
      },
      "4427": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17541,
          17570
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4428": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17541,
          17570
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4429": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17519,
          17570
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4430": {
        "op": "POP"
      },
      "4431": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17591,
          17650
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 60,
        "value": "0x1178"
      },
      "4434": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17603,
          17649
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1171"
      },
      "4437": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17645,
          17648
        ],
        "op": "PUSH3",
        "path": "23",
        "value": "0xF4240"
      },
      "4441": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17603,
          17640
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "4444": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4446": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4448": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "4450": {
        "op": "SHL"
      },
      "4451": {
        "op": "SUB"
      },
      "4452": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17603,
          17623
        ],
        "op": "DUP8",
        "path": "23"
      },
      "4453": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17603,
          17623
        ],
        "op": "AND",
        "path": "23"
      },
      "4454": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17519,
          17570
        ],
        "op": "DUP6",
        "path": "23"
      },
      "4455": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17603,
          17627
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "4458": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17603,
          17640
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4459": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17603,
          17640
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4460": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17603,
          17644
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4461": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17603,
          17644
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24D2"
      },
      "4464": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17603,
          17649
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4465": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17603,
          17649
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4466": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17591,
          17598
        ],
        "op": "DUP8",
        "path": "23"
      },
      "4467": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17591,
          17598
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4468": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17591,
          17602
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24DE"
      },
      "4471": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17591,
          17650
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4472": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17591,
          17650
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4473": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17581,
          17650
        ],
        "op": "SWAP6",
        "path": "23"
      },
      "4474": {
        "op": "POP"
      },
      "4475": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17671,
          17730
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 61,
        "value": "0x119E"
      },
      "4478": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17683,
          17729
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1197"
      },
      "4481": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17725,
          17728
        ],
        "op": "PUSH3",
        "path": "23",
        "value": "0xF4240"
      },
      "4485": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17683,
          17720
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "4488": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4490": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4492": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "4494": {
        "op": "SHL"
      },
      "4495": {
        "op": "SUB"
      },
      "4496": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17683,
          17703
        ],
        "op": "DUP7",
        "path": "23"
      },
      "4497": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17683,
          17703
        ],
        "op": "AND",
        "path": "23"
      },
      "4498": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17708,
          17719
        ],
        "op": "DUP6",
        "path": "23"
      },
      "4499": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17683,
          17707
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "4502": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17683,
          17720
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4503": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17683,
          17729
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4504": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17671,
          17678
        ],
        "op": "DUP7",
        "path": "23"
      },
      "4505": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17671,
          17678
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4506": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17671,
          17682
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24DE"
      },
      "4509": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "i",
        "offset": [
          17671,
          17730
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4510": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17671,
          17730
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4511": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17661,
          17730
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "4512": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17661,
          17730
        ],
        "op": "POP",
        "path": "23"
      },
      "4513": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "POP",
        "path": "23"
      },
      "4514": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "POP",
        "path": "23"
      },
      "4515": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "POP",
        "path": "23"
      },
      "4516": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "POP",
        "path": "23"
      },
      "4517": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4518": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "POP",
        "path": "23"
      },
      "4519": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4520": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4521": {
        "fn": "SharpeAI.getPositionAmounts",
        "offset": [
          17114,
          17738
        ],
        "op": "POP",
        "path": "23"
      },
      "4522": {
        "fn": "SharpeAI.getPositionAmounts",
        "jump": "o",
        "offset": [
          17114,
          17738
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4523": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23240,
          23358
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4524": {
        "offset": [
          23726,
          23736
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x9"
      },
      "4526": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23726,
          23736
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "4527": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4529": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4531": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4533": {
        "op": "SHL"
      },
      "4534": {
        "op": "SUB"
      },
      "4535": {
        "offset": [
          23726,
          23736
        ],
        "op": "AND",
        "path": "23"
      },
      "4536": {
        "offset": [
          23712,
          23722
        ],
        "op": "CALLER",
        "path": "23"
      },
      "4537": {
        "offset": [
          23712,
          23736
        ],
        "op": "EQ",
        "path": "23"
      },
      "4538": {
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x11D5"
      },
      "4541": {
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "4542": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "4544": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23704,
          23751
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "4545": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "4549": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "4551": {
        "op": "SHL"
      },
      "4552": {
        "offset": [
          23704,
          23751
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4553": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23704,
          23751
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "4554": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "4556": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23704,
          23751
        ],
        "op": "ADD",
        "path": "23"
      },
      "4557": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "4560": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23704,
          23751
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4561": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B39"
      },
      "4564": {
        "fn": "SharpeAI.setGovernance",
        "jump": "i",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4565": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4566": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23336
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 62,
        "value": "0xA"
      },
      "4568": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4569": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "4570": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4572": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4574": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4576": {
        "op": "SHL"
      },
      "4577": {
        "op": "SUB"
      },
      "4578": {
        "op": "NOT"
      },
      "4579": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "AND",
        "path": "23"
      },
      "4580": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4582": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4584": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4586": {
        "op": "SHL"
      },
      "4587": {
        "op": "SUB"
      },
      "4588": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4589": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4590": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "4591": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "AND",
        "path": "23"
      },
      "4592": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "4593": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4594": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "4595": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "OR",
        "path": "23"
      },
      "4596": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4597": {
        "fn": "SharpeAI.setGovernance",
        "offset": [
          23319,
          23350
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "4598": {
        "fn": "SharpeAI.setGovernance",
        "jump": "o",
        "offset": [
          23240,
          23358
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4599": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4600": {
        "offset": [
          23726,
          23736
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x9"
      },
      "4602": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23726,
          23736
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "4603": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4605": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4607": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4609": {
        "op": "SHL"
      },
      "4610": {
        "op": "SUB"
      },
      "4611": {
        "offset": [
          23726,
          23736
        ],
        "op": "AND",
        "path": "23"
      },
      "4612": {
        "offset": [
          23712,
          23722
        ],
        "op": "CALLER",
        "path": "23"
      },
      "4613": {
        "offset": [
          23712,
          23736
        ],
        "op": "EQ",
        "path": "23"
      },
      "4614": {
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1221"
      },
      "4617": {
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "4618": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "4620": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23704,
          23751
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "4621": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "4625": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "4627": {
        "op": "SHL"
      },
      "4628": {
        "offset": [
          23704,
          23751
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4629": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23704,
          23751
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "4630": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "4632": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23704,
          23751
        ],
        "op": "ADD",
        "path": "23"
      },
      "4633": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "4636": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23704,
          23751
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4637": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B39"
      },
      "4640": {
        "fn": "SharpeAI.emergencyBurn",
        "jump": "i",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4641": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4642": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 63,
        "value": "0x40"
      },
      "4644": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "4645": {
        "op": "PUSH4",
        "value": "0xA34123A7"
      },
      "4650": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "4652": {
        "op": "SHL"
      },
      "4653": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4654": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "4655": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4657": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4659": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4661": {
        "op": "SHL"
      },
      "4662": {
        "op": "SUB"
      },
      "4663": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22916
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "4696": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22921
        ],
        "op": "AND",
        "path": "23"
      },
      "4697": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22921
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4698": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22921
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xA34123A7"
      },
      "4703": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22921
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4704": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1271"
      },
      "4707": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4708": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22922,
          22931
        ],
        "op": "DUP7",
        "path": "23"
      },
      "4709": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22922,
          22931
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4710": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22933,
          22942
        ],
        "op": "DUP7",
        "path": "23"
      },
      "4711": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22933,
          22942
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4712": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22944,
          22953
        ],
        "op": "DUP7",
        "path": "23"
      },
      "4713": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22944,
          22953
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4714": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "4716": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "ADD",
        "path": "23"
      },
      "4717": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x376D"
      },
      "4720": {
        "fn": "SharpeAI.emergencyBurn",
        "jump": "i",
        "offset": [
          22912,
          22954
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4721": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4722": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "4724": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4725": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "4726": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4727": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP4",
        "path": "23"
      },
      "4728": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "SUB",
        "path": "23"
      },
      "4729": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4730": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4732": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP8",
        "path": "23"
      },
      "4733": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4734": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "4735": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "4736": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4737": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "4738": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x128A"
      },
      "4741": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "4742": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4744": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4745": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "REVERT",
        "path": "23"
      },
      "4746": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4747": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "POP",
        "path": "23"
      },
      "4748": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "GAS",
        "path": "23"
      },
      "4749": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "CALL",
        "path": "23"
      },
      "4750": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "4751": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4752": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "4753": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x129E"
      },
      "4756": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "4757": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "4758": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4760": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4761": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "4762": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "4763": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4765": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "REVERT",
        "path": "23"
      },
      "4766": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4767": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "POP",
        "path": "23"
      },
      "4768": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "POP",
        "path": "23"
      },
      "4769": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "POP",
        "path": "23"
      },
      "4770": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "POP",
        "path": "23"
      },
      "4771": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "4773": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "4774": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "4775": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "4777": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "NOT",
        "path": "23"
      },
      "4778": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "4780": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP3",
        "path": "23"
      },
      "4781": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "ADD",
        "path": "23"
      },
      "4782": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "AND",
        "path": "23"
      },
      "4783": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP3",
        "path": "23"
      },
      "4784": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "ADD",
        "path": "23"
      },
      "4785": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4786": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "4788": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "4789": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "POP",
        "path": "23"
      },
      "4790": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4791": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "ADD",
        "path": "23"
      },
      "4792": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4793": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x12C2"
      },
      "4796": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "4797": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4798": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x32E2"
      },
      "4801": {
        "fn": "SharpeAI.emergencyBurn",
        "jump": "i",
        "offset": [
          22912,
          22954
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4802": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22912,
          22954
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4803": {
        "op": "POP"
      },
      "4804": {
        "op": "POP"
      },
      "4805": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 64,
        "value": "0x40"
      },
      "4807": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "4808": {
        "op": "PUSH4",
        "value": "0x9E3D67B"
      },
      "4813": {
        "op": "PUSH1",
        "value": "0xE3"
      },
      "4815": {
        "op": "SHL"
      },
      "4816": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4817": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "4818": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4820": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4822": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4824": {
        "op": "SHL"
      },
      "4825": {
        "op": "SUB"
      },
      "4826": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          22969
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "4859": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          22977
        ],
        "op": "AND",
        "path": "23"
      },
      "4860": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          22977
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4861": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          22977
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x4F1EB3D8"
      },
      "4866": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          22977
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4867": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x131F"
      },
      "4870": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4871": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22986,
          22990
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "4872": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22986,
          22990
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4873": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22993,
          23002
        ],
        "op": "DUP8",
        "path": "23"
      },
      "4874": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22993,
          23002
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4875": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23004,
          23013
        ],
        "op": "DUP8",
        "path": "23"
      },
      "4876": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23004,
          23013
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4877": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4879": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4881": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "4883": {
        "op": "SHL"
      },
      "4884": {
        "op": "SUB"
      },
      "4885": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23015,
          23032
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4886": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23015,
          23032
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4887": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          23015,
          23032
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4888": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "4890": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "ADD",
        "path": "23"
      },
      "4891": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x36F5"
      },
      "4894": {
        "fn": "SharpeAI.emergencyBurn",
        "jump": "i",
        "offset": [
          22965,
          23052
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4895": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4896": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "4898": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4899": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "4900": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4901": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP4",
        "path": "23"
      },
      "4902": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "SUB",
        "path": "23"
      },
      "4903": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4904": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4906": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP8",
        "path": "23"
      },
      "4907": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4908": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "4909": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "4910": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4911": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "4912": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1338"
      },
      "4915": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "4916": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4918": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4919": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "REVERT",
        "path": "23"
      },
      "4920": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4921": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "POP",
        "path": "23"
      },
      "4922": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "GAS",
        "path": "23"
      },
      "4923": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "CALL",
        "path": "23"
      },
      "4924": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "4925": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4926": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "4927": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x134C"
      },
      "4930": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "4931": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "4932": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4934": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4935": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "4936": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "4937": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "4939": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "REVERT",
        "path": "23"
      },
      "4940": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4941": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "POP",
        "path": "23"
      },
      "4942": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "POP",
        "path": "23"
      },
      "4943": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "POP",
        "path": "23"
      },
      "4944": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "POP",
        "path": "23"
      },
      "4945": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "4947": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "4948": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "4949": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "4951": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "NOT",
        "path": "23"
      },
      "4952": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "4954": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP3",
        "path": "23"
      },
      "4955": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "ADD",
        "path": "23"
      },
      "4956": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "AND",
        "path": "23"
      },
      "4957": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP3",
        "path": "23"
      },
      "4958": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "ADD",
        "path": "23"
      },
      "4959": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP1",
        "path": "23"
      },
      "4960": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "4962": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "4963": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "POP",
        "path": "23"
      },
      "4964": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4965": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "ADD",
        "path": "23"
      },
      "4966": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4967": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1370"
      },
      "4970": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "4971": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "4972": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x33F5"
      },
      "4975": {
        "fn": "SharpeAI.emergencyBurn",
        "jump": "i",
        "offset": [
          22965,
          23052
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4976": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4977": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "POP",
        "path": "23"
      },
      "4978": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22965,
          23052
        ],
        "op": "POP",
        "path": "23"
      },
      "4979": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "POP",
        "path": "23"
      },
      "4980": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "POP",
        "path": "23"
      },
      "4981": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          22767,
          23060
        ],
        "op": "POP",
        "path": "23"
      },
      "4982": {
        "fn": "SharpeAI.emergencyBurn",
        "jump": "o",
        "offset": [
          22767,
          23060
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4983": {
        "offset": [
          2609,
          2635
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4984": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          2609,
          2635
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x6"
      },
      "4986": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          2609,
          2635
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "4987": {
        "fn": "SharpeAI.emergencyBurn",
        "offset": [
          2609,
          2635
        ],
        "op": "DUP2",
        "path": "23"
      },
      "4988": {
        "fn": "SharpeAI.emergencyBurn",
        "jump": "o",
        "offset": [
          2609,
          2635
        ],
        "op": "JUMP",
        "path": "23"
      },
      "4989": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21826,
          21945
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "4990": {
        "offset": [
          23726,
          23736
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x9"
      },
      "4992": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          23726,
          23736
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "4993": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4995": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "4997": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "4999": {
        "op": "SHL"
      },
      "5000": {
        "op": "SUB"
      },
      "5001": {
        "offset": [
          23726,
          23736
        ],
        "op": "AND",
        "path": "23"
      },
      "5002": {
        "offset": [
          23712,
          23722
        ],
        "op": "CALLER",
        "path": "23"
      },
      "5003": {
        "offset": [
          23712,
          23736
        ],
        "op": "EQ",
        "path": "23"
      },
      "5004": {
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x13A7"
      },
      "5007": {
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "5008": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "5010": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          23704,
          23751
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "5011": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "5015": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "5017": {
        "op": "SHL"
      },
      "5018": {
        "offset": [
          23704,
          23751
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5019": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          23704,
          23751
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "5020": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "5022": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          23704,
          23751
        ],
        "op": "ADD",
        "path": "23"
      },
      "5023": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "5026": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          23704,
          23751
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5027": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B39"
      },
      "5030": {
        "fn": "SharpeAI.setSharpeKeeper",
        "jump": "i",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5031": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5032": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21921
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 65,
        "value": "0x8"
      },
      "5034": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "DUP1",
        "path": "23"
      },
      "5035": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "5036": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5038": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5040": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5042": {
        "op": "SHL"
      },
      "5043": {
        "op": "SUB"
      },
      "5044": {
        "op": "NOT"
      },
      "5045": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "AND",
        "path": "23"
      },
      "5046": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5048": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5050": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5052": {
        "op": "SHL"
      },
      "5053": {
        "op": "SUB"
      },
      "5054": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "5055": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5056": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "5057": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "AND",
        "path": "23"
      },
      "5058": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5059": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5060": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5061": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "OR",
        "path": "23"
      },
      "5062": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5063": {
        "fn": "SharpeAI.setSharpeKeeper",
        "offset": [
          21909,
          21937
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "5064": {
        "fn": "SharpeAI.setSharpeKeeper",
        "jump": "o",
        "offset": [
          21826,
          21945
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5065": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16423,
          16865
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5066": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16587,
          16596
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "5068": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16587,
          16596
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "5069": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16480,
          16494
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "5071": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16480,
          16494
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5072": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16480,
          16494
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5073": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16480,
          16494
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5074": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16480,
          16494
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5075": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16480,
          16494
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5076": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16480,
          16494
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5077": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16480,
          16494
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5078": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16568,
          16608
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x13F4"
      },
      "5081": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16568,
          16608
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5082": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5084": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5086": {
        "op": "SHL"
      },
      "5087": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16587,
          16596
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5088": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16587,
          16596
        ],
        "op": "DIV",
        "path": "23"
      },
      "5089": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16587,
          16596
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "5091": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16587,
          16596
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5092": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16587,
          16596
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5093": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16587,
          16596
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "5094": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16587,
          16596
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5095": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5097": {
        "op": "PUSH1",
        "value": "0xB8"
      },
      "5099": {
        "op": "SHL"
      },
      "5100": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16598,
          16607
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5101": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16598,
          16607
        ],
        "op": "DIV",
        "path": "23"
      },
      "5102": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16598,
          16607
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5103": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16598,
          16607
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "5104": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16568,
          16586
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x110E"
      },
      "5107": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "i",
        "offset": [
          16568,
          16608
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5108": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16568,
          16608
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5109": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16698,
          16708
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "5111": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16698,
          16708
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "5112": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16523,
          16608
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5113": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16523,
          16608
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "5114": {
        "op": "POP"
      },
      "5115": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16523,
          16608
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5116": {
        "op": "POP"
      },
      "5117": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16620,
          16640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "5119": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16620,
          16640
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5120": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16620,
          16640
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5121": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16620,
          16640
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5122": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16679,
          16721
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1420"
      },
      "5125": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16679,
          16721
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5126": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5128": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "5130": {
        "op": "SHL"
      },
      "5131": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16698,
          16708
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5132": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16698,
          16708
        ],
        "op": "DIV",
        "path": "23"
      },
      "5133": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16698,
          16708
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "5135": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16698,
          16708
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5136": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16698,
          16708
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5137": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16698,
          16708
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "5138": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16698,
          16708
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5139": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5141": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "5143": {
        "op": "SHL"
      },
      "5144": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16710,
          16720
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5145": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16710,
          16720
        ],
        "op": "DIV",
        "path": "23"
      },
      "5146": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16710,
          16720
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5147": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16710,
          16720
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "5148": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16679,
          16697
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x110E"
      },
      "5151": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "i",
        "offset": [
          16679,
          16721
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5152": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16679,
          16721
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5153": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16619,
          16721
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5154": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16619,
          16721
        ],
        "op": "POP",
        "path": "23"
      },
      "5155": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16619,
          16721
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5156": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16619,
          16721
        ],
        "op": "POP",
        "path": "23"
      },
      "5157": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16741,
          16789
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 66,
        "value": "0x143A"
      },
      "5160": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16776,
          16788
        ],
        "op": "DUP3",
        "path": "23"
      },
      "5161": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16741,
          16771
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1434"
      },
      "5164": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16759,
          16770
        ],
        "op": "DUP7",
        "path": "23"
      },
      "5165": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16741,
          16754
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1434"
      },
      "5168": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16741,
          16752
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xB18"
      },
      "5171": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "i",
        "offset": [
          16741,
          16754
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5172": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16741,
          16754
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5173": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16741,
          16758
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5174": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16741,
          16758
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24DE"
      },
      "5177": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "i",
        "offset": [
          16741,
          16771
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5178": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16741,
          16789
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5179": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16732,
          16789
        ],
        "op": "SWAP6",
        "path": "23"
      },
      "5180": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16732,
          16789
        ],
        "op": "POP",
        "path": "23"
      },
      "5181": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16809,
          16857
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 67,
        "value": "0x144C"
      },
      "5184": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16844,
          16856
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5185": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16809,
          16839
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1434"
      },
      "5188": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16827,
          16838
        ],
        "op": "DUP6",
        "path": "23"
      },
      "5189": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16809,
          16822
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1434"
      },
      "5192": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16809,
          16820
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xA4A"
      },
      "5195": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "i",
        "offset": [
          16809,
          16822
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5196": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16809,
          16857
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5197": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16800,
          16857
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "5198": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16800,
          16857
        ],
        "op": "POP",
        "path": "23"
      },
      "5199": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16423,
          16865
        ],
        "op": "POP",
        "path": "23"
      },
      "5200": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16423,
          16865
        ],
        "op": "POP",
        "path": "23"
      },
      "5201": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16423,
          16865
        ],
        "op": "POP",
        "path": "23"
      },
      "5202": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16423,
          16865
        ],
        "op": "POP",
        "path": "23"
      },
      "5203": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16423,
          16865
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5204": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          16423,
          16865
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5205": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "o",
        "offset": [
          16423,
          16865
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5206": {
        "offset": [
          2566,
          2600
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5207": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          2566,
          2600
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "5240": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          2566,
          2600
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5241": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "o",
        "offset": [
          2566,
          2600
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5242": {
        "offset": [
          2529,
          2559
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5243": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          2529,
          2559
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "5276": {
        "fn": "SharpeAI.getTotalAmounts",
        "offset": [
          2529,
          2559
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5277": {
        "fn": "SharpeAI.getTotalAmounts",
        "jump": "o",
        "offset": [
          2529,
          2559
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5278": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5279": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8629,
          8644
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "5281": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8646,
          8661
        ],
        "op": "DUP1",
        "path": "23"
      },
      "5282": {
        "offset": [
          1744,
          1745
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "5284": {
        "offset": [
          2325,
          2332
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x5"
      },
      "5286": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2325,
          2332
        ],
        "op": "SLOAD",
        "path": "0"
      },
      "5287": {
        "offset": [
          2325,
          2344
        ],
        "op": "EQ",
        "path": "0"
      },
      "5288": {
        "branch": 298,
        "fn": "SharpeAI.withdraw",
        "offset": [
          2325,
          2344
        ],
        "op": "ISZERO",
        "path": "0"
      },
      "5289": {
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x14C4"
      },
      "5292": {
        "branch": 298,
        "offset": [
          2317,
          2380
        ],
        "op": "JUMPI",
        "path": "0"
      },
      "5293": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x40"
      },
      "5295": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2317,
          2380
        ],
        "op": "MLOAD",
        "path": "0"
      },
      "5296": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "5300": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "5302": {
        "op": "SHL"
      },
      "5303": {
        "offset": [
          2317,
          2380
        ],
        "op": "DUP2",
        "path": "0"
      },
      "5304": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2317,
          2380
        ],
        "op": "MSTORE",
        "path": "0"
      },
      "5305": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x4"
      },
      "5307": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2317,
          2380
        ],
        "op": "ADD",
        "path": "0"
      },
      "5308": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x542"
      },
      "5311": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2317,
          2380
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "5312": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2317,
          2380
        ],
        "op": "PUSH2",
        "path": "0",
        "value": "0x3DAC"
      },
      "5315": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          2317,
          2380
        ],
        "op": "JUMP",
        "path": "0"
      },
      "5316": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2317,
          2380
        ],
        "op": "JUMPDEST",
        "path": "0"
      },
      "5317": {
        "offset": [
          1744,
          1745
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x2"
      },
      "5319": {
        "offset": [
          2455,
          2462
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x5"
      },
      "5321": {
        "offset": [
          2455,
          2473
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "5322": {
        "branch": 237,
        "fn": "SharpeAI.withdraw",
        "offset": [
          8682,
          8692
        ],
        "op": "DUP6",
        "path": "23",
        "statement": 68
      },
      "5323": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x14E6"
      },
      "5326": {
        "branch": 237,
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "5327": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "5329": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "5330": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "5334": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "5336": {
        "op": "SHL"
      },
      "5337": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5338": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "5339": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "5341": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "ADD",
        "path": "23"
      },
      "5342": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "5345": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5346": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B5D"
      },
      "5349": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          8674,
          8703
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5350": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8674,
          8703
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5351": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5353": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5355": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5357": {
        "op": "SHL"
      },
      "5358": {
        "op": "SUB"
      },
      "5359": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8722,
          8738
        ],
        "op": "DUP4",
        "path": "23",
        "statement": 69
      },
      "5360": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8722,
          8738
        ],
        "op": "AND",
        "path": "23"
      },
      "5361": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8722,
          8738
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "5362": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8722,
          8738
        ],
        "op": "DUP1",
        "path": "23"
      },
      "5363": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8722,
          8738
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "5364": {
        "branch": 238,
        "fn": "SharpeAI.withdraw",
        "offset": [
          8722,
          8738
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5365": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8722,
          8761
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1507"
      },
      "5368": {
        "branch": 238,
        "fn": "SharpeAI.withdraw",
        "offset": [
          8722,
          8761
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "5369": {
        "op": "POP"
      },
      "5370": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5372": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5374": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5376": {
        "op": "SHL"
      },
      "5377": {
        "op": "SUB"
      },
      "5378": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8742,
          8761
        ],
        "op": "DUP4",
        "path": "23"
      },
      "5379": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8742,
          8761
        ],
        "op": "AND",
        "path": "23"
      },
      "5380": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8756,
          8760
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "5381": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8742,
          8761
        ],
        "op": "EQ",
        "path": "23"
      },
      "5382": {
        "branch": 239,
        "fn": "SharpeAI.withdraw",
        "offset": [
          8742,
          8761
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "5383": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8722,
          8761
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5384": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1523"
      },
      "5387": {
        "branch": 239,
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "5388": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "5390": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "5391": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "5395": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "5397": {
        "op": "SHL"
      },
      "5398": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5399": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "5400": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "5402": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "ADD",
        "path": "23"
      },
      "5403": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "5406": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5407": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x388F"
      },
      "5410": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          8714,
          8768
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5411": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8714,
          8768
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5412": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8779,
          8798
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "5414": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8801,
          8814
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x152D"
      },
      "5417": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8801,
          8812
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x6FF"
      },
      "5420": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          8801,
          8814
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5421": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8801,
          8814
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5422": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8779,
          8814
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5423": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8779,
          8814
        ],
        "op": "POP",
        "path": "23"
      },
      "5424": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8851,
          8876
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 70,
        "value": "0x1539"
      },
      "5427": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8857,
          8867
        ],
        "op": "CALLER",
        "path": "23"
      },
      "5428": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8869,
          8875
        ],
        "op": "DUP9",
        "path": "23"
      },
      "5429": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8851,
          8856
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24EA"
      },
      "5432": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          8851,
          8876
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5433": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8851,
          8876
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5434": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8957,
          8978
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "5436": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8981,
          9023
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1551"
      },
      "5439": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9011,
          9022
        ],
        "op": "DUP3",
        "path": "23"
      },
      "5440": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8981,
          9006
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "5443": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8999,
          9005
        ],
        "op": "DUP11",
        "path": "23"
      },
      "5444": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8981,
          8994
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x154B"
      },
      "5447": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8981,
          8992
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xB18"
      },
      "5450": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          8981,
          8994
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5451": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8981,
          8994
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5452": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8981,
          8998
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5453": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8981,
          8998
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "5456": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          8981,
          9006
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5457": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8981,
          9023
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5458": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8957,
          9023
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5459": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8957,
          9023
        ],
        "op": "POP",
        "path": "23"
      },
      "5460": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9034,
          9055
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "5462": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9058,
          9100
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1565"
      },
      "5465": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9088,
          9099
        ],
        "op": "DUP4",
        "path": "23"
      },
      "5466": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9058,
          9083
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "5469": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9076,
          9082
        ],
        "op": "DUP12",
        "path": "23"
      },
      "5470": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9058,
          9071
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x154B"
      },
      "5473": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9058,
          9069
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0xA4A"
      },
      "5476": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          9058,
          9071
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5477": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9058,
          9100
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5478": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9254,
          9263
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "5480": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9254,
          9263
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "5481": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9034,
          9100
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5482": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9034,
          9100
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5483": {
        "op": "POP"
      },
      "5484": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9177,
          9196
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "5486": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9177,
          9196
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5487": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9177,
          9196
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5488": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9177,
          9196
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5489": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9234,
          9296
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1591"
      },
      "5492": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9234,
          9296
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5493": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5495": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5497": {
        "op": "SHL"
      },
      "5498": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9254,
          9263
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5499": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9254,
          9263
        ],
        "op": "DIV",
        "path": "23"
      },
      "5500": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9254,
          9263
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "5502": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9254,
          9263
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5503": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9254,
          9263
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5504": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9254,
          9263
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "5505": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9254,
          9263
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5506": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5508": {
        "op": "PUSH1",
        "value": "0xB8"
      },
      "5510": {
        "op": "SHL"
      },
      "5511": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9265,
          9274
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5512": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9265,
          9274
        ],
        "op": "DIV",
        "path": "23"
      },
      "5513": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9265,
          9274
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5514": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9265,
          9274
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "5515": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9276,
          9282
        ],
        "op": "DUP14",
        "path": "23"
      },
      "5516": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9284,
          9295
        ],
        "op": "DUP9",
        "path": "23"
      },
      "5517": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9234,
          9253
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x25DB"
      },
      "5520": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          9234,
          9296
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5521": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9234,
          9296
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5522": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9387,
          9397
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "5524": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9387,
          9397
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "5525": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9176,
          9296
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5526": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9176,
          9296
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "5527": {
        "op": "POP"
      },
      "5528": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9176,
          9296
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5529": {
        "op": "POP"
      },
      "5530": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9308,
          9328
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "5532": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9308,
          9328
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5533": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9308,
          9328
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5534": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9308,
          9328
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5535": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9367,
          9431
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x15BF"
      },
      "5538": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9367,
          9431
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5539": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5541": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "5543": {
        "op": "SHL"
      },
      "5544": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9387,
          9397
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5545": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9387,
          9397
        ],
        "op": "DIV",
        "path": "23"
      },
      "5546": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9387,
          9397
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "5548": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9387,
          9397
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5549": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9387,
          9397
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5550": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9387,
          9397
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "5551": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9387,
          9397
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5552": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5554": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "5556": {
        "op": "SHL"
      },
      "5557": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9399,
          9409
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5558": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9399,
          9409
        ],
        "op": "DIV",
        "path": "23"
      },
      "5559": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9399,
          9409
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5560": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9399,
          9409
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "5561": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9411,
          9417
        ],
        "op": "DUP16",
        "path": "23"
      },
      "5562": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9419,
          9430
        ],
        "op": "DUP11",
        "path": "23"
      },
      "5563": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9367,
          9386
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x25DB"
      },
      "5566": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          9367,
          9431
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5567": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9367,
          9431
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5568": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9307,
          9431
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5569": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9307,
          9431
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "5570": {
        "op": "POP"
      },
      "5571": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9307,
          9431
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5572": {
        "op": "POP"
      },
      "5573": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9505,
          9553
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 71,
        "value": "0x15D2"
      },
      "5576": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9307,
          9431
        ],
        "op": "DUP3",
        "path": "23"
      },
      "5577": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9505,
          9535
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1434"
      },
      "5580": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9505,
          9518
        ],
        "op": "DUP9",
        "path": "23"
      },
      "5581": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9523,
          9534
        ],
        "op": "DUP8",
        "path": "23"
      },
      "5582": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9505,
          9522
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24DE"
      },
      "5585": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          9505,
          9535
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5586": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9505,
          9553
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5587": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9495,
          9553
        ],
        "op": "SWAP9",
        "path": "23"
      },
      "5588": {
        "op": "POP"
      },
      "5589": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9574,
          9622
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 72,
        "value": "0x15E2"
      },
      "5592": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9609,
          9621
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5593": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9574,
          9604
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1434"
      },
      "5596": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9574,
          9587
        ],
        "op": "DUP8",
        "path": "23"
      },
      "5597": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9592,
          9603
        ],
        "op": "DUP7",
        "path": "23"
      },
      "5598": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9574,
          9591
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24DE"
      },
      "5601": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          9574,
          9604
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5602": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9574,
          9622
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5603": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9564,
          9622
        ],
        "op": "SWAP8",
        "path": "23"
      },
      "5604": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9564,
          9622
        ],
        "op": "POP",
        "path": "23"
      },
      "5605": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9652,
          9662
        ],
        "op": "DUP12",
        "path": "23",
        "statement": 73
      },
      "5606": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9641,
          9648
        ],
        "op": "DUP10",
        "path": "23"
      },
      "5607": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9641,
          9662
        ],
        "op": "LT",
        "path": "23"
      },
      "5608": {
        "branch": 240,
        "fn": "SharpeAI.withdraw",
        "offset": [
          9641,
          9662
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "5609": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1604"
      },
      "5612": {
        "branch": 240,
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "5613": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "5615": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "5616": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "5620": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "5622": {
        "op": "SHL"
      },
      "5623": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5624": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "5625": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "5627": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "ADD",
        "path": "23"
      },
      "5628": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "5631": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5632": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3829"
      },
      "5635": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          9633,
          9677
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5636": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9633,
          9677
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5637": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9707,
          9717
        ],
        "op": "DUP11",
        "path": "23",
        "statement": 74
      },
      "5638": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9696,
          9703
        ],
        "op": "DUP9",
        "path": "23"
      },
      "5639": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9696,
          9717
        ],
        "op": "LT",
        "path": "23"
      },
      "5640": {
        "branch": 241,
        "fn": "SharpeAI.withdraw",
        "offset": [
          9696,
          9717
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "5641": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1624"
      },
      "5644": {
        "branch": 241,
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "5645": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "5647": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "5648": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "5652": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "5654": {
        "op": "SHL"
      },
      "5655": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "DUP2",
        "path": "23"
      },
      "5656": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "5657": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "5659": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "ADD",
        "path": "23"
      },
      "5660": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "5663": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5664": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3C22"
      },
      "5667": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          9688,
          9732
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5668": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9688,
          9732
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5669": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9786,
          9797
        ],
        "op": "DUP9",
        "path": "23"
      },
      "5670": {
        "branch": 242,
        "fn": "SharpeAI.withdraw",
        "offset": [
          9786,
          9797
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "5671": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9782,
          9831
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x165E"
      },
      "5674": {
        "branch": 242,
        "fn": "SharpeAI.withdraw",
        "offset": [
          9782,
          9831
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "5675": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9799,
          9831
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 75,
        "value": "0x165E"
      },
      "5678": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5680": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5682": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5684": {
        "op": "SHL"
      },
      "5685": {
        "op": "SUB"
      },
      "5686": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9799,
          9805
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "5719": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9799,
          9818
        ],
        "op": "AND",
        "path": "23"
      },
      "5720": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9819,
          9821
        ],
        "op": "DUP12",
        "path": "23"
      },
      "5721": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9823,
          9830
        ],
        "op": "DUP12",
        "path": "23"
      },
      "5722": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9799,
          9818
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1987"
      },
      "5725": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          9799,
          9831
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5726": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9799,
          9831
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5727": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9846,
          9857
        ],
        "op": "DUP8",
        "path": "23"
      },
      "5728": {
        "branch": 243,
        "fn": "SharpeAI.withdraw",
        "offset": [
          9846,
          9857
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "5729": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9842,
          9891
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1698"
      },
      "5732": {
        "branch": 243,
        "fn": "SharpeAI.withdraw",
        "offset": [
          9842,
          9891
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "5733": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9859,
          9891
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 76,
        "value": "0x1698"
      },
      "5736": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5738": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5740": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5742": {
        "op": "SHL"
      },
      "5743": {
        "op": "SUB"
      },
      "5744": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9859,
          9865
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "5777": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9859,
          9878
        ],
        "op": "AND",
        "path": "23"
      },
      "5778": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9879,
          9881
        ],
        "op": "DUP12",
        "path": "23"
      },
      "5779": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9883,
          9890
        ],
        "op": "DUP11",
        "path": "23"
      },
      "5780": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9859,
          9878
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1987"
      },
      "5783": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          9859,
          9891
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5784": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9859,
          9891
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5785": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9930,
          9932
        ],
        "op": "DUP10",
        "path": "23",
        "statement": 77
      },
      "5786": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5788": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5790": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5792": {
        "op": "SHL"
      },
      "5793": {
        "op": "SUB"
      },
      "5794": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "AND",
        "path": "23"
      },
      "5795": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9918,
          9928
        ],
        "op": "CALLER",
        "path": "23"
      },
      "5796": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5798": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5800": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5802": {
        "op": "SHL"
      },
      "5803": {
        "op": "SUB"
      },
      "5804": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "AND",
        "path": "23"
      },
      "5805": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0xEBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F"
      },
      "5838": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9934,
          9940
        ],
        "op": "DUP16",
        "path": "23"
      },
      "5839": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9942,
          9949
        ],
        "op": "DUP13",
        "path": "23"
      },
      "5840": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9951,
          9958
        ],
        "op": "DUP13",
        "path": "23"
      },
      "5841": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "5843": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "5844": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x16DF"
      },
      "5847": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "5848": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "5849": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5850": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5851": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3E6D"
      },
      "5854": {
        "fn": "SharpeAI.withdraw",
        "jump": "i",
        "offset": [
          9909,
          9959
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5855": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5856": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "5858": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "5859": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "DUP1",
        "path": "23"
      },
      "5860": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "5861": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "SUB",
        "path": "23"
      },
      "5862": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "5863": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          9909,
          9959
        ],
        "op": "LOG3",
        "path": "23"
      },
      "5864": {
        "offset": [
          2484,
          2485
        ],
        "op": "POP",
        "path": "0"
      },
      "5865": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2484,
          2485
        ],
        "op": "POP",
        "path": "0"
      },
      "5866": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2484,
          2485
        ],
        "op": "POP",
        "path": "0"
      },
      "5867": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2484,
          2485
        ],
        "op": "POP",
        "path": "0"
      },
      "5868": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2484,
          2485
        ],
        "op": "POP",
        "path": "0"
      },
      "5869": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2484,
          2485
        ],
        "op": "POP",
        "path": "0"
      },
      "5870": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2484,
          2485
        ],
        "op": "POP",
        "path": "0"
      },
      "5871": {
        "offset": [
          1701,
          1702
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x1"
      },
      "5873": {
        "offset": [
          2628,
          2635
        ],
        "op": "PUSH1",
        "path": "0",
        "value": "0x5"
      },
      "5875": {
        "offset": [
          2628,
          2650
        ],
        "op": "DUP2",
        "path": "0"
      },
      "5876": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2628,
          2650
        ],
        "op": "SWAP1",
        "path": "0"
      },
      "5877": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2628,
          2650
        ],
        "op": "SSTORE",
        "path": "0"
      },
      "5878": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          2628,
          2650
        ],
        "op": "POP",
        "path": "0"
      },
      "5879": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "5880": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "POP",
        "path": "23"
      },
      "5881": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "5882": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "5883": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "POP",
        "path": "23"
      },
      "5884": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "POP",
        "path": "23"
      },
      "5885": {
        "fn": "SharpeAI.withdraw",
        "offset": [
          8460,
          9967
        ],
        "op": "POP",
        "path": "23"
      },
      "5886": {
        "fn": "SharpeAI.withdraw",
        "jump": "o",
        "offset": [
          8460,
          9967
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5887": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5888": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20240,
          20250
        ],
        "op": "CALLER",
        "path": "23",
        "statement": 78
      },
      "5889": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5891": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5893": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5895": {
        "op": "SHL"
      },
      "5896": {
        "op": "SUB"
      },
      "5897": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20262,
          20266
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "5930": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20240,
          20267
        ],
        "op": "AND",
        "path": "23"
      },
      "5931": {
        "branch": 244,
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20240,
          20267
        ],
        "op": "EQ",
        "path": "23"
      },
      "5932": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20232,
          20268
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1734"
      },
      "5935": {
        "branch": 244,
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20232,
          20268
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "5936": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20232,
          20268
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "5938": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20232,
          20268
        ],
        "op": "DUP1",
        "path": "23"
      },
      "5939": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20232,
          20268
        ],
        "op": "REVERT",
        "path": "23"
      },
      "5940": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20232,
          20268
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5941": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20283,
          20294
        ],
        "op": "DUP4",
        "path": "23"
      },
      "5942": {
        "branch": 245,
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20283,
          20294
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "5943": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20279,
          20336
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x176E"
      },
      "5946": {
        "branch": 245,
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20279,
          20336
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "5947": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20296,
          20336
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 79,
        "value": "0x176E"
      },
      "5950": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5952": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "5954": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "5956": {
        "op": "SHL"
      },
      "5957": {
        "op": "SUB"
      },
      "5958": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20296,
          20302
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "5991": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20296,
          20315
        ],
        "op": "AND",
        "path": "23"
      },
      "5992": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20316,
          20326
        ],
        "op": "CALLER",
        "path": "23"
      },
      "5993": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20328,
          20335
        ],
        "op": "DUP7",
        "path": "23"
      },
      "5994": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20296,
          20315
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1987"
      },
      "5997": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "jump": "i",
        "offset": [
          20296,
          20336
        ],
        "op": "JUMP",
        "path": "23"
      },
      "5998": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20296,
          20336
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "5999": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20351,
          20362
        ],
        "op": "DUP3",
        "path": "23"
      },
      "6000": {
        "branch": 246,
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20351,
          20362
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "6001": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20347,
          20404
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x17A8"
      },
      "6004": {
        "branch": 246,
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20347,
          20404
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "6005": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20364,
          20404
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 80,
        "value": "0x17A8"
      },
      "6008": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6010": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6012": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6014": {
        "op": "SHL"
      },
      "6015": {
        "op": "SUB"
      },
      "6016": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20364,
          20370
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "6049": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20364,
          20383
        ],
        "op": "AND",
        "path": "23"
      },
      "6050": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20384,
          20394
        ],
        "op": "CALLER",
        "path": "23"
      },
      "6051": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20396,
          20403
        ],
        "op": "DUP6",
        "path": "23"
      },
      "6052": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20364,
          20383
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1987"
      },
      "6055": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "jump": "i",
        "offset": [
          20364,
          20404
        ],
        "op": "JUMP",
        "path": "23"
      },
      "6056": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20364,
          20404
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6057": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "POP",
        "path": "23"
      },
      "6058": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "POP",
        "path": "23"
      },
      "6059": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "POP",
        "path": "23"
      },
      "6060": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "offset": [
          20083,
          20412
        ],
        "op": "POP",
        "path": "23"
      },
      "6061": {
        "fn": "SharpeAI.uniswapV3MintCallback",
        "jump": "o",
        "offset": [
          20083,
          20412
        ],
        "op": "JUMP",
        "path": "23"
      },
      "6062": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21405,
          21632
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6063": {
        "offset": [
          23726,
          23736
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x9"
      },
      "6065": {
        "fn": "SharpeAI.sweep",
        "offset": [
          23726,
          23736
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "6066": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6068": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6070": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6072": {
        "op": "SHL"
      },
      "6073": {
        "op": "SUB"
      },
      "6074": {
        "offset": [
          23726,
          23736
        ],
        "op": "AND",
        "path": "23"
      },
      "6075": {
        "offset": [
          23712,
          23722
        ],
        "op": "CALLER",
        "path": "23"
      },
      "6076": {
        "offset": [
          23712,
          23736
        ],
        "op": "EQ",
        "path": "23"
      },
      "6077": {
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x17D8"
      },
      "6080": {
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "6081": {
        "fn": "SharpeAI.sweep",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "6083": {
        "fn": "SharpeAI.sweep",
        "offset": [
          23704,
          23751
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "6084": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "6088": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "6090": {
        "op": "SHL"
      },
      "6091": {
        "offset": [
          23704,
          23751
        ],
        "op": "DUP2",
        "path": "23"
      },
      "6092": {
        "fn": "SharpeAI.sweep",
        "offset": [
          23704,
          23751
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "6093": {
        "fn": "SharpeAI.sweep",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "6095": {
        "fn": "SharpeAI.sweep",
        "offset": [
          23704,
          23751
        ],
        "op": "ADD",
        "path": "23"
      },
      "6096": {
        "fn": "SharpeAI.sweep",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "6099": {
        "fn": "SharpeAI.sweep",
        "offset": [
          23704,
          23751
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "6100": {
        "fn": "SharpeAI.sweep",
        "offset": [
          23704,
          23751
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3B39"
      },
      "6103": {
        "fn": "SharpeAI.sweep",
        "jump": "i",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMP",
        "path": "23"
      },
      "6104": {
        "fn": "SharpeAI.sweep",
        "offset": [
          23704,
          23751
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6105": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21548,
          21554
        ],
        "op": "PUSH32",
        "path": "23",
        "statement": 81,
        "value": "0x0"
      },
      "6138": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6140": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6142": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6144": {
        "op": "SHL"
      },
      "6145": {
        "op": "SUB"
      },
      "6146": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21554
        ],
        "op": "AND",
        "path": "23"
      },
      "6147": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21544
        ],
        "op": "DUP4",
        "path": "23"
      },
      "6148": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6150": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6152": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6154": {
        "op": "SHL"
      },
      "6155": {
        "op": "SUB"
      },
      "6156": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21554
        ],
        "op": "AND",
        "path": "23"
      },
      "6157": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21554
        ],
        "op": "EQ",
        "path": "23"
      },
      "6158": {
        "branch": 247,
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21554
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "6159": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21573
        ],
        "op": "DUP1",
        "path": "23"
      },
      "6160": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21573
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "6161": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21573
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x184C"
      },
      "6164": {
        "branch": 247,
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21573
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "6165": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21573
        ],
        "op": "POP",
        "path": "23"
      },
      "6166": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21567,
          21573
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "6199": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6201": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6203": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6205": {
        "op": "SHL"
      },
      "6206": {
        "op": "SUB"
      },
      "6207": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21558,
          21573
        ],
        "op": "AND",
        "path": "23"
      },
      "6208": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21558,
          21563
        ],
        "op": "DUP4",
        "path": "23"
      },
      "6209": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6211": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6213": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6215": {
        "op": "SHL"
      },
      "6216": {
        "op": "SUB"
      },
      "6217": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21558,
          21573
        ],
        "op": "AND",
        "path": "23"
      },
      "6218": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21558,
          21573
        ],
        "op": "EQ",
        "path": "23"
      },
      "6219": {
        "branch": 248,
        "fn": "SharpeAI.sweep",
        "offset": [
          21558,
          21573
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "6220": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21539,
          21573
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6221": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1868"
      },
      "6224": {
        "branch": 248,
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "6225": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "6227": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "6228": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "6232": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "6234": {
        "op": "SHL"
      },
      "6235": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "DUP2",
        "path": "23"
      },
      "6236": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "6237": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "6239": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "ADD",
        "path": "23"
      },
      "6240": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "6243": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "6244": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3AF4"
      },
      "6247": {
        "fn": "SharpeAI.sweep",
        "jump": "i",
        "offset": [
          21531,
          21583
        ],
        "op": "JUMP",
        "path": "23"
      },
      "6248": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21531,
          21583
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6249": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21594,
          21624
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 82,
        "value": "0x5DF"
      },
      "6252": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6254": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6256": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6258": {
        "op": "SHL"
      },
      "6259": {
        "op": "SUB"
      },
      "6260": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21594,
          21612
        ],
        "op": "DUP5",
        "path": "23"
      },
      "6261": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21594,
          21612
        ],
        "op": "AND",
        "path": "23"
      },
      "6262": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21613,
          21615
        ],
        "op": "DUP3",
        "path": "23"
      },
      "6263": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21617,
          21623
        ],
        "op": "DUP5",
        "path": "23"
      },
      "6264": {
        "fn": "SharpeAI.sweep",
        "offset": [
          21594,
          21612
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1987"
      },
      "6267": {
        "fn": "SharpeAI.sweep",
        "jump": "i",
        "offset": [
          21594,
          21624
        ],
        "op": "JUMP",
        "path": "23"
      },
      "6268": {
        "fn": "ERC20.allowance",
        "offset": [
          3976,
          4125
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6269": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6271": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6273": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6275": {
        "op": "SHL"
      },
      "6276": {
        "op": "SUB"
      },
      "6277": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "SWAP2",
        "path": "1",
        "statement": 83
      },
      "6278": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6279": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "AND",
        "path": "1"
      },
      "6280": {
        "fn": "ERC20.allowance",
        "offset": [
          4065,
          4072
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6282": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6283": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6284": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6285": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4102
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "6287": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "6289": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6290": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6291": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6292": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6294": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6295": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6296": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4109
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "6297": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "SWAP4",
        "path": "1"
      },
      "6298": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6299": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "6300": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "AND",
        "path": "1"
      },
      "6301": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "DUP3",
        "path": "1"
      },
      "6302": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6303": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6304": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6305": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6306": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6307": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "6308": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "6309": {
        "fn": "ERC20.allowance",
        "offset": [
          4091,
          4118
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6310": {
        "fn": "ERC20.allowance",
        "jump": "o",
        "offset": [
          3976,
          4125
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6311": {
        "offset": [
          2903,
          2938
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6312": {
        "fn": "ERC20.allowance",
        "offset": [
          2903,
          2938
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xB"
      },
      "6314": {
        "fn": "ERC20.allowance",
        "offset": [
          2903,
          2938
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "6315": {
        "fn": "ERC20.allowance",
        "offset": [
          2903,
          2938
        ],
        "op": "DUP2",
        "path": "23"
      },
      "6316": {
        "fn": "ERC20.allowance",
        "jump": "o",
        "offset": [
          2903,
          2938
        ],
        "op": "JUMP",
        "path": "23"
      },
      "6317": {
        "offset": [
          2744,
          2776
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6318": {
        "fn": "ERC20.allowance",
        "offset": [
          2744,
          2776
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "6320": {
        "fn": "ERC20.allowance",
        "offset": [
          2744,
          2776
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "6321": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6323": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6325": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6327": {
        "op": "SHL"
      },
      "6328": {
        "op": "SUB"
      },
      "6329": {
        "offset": [
          2744,
          2776
        ],
        "op": "AND",
        "path": "23"
      },
      "6330": {
        "fn": "ERC20.allowance",
        "offset": [
          2744,
          2776
        ],
        "op": "DUP2",
        "path": "23"
      },
      "6331": {
        "fn": "ERC20.allowance",
        "jump": "o",
        "offset": [
          2744,
          2776
        ],
        "op": "JUMP",
        "path": "23"
      },
      "6332": {
        "offset": [
          2785,
          2807
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6333": {
        "fn": "ERC20.allowance",
        "offset": [
          2785,
          2807
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA"
      },
      "6335": {
        "fn": "ERC20.allowance",
        "offset": [
          2785,
          2807
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "6336": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6338": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6340": {
        "op": "SHL"
      },
      "6341": {
        "offset": [
          2785,
          2807
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "6342": {
        "fn": "ERC20.allowance",
        "offset": [
          2785,
          2807
        ],
        "op": "DIV",
        "path": "23"
      },
      "6343": {
        "fn": "ERC20.allowance",
        "offset": [
          2785,
          2807
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "6345": {
        "fn": "ERC20.allowance",
        "offset": [
          2785,
          2807
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "6346": {
        "fn": "ERC20.allowance",
        "offset": [
          2785,
          2807
        ],
        "op": "DUP2",
        "path": "23"
      },
      "6347": {
        "fn": "ERC20.allowance",
        "jump": "o",
        "offset": [
          2785,
          2807
        ],
        "op": "JUMP",
        "path": "23"
      },
      "6348": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20464,
          20839
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6349": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20629,
          20639
        ],
        "op": "CALLER",
        "path": "23",
        "statement": 84
      },
      "6350": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6352": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6354": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6356": {
        "op": "SHL"
      },
      "6357": {
        "op": "SUB"
      },
      "6358": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20651,
          20655
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "6391": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20629,
          20656
        ],
        "op": "AND",
        "path": "23"
      },
      "6392": {
        "branch": 249,
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20629,
          20656
        ],
        "op": "EQ",
        "path": "23"
      },
      "6393": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20621,
          20657
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1901"
      },
      "6396": {
        "branch": 249,
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20621,
          20657
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "6397": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20621,
          20657
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "6399": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20621,
          20657
        ],
        "op": "DUP1",
        "path": "23"
      },
      "6400": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20621,
          20657
        ],
        "op": "REVERT",
        "path": "23"
      },
      "6401": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20621,
          20657
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6402": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20687,
          20688
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "6404": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20672,
          20684
        ],
        "op": "DUP5",
        "path": "23"
      },
      "6405": {
        "branch": 250,
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20672,
          20688
        ],
        "op": "SGT",
        "path": "23"
      },
      "6406": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20668,
          20744
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "6407": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20668,
          20744
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x193E"
      },
      "6410": {
        "branch": 250,
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20668,
          20744
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "6411": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20690,
          20744
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 85,
        "value": "0x193E"
      },
      "6414": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6416": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6418": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6420": {
        "op": "SHL"
      },
      "6421": {
        "op": "SUB"
      },
      "6422": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20690,
          20696
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "6455": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20690,
          20709
        ],
        "op": "AND",
        "path": "23"
      },
      "6456": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20710,
          20720
        ],
        "op": "CALLER",
        "path": "23"
      },
      "6457": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20730,
          20742
        ],
        "op": "DUP7",
        "path": "23"
      },
      "6458": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20690,
          20709
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1987"
      },
      "6461": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "jump": "i",
        "offset": [
          20690,
          20744
        ],
        "op": "JUMP",
        "path": "23"
      },
      "6462": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20690,
          20744
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "6463": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20774,
          20775
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "6465": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20759,
          20771
        ],
        "op": "DUP4",
        "path": "23"
      },
      "6466": {
        "branch": 251,
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20759,
          20775
        ],
        "op": "SGT",
        "path": "23"
      },
      "6467": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20755,
          20831
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "6468": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20755,
          20831
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x17A8"
      },
      "6471": {
        "branch": 251,
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20755,
          20831
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "6472": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20777,
          20831
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 86,
        "value": "0x17A8"
      },
      "6475": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6477": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6479": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6481": {
        "op": "SHL"
      },
      "6482": {
        "op": "SUB"
      },
      "6483": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20777,
          20783
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "6516": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20777,
          20796
        ],
        "op": "AND",
        "path": "23"
      },
      "6517": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20797,
          20807
        ],
        "op": "CALLER",
        "path": "23"
      },
      "6518": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20817,
          20829
        ],
        "op": "DUP6",
        "path": "23"
      },
      "6519": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "offset": [
          20777,
          20796
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1987"
      },
      "6522": {
        "fn": "SharpeAI.uniswapV3SwapCallback",
        "jump": "i",
        "offset": [
          20777,
          20831
        ],
        "op": "JUMP",
        "path": "23"
      },
      "6523": {
        "fn": "SafeMath.sub",
        "offset": [
          3108,
          3204
        ],
        "op": "JUMPDEST",
        "path": "8"
      },
      "6524": {
        "fn": "SafeMath.sub",
        "offset": [
          3166,
          3173
        ],
        "op": "PUSH1",
        "path": "8",
        "value": "0x0"
      },
      "6526": {
        "fn": "SafeMath.sub",
        "offset": [
          3192,
          3197
        ],
        "op": "PUSH2",
        "path": "8",
        "statement": 87,
        "value": "0x76C"
      },
      "6529": {
        "fn": "SafeMath.sub",
        "offset": [
          3196,
          3197
        ],
        "op": "DUP3",
        "path": "8"
      },
      "6530": {
        "fn": "SafeMath.sub",
        "offset": [
          3192,
          3193
        ],
        "op": "DUP5",
        "path": "8"
      },
      "6531": {
        "fn": "SafeMath.sub",
        "offset": [
          3192,
          3197
        ],
        "op": "PUSH2",
        "path": "8",
        "value": "0x3F1F"
      },
      "6534": {
        "fn": "SafeMath.sub",
        "jump": "i",
        "offset": [
          3192,
          3197
        ],
        "op": "JUMP",
        "path": "8"
      },
      "6535": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          701,
          906
        ],
        "op": "JUMPDEST",
        "path": "4"
      },
      "6536": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          813,
          899
        ],
        "op": "PUSH2",
        "path": "4",
        "statement": 88,
        "value": "0x5DF"
      },
      "6539": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          833,
          838
        ],
        "op": "DUP4",
        "path": "4"
      },
      "6540": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          863,
          886
        ],
        "op": "PUSH4",
        "path": "4",
        "value": "0xA9059CBB"
      },
      "6545": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          863,
          886
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0xE0"
      },
      "6547": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          863,
          886
        ],
        "op": "SHL",
        "path": "4"
      },
      "6548": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          888,
          890
        ],
        "op": "DUP5",
        "path": "4"
      },
      "6549": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          892,
          897
        ],
        "op": "DUP5",
        "path": "4"
      },
      "6550": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x40"
      },
      "6552": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "MLOAD",
        "path": "4"
      },
      "6553": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x24"
      },
      "6555": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "ADD",
        "path": "4"
      },
      "6556": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x19A6"
      },
      "6559": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP3",
        "path": "4"
      },
      "6560": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP2",
        "path": "4"
      },
      "6561": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "6562": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x3732"
      },
      "6565": {
        "fn": "SafeERC20.safeTransfer",
        "jump": "i",
        "offset": [
          840,
          898
        ],
        "op": "JUMP",
        "path": "4"
      },
      "6566": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "JUMPDEST",
        "path": "4"
      },
      "6567": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x40"
      },
      "6569": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "DUP1",
        "path": "4"
      },
      "6570": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "MLOAD",
        "path": "4"
      },
      "6571": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "6573": {
        "op": "NOT"
      },
      "6574": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "DUP2",
        "path": "4"
      },
      "6575": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "DUP5",
        "path": "4"
      },
      "6576": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SUB",
        "path": "4"
      },
      "6577": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "ADD",
        "path": "4"
      },
      "6578": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "DUP2",
        "path": "4"
      },
      "6579": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "MSTORE",
        "path": "4"
      },
      "6580": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP2",
        "path": "4"
      },
      "6581": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "6582": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "MSTORE",
        "path": "4"
      },
      "6583": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x20"
      },
      "6585": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "DUP2",
        "path": "4"
      },
      "6586": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "ADD",
        "path": "4"
      },
      "6587": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "DUP1",
        "path": "4"
      },
      "6588": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "MLOAD",
        "path": "4"
      },
      "6589": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6591": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6593": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "6595": {
        "op": "SHL"
      },
      "6596": {
        "op": "SUB"
      },
      "6597": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "AND",
        "path": "4"
      },
      "6598": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6600": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6602": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "6604": {
        "op": "SHL"
      },
      "6605": {
        "op": "SUB"
      },
      "6606": {
        "op": "NOT"
      },
      "6607": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "6608": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP4",
        "path": "4"
      },
      "6609": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "AND",
        "path": "4"
      },
      "6610": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP3",
        "path": "4"
      },
      "6611": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "6612": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP3",
        "path": "4"
      },
      "6613": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "OR",
        "path": "4"
      },
      "6614": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "6615": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "SWAP2",
        "path": "4"
      },
      "6616": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          840,
          898
        ],
        "op": "MSTORE",
        "path": "4"
      },
      "6617": {
        "fn": "SafeERC20.safeTransfer",
        "offset": [
          813,
          832
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x2681"
      },
      "6620": {
        "fn": "SafeERC20.safeTransfer",
        "jump": "i",
        "offset": [
          813,
          899
        ],
        "op": "JUMP",
        "path": "4"
      },
      "6621": {
        "fn": "Context._msgSender",
        "offset": [
          640,
          736
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "6622": {
        "fn": "Context._msgSender",
        "offset": [
          719,
          729
        ],
        "op": "CALLER",
        "path": "6",
        "statement": 89
      },
      "6623": {
        "fn": "Context._msgSender",
        "offset": [
          640,
          736
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "6624": {
        "fn": "Context._msgSender",
        "jump": "o",
        "offset": [
          640,
          736
        ],
        "op": "JUMP",
        "path": "6"
      },
      "6625": {
        "fn": "ERC20._approve",
        "offset": [
          10123,
          10493
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6626": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6628": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6630": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6632": {
        "op": "SHL"
      },
      "6633": {
        "op": "SUB"
      },
      "6634": {
        "fn": "ERC20._approve",
        "offset": [
          10254,
          10273
        ],
        "op": "DUP4",
        "path": "1",
        "statement": 90
      },
      "6635": {
        "branch": 271,
        "fn": "ERC20._approve",
        "offset": [
          10254,
          10273
        ],
        "op": "AND",
        "path": "1"
      },
      "6636": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A07"
      },
      "6639": {
        "branch": 271,
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6640": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6642": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6643": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "6647": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "6649": {
        "op": "SHL"
      },
      "6650": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6651": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6652": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "6654": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "ADD",
        "path": "1"
      },
      "6655": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x542"
      },
      "6658": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6659": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3C93"
      },
      "6662": {
        "fn": "ERC20._approve",
        "jump": "i",
        "offset": [
          10246,
          10314
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6663": {
        "fn": "ERC20._approve",
        "offset": [
          10246,
          10314
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6664": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6666": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6668": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6670": {
        "op": "SHL"
      },
      "6671": {
        "op": "SUB"
      },
      "6672": {
        "fn": "ERC20._approve",
        "offset": [
          10332,
          10353
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 91
      },
      "6673": {
        "branch": 272,
        "fn": "ERC20._approve",
        "offset": [
          10332,
          10353
        ],
        "op": "AND",
        "path": "1"
      },
      "6674": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A2D"
      },
      "6677": {
        "branch": 272,
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6678": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6680": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6681": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "6685": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "6687": {
        "op": "SHL"
      },
      "6688": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6689": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6690": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "6692": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "ADD",
        "path": "1"
      },
      "6693": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x542"
      },
      "6696": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6697": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x38DA"
      },
      "6700": {
        "fn": "ERC20._approve",
        "jump": "i",
        "offset": [
          10324,
          10392
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6701": {
        "fn": "ERC20._approve",
        "offset": [
          10324,
          10392
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6702": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6704": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6706": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6708": {
        "op": "SHL"
      },
      "6709": {
        "op": "SUB"
      },
      "6710": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "DUP1",
        "path": "1",
        "statement": 92
      },
      "6711": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "DUP5",
        "path": "1"
      },
      "6712": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "AND",
        "path": "1"
      },
      "6713": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6715": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6716": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6717": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6718": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10414
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x1"
      },
      "6720": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "6722": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6723": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6724": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6725": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6727": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6728": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6729": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10421
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "6730": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "6731": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "DUP8",
        "path": "1"
      },
      "6732": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "AND",
        "path": "1"
      },
      "6733": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6734": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "DUP5",
        "path": "1"
      },
      "6735": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6736": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "SWAP5",
        "path": "1"
      },
      "6737": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6738": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6739": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6740": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6741": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6742": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6743": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10430
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "6744": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10439
        ],
        "op": "DUP5",
        "path": "1"
      },
      "6745": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10439
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6746": {
        "fn": "ERC20._approve",
        "offset": [
          10403,
          10439
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "6747": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "MLOAD",
        "path": "1",
        "statement": 93
      },
      "6748": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
      },
      "6781": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6782": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1A88"
      },
      "6785": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6786": {
        "fn": "ERC20._approve",
        "offset": [
          10433,
          10439
        ],
        "op": "DUP6",
        "path": "1"
      },
      "6787": {
        "fn": "ERC20._approve",
        "offset": [
          10433,
          10439
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6788": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3756"
      },
      "6791": {
        "fn": "ERC20._approve",
        "jump": "i",
        "offset": [
          10454,
          10486
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6792": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6793": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6795": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6796": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "DUP1",
        "path": "1"
      },
      "6797": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "6798": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "SUB",
        "path": "1"
      },
      "6799": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6800": {
        "fn": "ERC20._approve",
        "offset": [
          10454,
          10486
        ],
        "op": "LOG3",
        "path": "1"
      },
      "6801": {
        "fn": "ERC20._approve",
        "offset": [
          10123,
          10493
        ],
        "op": "POP",
        "path": "1"
      },
      "6802": {
        "fn": "ERC20._approve",
        "offset": [
          10123,
          10493
        ],
        "op": "POP",
        "path": "1"
      },
      "6803": {
        "fn": "ERC20._approve",
        "offset": [
          10123,
          10493
        ],
        "op": "POP",
        "path": "1"
      },
      "6804": {
        "fn": "ERC20._approve",
        "jump": "o",
        "offset": [
          10123,
          10493
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6805": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10770,
          11211
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6806": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10900,
          10924
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6808": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10927,
          10952
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1AA1"
      },
      "6811": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10937,
          10942
        ],
        "op": "DUP5",
        "path": "1"
      },
      "6812": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10944,
          10951
        ],
        "op": "DUP5",
        "path": "1"
      },
      "6813": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10927,
          10936
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x187C"
      },
      "6816": {
        "fn": "ERC20._spendAllowance",
        "jump": "i",
        "offset": [
          10927,
          10952
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6817": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10927,
          10952
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6818": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10900,
          10952
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6819": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10900,
          10952
        ],
        "op": "POP",
        "path": "1"
      },
      "6820": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "6822": {
        "op": "NOT"
      },
      "6823": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10966,
          10982
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6824": {
        "branch": 273,
        "fn": "ERC20._spendAllowance",
        "offset": [
          10966,
          11003
        ],
        "op": "EQ",
        "path": "1"
      },
      "6825": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          10962,
          11205
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x17A8"
      },
      "6828": {
        "branch": 273,
        "fn": "ERC20._spendAllowance",
        "offset": [
          10962,
          11205
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6829": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11047,
          11053
        ],
        "op": "DUP2",
        "path": "1",
        "statement": 94
      },
      "6830": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11027,
          11043
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6831": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11027,
          11053
        ],
        "op": "LT",
        "path": "1"
      },
      "6832": {
        "branch": 274,
        "fn": "ERC20._spendAllowance",
        "offset": [
          11027,
          11053
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6833": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1ACC"
      },
      "6836": {
        "branch": 274,
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6837": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6839": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6840": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "6844": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "6846": {
        "op": "SHL"
      },
      "6847": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6848": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6849": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "6851": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "ADD",
        "path": "1"
      },
      "6852": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x542"
      },
      "6855": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6856": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3953"
      },
      "6859": {
        "fn": "ERC20._spendAllowance",
        "jump": "i",
        "offset": [
          11019,
          11087
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6860": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11019,
          11087
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6861": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11129,
          11180
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 95,
        "value": "0x17A8"
      },
      "6864": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11138,
          11143
        ],
        "op": "DUP5",
        "path": "1"
      },
      "6865": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11145,
          11152
        ],
        "op": "DUP5",
        "path": "1"
      },
      "6866": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11173,
          11179
        ],
        "op": "DUP5",
        "path": "1"
      },
      "6867": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11154,
          11170
        ],
        "op": "DUP5",
        "path": "1"
      },
      "6868": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11154,
          11179
        ],
        "op": "SUB",
        "path": "1"
      },
      "6869": {
        "fn": "ERC20._spendAllowance",
        "offset": [
          11129,
          11137
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x19E1"
      },
      "6872": {
        "fn": "ERC20._spendAllowance",
        "jump": "i",
        "offset": [
          11129,
          11180
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6873": {
        "fn": "ERC20._transfer",
        "offset": [
          7488,
          8139
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6874": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6876": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6878": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6880": {
        "op": "SHL"
      },
      "6881": {
        "op": "SUB"
      },
      "6882": {
        "fn": "ERC20._transfer",
        "offset": [
          7614,
          7632
        ],
        "op": "DUP4",
        "path": "1",
        "statement": 96
      },
      "6883": {
        "branch": 275,
        "fn": "ERC20._transfer",
        "offset": [
          7614,
          7632
        ],
        "op": "AND",
        "path": "1"
      },
      "6884": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1AFF"
      },
      "6887": {
        "branch": 275,
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6888": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6890": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6891": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "6895": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "6897": {
        "op": "SHL"
      },
      "6898": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6899": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6900": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "6902": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "ADD",
        "path": "1"
      },
      "6903": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x542"
      },
      "6906": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6907": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3BDD"
      },
      "6910": {
        "fn": "ERC20._transfer",
        "jump": "i",
        "offset": [
          7606,
          7674
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6911": {
        "fn": "ERC20._transfer",
        "offset": [
          7606,
          7674
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6912": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6914": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6916": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6918": {
        "op": "SHL"
      },
      "6919": {
        "op": "SUB"
      },
      "6920": {
        "fn": "ERC20._transfer",
        "offset": [
          7692,
          7708
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 97
      },
      "6921": {
        "branch": 276,
        "fn": "ERC20._transfer",
        "offset": [
          7692,
          7708
        ],
        "op": "AND",
        "path": "1"
      },
      "6922": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B25"
      },
      "6925": {
        "branch": 276,
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6926": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6928": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6929": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "6933": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "6935": {
        "op": "SHL"
      },
      "6936": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6937": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6938": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "6940": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "ADD",
        "path": "1"
      },
      "6941": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x542"
      },
      "6944": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6945": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x37E6"
      },
      "6948": {
        "fn": "ERC20._transfer",
        "jump": "i",
        "offset": [
          7684,
          7748
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6949": {
        "fn": "ERC20._transfer",
        "offset": [
          7684,
          7748
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6950": {
        "fn": "ERC20._transfer",
        "offset": [
          7759,
          7797
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 98,
        "value": "0x1B30"
      },
      "6953": {
        "fn": "ERC20._transfer",
        "offset": [
          7780,
          7784
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6954": {
        "fn": "ERC20._transfer",
        "offset": [
          7786,
          7788
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6955": {
        "fn": "ERC20._transfer",
        "offset": [
          7790,
          7796
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6956": {
        "fn": "ERC20._transfer",
        "offset": [
          7759,
          7779
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5DF"
      },
      "6959": {
        "fn": "ERC20._transfer",
        "jump": "i",
        "offset": [
          7759,
          7797
        ],
        "op": "JUMP",
        "path": "1"
      },
      "6960": {
        "fn": "ERC20._transfer",
        "offset": [
          7759,
          7797
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "6961": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6963": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "6965": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "6967": {
        "op": "SHL"
      },
      "6968": {
        "op": "SUB"
      },
      "6969": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "DUP4",
        "path": "1"
      },
      "6970": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "AND",
        "path": "1"
      },
      "6971": {
        "fn": "ERC20._transfer",
        "offset": [
          7808,
          7827
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "6973": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6974": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6975": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6976": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "6978": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6979": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6980": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "6981": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6983": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "6984": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "6985": {
        "fn": "ERC20._transfer",
        "offset": [
          7830,
          7845
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "6986": {
        "fn": "ERC20._transfer",
        "offset": [
          7863,
          7884
        ],
        "op": "DUP2",
        "path": "1",
        "statement": 99
      },
      "6987": {
        "fn": "ERC20._transfer",
        "offset": [
          7863,
          7884
        ],
        "op": "DUP2",
        "path": "1"
      },
      "6988": {
        "fn": "ERC20._transfer",
        "offset": [
          7863,
          7884
        ],
        "op": "LT",
        "path": "1"
      },
      "6989": {
        "branch": 277,
        "fn": "ERC20._transfer",
        "offset": [
          7863,
          7884
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "6990": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1B69"
      },
      "6993": {
        "branch": 277,
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "6994": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "6996": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "6997": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "7001": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "7003": {
        "op": "SHL"
      },
      "7004": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7005": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "7006": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "7008": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "ADD",
        "path": "1"
      },
      "7009": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x542"
      },
      "7012": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7013": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x39C1"
      },
      "7016": {
        "fn": "ERC20._transfer",
        "jump": "i",
        "offset": [
          7855,
          7927
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7017": {
        "fn": "ERC20._transfer",
        "offset": [
          7855,
          7927
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7018": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7020": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7022": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7024": {
        "op": "SHL"
      },
      "7025": {
        "op": "SUB"
      },
      "7026": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "DUP1",
        "path": "1",
        "statement": 100
      },
      "7027": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7028": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "AND",
        "path": "1"
      },
      "7029": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7970
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7031": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7032": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7033": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "7034": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7036": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7037": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7038": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "7039": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7041": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7042": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7043": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7976
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "7044": {
        "fn": "ERC20._transfer",
        "offset": [
          7979,
          7999
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7045": {
        "fn": "ERC20._transfer",
        "offset": [
          7979,
          7999
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7046": {
        "fn": "ERC20._transfer",
        "offset": [
          7979,
          7999
        ],
        "op": "SUB",
        "path": "1"
      },
      "7047": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7999
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7048": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7999
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "7049": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8032
        ],
        "op": "SWAP2",
        "path": "1",
        "statement": 101
      },
      "7050": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8032
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7051": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8032
        ],
        "op": "AND",
        "path": "1"
      },
      "7052": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8032
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7053": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8032
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "7054": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8032
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7055": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8032
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7056": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8032
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "7057": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7058": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "7059": {
        "fn": "ERC20._transfer",
        "offset": [
          7993,
          7999
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7060": {
        "fn": "ERC20._transfer",
        "offset": [
          7993,
          7999
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "7061": {
        "fn": "ERC20._transfer",
        "offset": [
          7961,
          7970
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7062": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1BA0"
      },
      "7065": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7066": {
        "fn": "ERC20._transfer",
        "offset": [
          7993,
          7999
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7067": {
        "fn": "ERC20._transfer",
        "offset": [
          7993,
          7999
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7068": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3EAC"
      },
      "7071": {
        "fn": "ERC20._transfer",
        "jump": "i",
        "offset": [
          8019,
          8042
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7072": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7073": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "7074": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "POP",
        "path": "1"
      },
      "7075": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "POP",
        "path": "1"
      },
      "7076": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7077": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7078": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "7079": {
        "fn": "ERC20._transfer",
        "offset": [
          8019,
          8042
        ],
        "op": "POP",
        "path": "1"
      },
      "7080": {
        "fn": "ERC20._transfer",
        "offset": [
          8073,
          8075
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 102
      },
      "7081": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7083": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7085": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7087": {
        "op": "SHL"
      },
      "7088": {
        "op": "SUB"
      },
      "7089": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "AND",
        "path": "1"
      },
      "7090": {
        "fn": "ERC20._transfer",
        "offset": [
          8067,
          8071
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7091": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7093": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7095": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7097": {
        "op": "SHL"
      },
      "7098": {
        "op": "SUB"
      },
      "7099": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "AND",
        "path": "1"
      },
      "7100": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
      },
      "7133": {
        "fn": "ERC20._transfer",
        "offset": [
          8077,
          8083
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7134": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7136": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7137": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1BEA"
      },
      "7140": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7141": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7142": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3756"
      },
      "7145": {
        "fn": "ERC20._transfer",
        "jump": "i",
        "offset": [
          8058,
          8084
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7146": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7147": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7149": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7150": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7151": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7152": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "SUB",
        "path": "1"
      },
      "7153": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7154": {
        "fn": "ERC20._transfer",
        "offset": [
          8058,
          8084
        ],
        "op": "LOG3",
        "path": "1"
      },
      "7155": {
        "fn": "ERC20._transfer",
        "offset": [
          8095,
          8132
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 103,
        "value": "0x17A8"
      },
      "7158": {
        "fn": "ERC20._transfer",
        "offset": [
          8115,
          8119
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7159": {
        "fn": "ERC20._transfer",
        "offset": [
          8121,
          8123
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7160": {
        "fn": "ERC20._transfer",
        "offset": [
          8125,
          8131
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7161": {
        "fn": "ERC20._transfer",
        "offset": [
          8095,
          8114
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5DF"
      },
      "7164": {
        "fn": "ERC20._transfer",
        "jump": "i",
        "offset": [
          8095,
          8132
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7165": {
        "fn": "SharpeAI._poke",
        "offset": [
          6202,
          6430
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7166": {
        "fn": "SharpeAI._poke",
        "offset": [
          6272,
          6289
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7168": {
        "fn": "SharpeAI._poke",
        "offset": [
          6301,
          6332
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1C09"
      },
      "7171": {
        "fn": "SharpeAI._poke",
        "offset": [
          6311,
          6320
        ],
        "op": "DUP4",
        "path": "23"
      },
      "7172": {
        "fn": "SharpeAI._poke",
        "offset": [
          6322,
          6331
        ],
        "op": "DUP4",
        "path": "23"
      },
      "7173": {
        "fn": "SharpeAI._poke",
        "offset": [
          6301,
          6310
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1FC8"
      },
      "7176": {
        "fn": "SharpeAI._poke",
        "jump": "i",
        "offset": [
          6301,
          6332
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7177": {
        "fn": "SharpeAI._poke",
        "offset": [
          6301,
          6332
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7178": {
        "fn": "SharpeAI._poke",
        "offset": [
          6271,
          6332
        ],
        "op": "POP",
        "path": "23"
      },
      "7179": {
        "fn": "SharpeAI._poke",
        "offset": [
          6271,
          6332
        ],
        "op": "POP",
        "path": "23"
      },
      "7180": {
        "fn": "SharpeAI._poke",
        "offset": [
          6271,
          6332
        ],
        "op": "POP",
        "path": "23"
      },
      "7181": {
        "fn": "SharpeAI._poke",
        "offset": [
          6271,
          6332
        ],
        "op": "POP",
        "path": "23"
      },
      "7182": {
        "fn": "SharpeAI._poke",
        "offset": [
          6271,
          6332
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7183": {
        "fn": "SharpeAI._poke",
        "offset": [
          6271,
          6332
        ],
        "op": "POP",
        "path": "23"
      },
      "7184": {
        "fn": "SharpeAI._poke",
        "offset": [
          6359,
          6360
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7186": {
        "fn": "SharpeAI._poke",
        "offset": [
          6347,
          6356
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7187": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7189": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7191": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "7193": {
        "op": "SHL"
      },
      "7194": {
        "op": "SUB"
      },
      "7195": {
        "fn": "SharpeAI._poke",
        "offset": [
          6347,
          6360
        ],
        "op": "AND",
        "path": "23"
      },
      "7196": {
        "branch": 252,
        "fn": "SharpeAI._poke",
        "offset": [
          6347,
          6360
        ],
        "op": "GT",
        "path": "23"
      },
      "7197": {
        "fn": "SharpeAI._poke",
        "offset": [
          6343,
          6423
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "7198": {
        "fn": "SharpeAI._poke",
        "offset": [
          6343,
          6423
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x5DF"
      },
      "7201": {
        "branch": 252,
        "fn": "SharpeAI._poke",
        "offset": [
          6343,
          6423
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7202": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 104,
        "value": "0x40"
      },
      "7204": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "7205": {
        "op": "PUSH4",
        "value": "0xA34123A7"
      },
      "7210": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "7212": {
        "op": "SHL"
      },
      "7213": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7214": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "7215": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7217": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7219": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7221": {
        "op": "SHL"
      },
      "7222": {
        "op": "SUB"
      },
      "7223": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6381
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "7256": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6386
        ],
        "op": "AND",
        "path": "23"
      },
      "7257": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6386
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7258": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6386
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xA34123A7"
      },
      "7263": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6386
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7264": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1C72"
      },
      "7267": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7268": {
        "fn": "SharpeAI._poke",
        "offset": [
          6387,
          6396
        ],
        "op": "DUP7",
        "path": "23"
      },
      "7269": {
        "fn": "SharpeAI._poke",
        "offset": [
          6387,
          6396
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7270": {
        "fn": "SharpeAI._poke",
        "offset": [
          6398,
          6407
        ],
        "op": "DUP7",
        "path": "23"
      },
      "7271": {
        "fn": "SharpeAI._poke",
        "offset": [
          6398,
          6407
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7272": {
        "fn": "SharpeAI._poke",
        "offset": [
          6409,
          6410
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7274": {
        "fn": "SharpeAI._poke",
        "offset": [
          6409,
          6410
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7275": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "7277": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "ADD",
        "path": "23"
      },
      "7278": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x376D"
      },
      "7281": {
        "fn": "SharpeAI._poke",
        "jump": "i",
        "offset": [
          6377,
          6411
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7282": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7283": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "7285": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7286": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "7287": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7288": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP4",
        "path": "23"
      },
      "7289": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "SUB",
        "path": "23"
      },
      "7290": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7291": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7293": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP8",
        "path": "23"
      },
      "7294": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7295": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "7296": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "7297": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7298": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "7299": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1C8B"
      },
      "7302": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7303": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7305": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7306": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "REVERT",
        "path": "23"
      },
      "7307": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7308": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "POP",
        "path": "23"
      },
      "7309": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "GAS",
        "path": "23"
      },
      "7310": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "CALL",
        "path": "23"
      },
      "7311": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "7312": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7313": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "7314": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1C9F"
      },
      "7317": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7318": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "7319": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7321": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7322": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "7323": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "7324": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7326": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "REVERT",
        "path": "23"
      },
      "7327": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7328": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "POP",
        "path": "23"
      },
      "7329": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "POP",
        "path": "23"
      },
      "7330": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "POP",
        "path": "23"
      },
      "7331": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "POP",
        "path": "23"
      },
      "7332": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "7334": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "7335": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "7336": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "7338": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "NOT",
        "path": "23"
      },
      "7339": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "7341": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP3",
        "path": "23"
      },
      "7342": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "ADD",
        "path": "23"
      },
      "7343": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "AND",
        "path": "23"
      },
      "7344": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP3",
        "path": "23"
      },
      "7345": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "ADD",
        "path": "23"
      },
      "7346": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7347": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "7349": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "7350": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "POP",
        "path": "23"
      },
      "7351": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7352": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "ADD",
        "path": "23"
      },
      "7353": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7354": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1370"
      },
      "7357": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "7358": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7359": {
        "fn": "SharpeAI._poke",
        "offset": [
          6377,
          6411
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x32E2"
      },
      "7362": {
        "fn": "SharpeAI._poke",
        "jump": "i",
        "offset": [
          6377,
          6411
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7363": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6658,
          8006
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7364": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6801,
          6815
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7366": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6830,
          6845
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7367": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6860,
          6875
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7369": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6903,
          6922
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7370": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6925,
          6938
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1CD1"
      },
      "7373": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6925,
          6936
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x6FF"
      },
      "7376": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          6925,
          6938
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7377": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6925,
          6938
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7378": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6903,
          6938
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7379": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6903,
          6938
        ],
        "op": "POP",
        "path": "23"
      },
      "7380": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6950,
          6964
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7382": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6966,
          6980
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7383": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6984,
          7001
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1CDE"
      },
      "7386": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6984,
          6999
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x13C9"
      },
      "7389": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          6984,
          7001
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7390": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6984,
          7001
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7391": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6949,
          7001
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "7392": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6949,
          7001
        ],
        "op": "POP",
        "path": "23"
      },
      "7393": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6949,
          7001
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "7394": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6949,
          7001
        ],
        "op": "POP",
        "path": "23"
      },
      "7395": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7086
        ],
        "op": "DUP3",
        "path": "23",
        "statement": 105
      },
      "7396": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7090,
          7091
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7398": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7091
        ],
        "op": "EQ",
        "path": "23"
      },
      "7399": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7105
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7400": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7105
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1CF1"
      },
      "7403": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7105
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7404": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7105
        ],
        "op": "POP",
        "path": "23"
      },
      "7405": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7104,
          7105
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7407": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7095,
          7101
        ],
        "op": "DUP3",
        "path": "23"
      },
      "7408": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7095,
          7105
        ],
        "op": "GT",
        "path": "23"
      },
      "7409": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7105
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7410": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7119
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7411": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7119
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1CFC"
      },
      "7414": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7119
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7415": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7119
        ],
        "op": "POP",
        "path": "23"
      },
      "7416": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7118,
          7119
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7418": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7109,
          7115
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7419": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7109,
          7119
        ],
        "op": "GT",
        "path": "23"
      },
      "7420": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7075,
          7119
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7421": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1D16"
      },
      "7424": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7425": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "7430": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "7432": {
        "op": "SHL"
      },
      "7433": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7435": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "7436": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1"
      },
      "7438": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "7440": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "7441": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x24"
      },
      "7443": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7445": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "REVERT",
        "path": "23"
      },
      "7446": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7068,
          7120
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7447": {
        "branch": 253,
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7137,
          7153
        ],
        "op": "DUP3",
        "path": "23"
      },
      "7448": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7133,
          7999
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1D32"
      },
      "7451": {
        "branch": 253,
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7133,
          7999
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7452": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7244,
          7258
        ],
        "op": "DUP8",
        "path": "23",
        "statement": 106
      },
      "7453": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7234,
          7258
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "7454": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7234,
          7258
        ],
        "op": "POP",
        "path": "23"
      },
      "7455": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7283,
          7297
        ],
        "op": "DUP7",
        "path": "23",
        "statement": 107
      },
      "7456": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7273,
          7297
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "7457": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7273,
          7297
        ],
        "op": "POP",
        "path": "23"
      },
      "7458": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7321,
          7347
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 108,
        "value": "0x1D2B"
      },
      "7461": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7330,
          7337
        ],
        "op": "DUP6",
        "path": "23"
      },
      "7462": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7339,
          7346
        ],
        "op": "DUP6",
        "path": "23"
      },
      "7463": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7321,
          7329
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2710"
      },
      "7466": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          7321,
          7347
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7467": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7321,
          7347
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7468": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7312,
          7347
        ],
        "op": "SWAP6",
        "path": "23"
      },
      "7469": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7312,
          7347
        ],
        "op": "POP",
        "path": "23"
      },
      "7470": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7133,
          7999
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1DDC"
      },
      "7473": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7133,
          7999
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7474": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7133,
          7999
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7475": {
        "branch": 254,
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7369,
          7380
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7476": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7365,
          7999
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1D48"
      },
      "7479": {
        "branch": 254,
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7365,
          7999
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7480": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7407,
          7421
        ],
        "op": "DUP7",
        "path": "23",
        "statement": 109
      },
      "7481": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7407,
          7421
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "7482": {
        "op": "POP"
      },
      "7483": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7445,
          7481
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 110,
        "value": "0x1D2B"
      },
      "7486": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7474,
          7480
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7487": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7445,
          7469
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "7490": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7407,
          7421
        ],
        "op": "DUP7",
        "path": "23"
      },
      "7491": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7457,
          7468
        ],
        "op": "DUP7",
        "path": "23"
      },
      "7492": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7445,
          7456
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "7495": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          7445,
          7469
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7496": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7365,
          7999
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7497": {
        "branch": 255,
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7503,
          7514
        ],
        "op": "DUP1",
        "path": "23"
      },
      "7498": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7499,
          7999
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1D5E"
      },
      "7501": {
        "branch": 255,
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7499,
          7999
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7502": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7541,
          7555
        ],
        "op": "DUP8",
        "path": "23",
        "statement": 111
      },
      "7503": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7541,
          7555
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "7504": {
        "op": "POP"
      },
      "7505": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7579,
          7615
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 112,
        "value": "0x1D2B"
      },
      "7508": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7608,
          7614
        ],
        "op": "DUP3",
        "path": "23"
      },
      "7509": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7579,
          7603
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "7512": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7541,
          7555
        ],
        "op": "DUP8",
        "path": "23"
      },
      "7513": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7591,
          7602
        ],
        "op": "DUP7",
        "path": "23"
      },
      "7514": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7579,
          7590
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "7517": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          7579,
          7603
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7518": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7499,
          7999
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7519": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7648,
          7661
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "7521": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7664,
          7728
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1D7C"
      },
      "7524": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7673,
          7699
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1D6D"
      },
      "7527": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7673,
          7687
        ],
        "op": "DUP11",
        "path": "23"
      },
      "7528": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7692,
          7698
        ],
        "op": "DUP5",
        "path": "23"
      },
      "7529": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7673,
          7691
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "7532": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          7673,
          7699
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7533": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7673,
          7699
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7534": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7701,
          7727
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1D77"
      },
      "7537": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7701,
          7715
        ],
        "op": "DUP11",
        "path": "23"
      },
      "7538": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7720,
          7726
        ],
        "op": "DUP7",
        "path": "23"
      },
      "7539": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7701,
          7719
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "7542": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          7701,
          7727
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7543": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7701,
          7727
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7544": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7664,
          7672
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2727"
      },
      "7547": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          7664,
          7728
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7548": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7664,
          7728
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7549": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7648,
          7728
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7550": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7648,
          7728
        ],
        "op": "POP",
        "path": "23"
      },
      "7551": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7759,
          7760
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 113,
        "value": "0x0"
      },
      "7553": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7751,
          7756
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7554": {
        "branch": 256,
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7751,
          7760
        ],
        "op": "GT",
        "path": "23"
      },
      "7555": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1D9E"
      },
      "7558": {
        "branch": 256,
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7559": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "7561": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "7562": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "7566": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "7568": {
        "op": "SHL"
      },
      "7569": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7570": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "7571": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "7573": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "ADD",
        "path": "23"
      },
      "7574": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "7577": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7578": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3BBE"
      },
      "7581": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          7743,
          7770
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7582": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7743,
          7770
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7583": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7830,
          7861
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 114,
        "value": "0x1DB1"
      },
      "7586": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7859,
          7860
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1"
      },
      "7588": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7830,
          7854
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1434"
      },
      "7591": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7847,
          7853
        ],
        "op": "DUP5",
        "path": "23"
      },
      "7592": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7830,
          7842
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "7595": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7830,
          7835
        ],
        "op": "DUP6",
        "path": "23"
      },
      "7596": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7859,
          7860
        ],
        "op": "DUP5",
        "path": "23"
      },
      "7597": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7830,
          7839
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x197B"
      },
      "7600": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          7830,
          7842
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7601": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7830,
          7861
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7602": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7820,
          7861
        ],
        "op": "SWAP6",
        "path": "23"
      },
      "7603": {
        "op": "POP"
      },
      "7604": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7886,
          7917
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 115,
        "value": "0x1DC6"
      },
      "7607": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7915,
          7916
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1"
      },
      "7609": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7886,
          7910
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1434"
      },
      "7612": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7903,
          7909
        ],
        "op": "DUP6",
        "path": "23"
      },
      "7613": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7886,
          7898
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "7616": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7886,
          7891
        ],
        "op": "DUP6",
        "path": "23"
      },
      "7617": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7915,
          7916
        ],
        "op": "DUP5",
        "path": "23"
      },
      "7618": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7886,
          7895
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x197B"
      },
      "7621": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          7886,
          7898
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7622": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7886,
          7917
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7623": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7876,
          7917
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "7624": {
        "op": "POP"
      },
      "7625": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7941,
          7987
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 116,
        "value": "0x1DD8"
      },
      "7628": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7980,
          7986
        ],
        "op": "DUP3",
        "path": "23"
      },
      "7629": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7941,
          7975
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "7632": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7968,
          7974
        ],
        "op": "DUP6",
        "path": "23"
      },
      "7633": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7941,
          7975
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7634": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7941,
          7946
        ],
        "op": "DUP6",
        "path": "23"
      },
      "7635": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7951,
          7962
        ],
        "op": "DUP10",
        "path": "23"
      },
      "7636": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7941,
          7950
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "7639": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "i",
        "offset": [
          7941,
          7963
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7640": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7941,
          7987
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7641": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7932,
          7987
        ],
        "op": "SWAP7",
        "path": "23"
      },
      "7642": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7932,
          7987
        ],
        "op": "POP",
        "path": "23"
      },
      "7643": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7499,
          7999
        ],
        "op": "POP",
        "path": "23"
      },
      "7644": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          7499,
          7999
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7645": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6658,
          8006
        ],
        "op": "POP",
        "path": "23"
      },
      "7646": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6658,
          8006
        ],
        "op": "POP",
        "path": "23"
      },
      "7647": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6658,
          8006
        ],
        "op": "POP",
        "path": "23"
      },
      "7648": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6658,
          8006
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "7649": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6658,
          8006
        ],
        "op": "POP",
        "path": "23"
      },
      "7650": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6658,
          8006
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "7651": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6658,
          8006
        ],
        "op": "POP",
        "path": "23"
      },
      "7652": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "offset": [
          6658,
          8006
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "7653": {
        "fn": "SharpeAI._calcSharesAndAmounts",
        "jump": "o",
        "offset": [
          6658,
          8006
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7654": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          912,
          1153
        ],
        "op": "JUMPDEST",
        "path": "4"
      },
      "7655": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1050,
          1146
        ],
        "op": "PUSH2",
        "path": "4",
        "statement": 117,
        "value": "0x17A8"
      },
      "7658": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1070,
          1075
        ],
        "op": "DUP5",
        "path": "4"
      },
      "7659": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1100,
          1127
        ],
        "op": "PUSH4",
        "path": "4",
        "value": "0x23B872DD"
      },
      "7664": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1100,
          1127
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0xE0"
      },
      "7666": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1100,
          1127
        ],
        "op": "SHL",
        "path": "4"
      },
      "7667": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1129,
          1133
        ],
        "op": "DUP6",
        "path": "4"
      },
      "7668": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1135,
          1137
        ],
        "op": "DUP6",
        "path": "4"
      },
      "7669": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1139,
          1144
        ],
        "op": "DUP6",
        "path": "4"
      },
      "7670": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1077,
          1145
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x40"
      },
      "7672": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1077,
          1145
        ],
        "op": "MLOAD",
        "path": "4"
      },
      "7673": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1077,
          1145
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x24"
      },
      "7675": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1077,
          1145
        ],
        "op": "ADD",
        "path": "4"
      },
      "7676": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1077,
          1145
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x19A6"
      },
      "7679": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1077,
          1145
        ],
        "op": "SWAP4",
        "path": "4"
      },
      "7680": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1077,
          1145
        ],
        "op": "SWAP3",
        "path": "4"
      },
      "7681": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1077,
          1145
        ],
        "op": "SWAP2",
        "path": "4"
      },
      "7682": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1077,
          1145
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "7683": {
        "fn": "SafeERC20.safeTransferFrom",
        "offset": [
          1077,
          1145
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x3655"
      },
      "7686": {
        "fn": "SafeERC20.safeTransferFrom",
        "jump": "i",
        "offset": [
          1077,
          1145
        ],
        "op": "JUMP",
        "path": "4"
      },
      "7687": {
        "fn": "ERC20._mint",
        "offset": [
          8415,
          8804
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7688": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7690": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7692": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7694": {
        "op": "SHL"
      },
      "7695": {
        "op": "SUB"
      },
      "7696": {
        "fn": "ERC20._mint",
        "offset": [
          8498,
          8519
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 118
      },
      "7697": {
        "branch": 278,
        "fn": "ERC20._mint",
        "offset": [
          8498,
          8519
        ],
        "op": "AND",
        "path": "1"
      },
      "7698": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E2D"
      },
      "7701": {
        "branch": 278,
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "7702": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7704": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7705": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "7709": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "7711": {
        "op": "SHL"
      },
      "7712": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7713": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "7714": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "7716": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "ADD",
        "path": "1"
      },
      "7717": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x542"
      },
      "7720": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7721": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3E28"
      },
      "7724": {
        "fn": "ERC20._mint",
        "jump": "i",
        "offset": [
          8490,
          8555
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7725": {
        "fn": "ERC20._mint",
        "offset": [
          8490,
          8555
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7726": {
        "fn": "ERC20._mint",
        "offset": [
          8566,
          8615
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 119,
        "value": "0x1E39"
      },
      "7729": {
        "fn": "ERC20._mint",
        "offset": [
          8595,
          8596
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7731": {
        "fn": "ERC20._mint",
        "offset": [
          8599,
          8606
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7732": {
        "fn": "ERC20._mint",
        "offset": [
          8608,
          8614
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7733": {
        "fn": "ERC20._mint",
        "offset": [
          8566,
          8586
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5DF"
      },
      "7736": {
        "fn": "ERC20._mint",
        "jump": "i",
        "offset": [
          8566,
          8615
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7737": {
        "fn": "ERC20._mint",
        "offset": [
          8566,
          8615
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7738": {
        "fn": "ERC20._mint",
        "offset": [
          8642,
          8648
        ],
        "op": "DUP1",
        "path": "1",
        "statement": 120
      },
      "7739": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8638
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x2"
      },
      "7741": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8638
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7743": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7744": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "DUP3",
        "path": "1"
      },
      "7745": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "7746": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E4B"
      },
      "7749": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7750": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7751": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3EAC"
      },
      "7754": {
        "fn": "ERC20._mint",
        "jump": "i",
        "offset": [
          8626,
          8648
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7755": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7756": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7757": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7758": {
        "fn": "ERC20._mint",
        "offset": [
          8626,
          8648
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "7759": {
        "op": "POP"
      },
      "7760": {
        "op": "POP"
      },
      "7761": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7763": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7765": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7767": {
        "op": "SHL"
      },
      "7768": {
        "op": "SUB"
      },
      "7769": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 121
      },
      "7770": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "AND",
        "path": "1"
      },
      "7771": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8667
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7773": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7774": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7775": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "7776": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "7778": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7779": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7780": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "7781": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7783": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "DUP2",
        "path": "1"
      },
      "7784": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8676
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "7785": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8686
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7786": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8686
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "7787": {
        "fn": "ERC20._mint",
        "offset": [
          8680,
          8686
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7788": {
        "fn": "ERC20._mint",
        "offset": [
          8680,
          8686
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "7789": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8667
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7790": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8686
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1E78"
      },
      "7793": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8686
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7794": {
        "fn": "ERC20._mint",
        "offset": [
          8680,
          8686
        ],
        "op": "DUP5",
        "path": "1"
      },
      "7795": {
        "fn": "ERC20._mint",
        "offset": [
          8680,
          8686
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7796": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8686
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3EAC"
      },
      "7799": {
        "fn": "ERC20._mint",
        "jump": "i",
        "offset": [
          8658,
          8686
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7800": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8686
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7801": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8686
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7802": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8686
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7803": {
        "fn": "ERC20._mint",
        "offset": [
          8658,
          8686
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "7804": {
        "op": "POP"
      },
      "7805": {
        "op": "POP"
      },
      "7806": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 122,
        "value": "0x40"
      },
      "7808": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7809": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7811": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "7813": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "7815": {
        "op": "SHL"
      },
      "7816": {
        "op": "SUB"
      },
      "7817": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7818": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "AND",
        "path": "1"
      },
      "7819": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7820": {
        "fn": "ERC20._mint",
        "offset": [
          8718,
          8719
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7822": {
        "fn": "ERC20._mint",
        "offset": [
          8718,
          8719
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7823": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
      },
      "7856": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7857": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x1EBB"
      },
      "7860": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7861": {
        "fn": "ERC20._mint",
        "offset": [
          8731,
          8737
        ],
        "op": "DUP6",
        "path": "1"
      },
      "7862": {
        "fn": "ERC20._mint",
        "offset": [
          8731,
          8737
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7863": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3756"
      },
      "7866": {
        "fn": "ERC20._mint",
        "jump": "i",
        "offset": [
          8701,
          8738
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7867": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7868": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "7870": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "7871": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "DUP1",
        "path": "1"
      },
      "7872": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "7873": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "SUB",
        "path": "1"
      },
      "7874": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "7875": {
        "fn": "ERC20._mint",
        "offset": [
          8701,
          8738
        ],
        "op": "LOG3",
        "path": "1"
      },
      "7876": {
        "fn": "ERC20._mint",
        "offset": [
          8749,
          8797
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 123,
        "value": "0x1ECF"
      },
      "7879": {
        "fn": "ERC20._mint",
        "offset": [
          8777,
          8778
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "7881": {
        "fn": "ERC20._mint",
        "offset": [
          8781,
          8788
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7882": {
        "fn": "ERC20._mint",
        "offset": [
          8790,
          8796
        ],
        "op": "DUP4",
        "path": "1"
      },
      "7883": {
        "fn": "ERC20._mint",
        "offset": [
          8749,
          8768
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5DF"
      },
      "7886": {
        "fn": "ERC20._mint",
        "jump": "i",
        "offset": [
          8749,
          8797
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7887": {
        "fn": "ERC20._mint",
        "offset": [
          8749,
          8797
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "7888": {
        "fn": "ERC20._mint",
        "offset": [
          8415,
          8804
        ],
        "op": "POP",
        "path": "1"
      },
      "7889": {
        "fn": "ERC20._mint",
        "offset": [
          8415,
          8804
        ],
        "op": "POP",
        "path": "1"
      },
      "7890": {
        "fn": "ERC20._mint",
        "jump": "o",
        "offset": [
          8415,
          8804
        ],
        "op": "JUMP",
        "path": "1"
      },
      "7891": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13752,
          14233
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7892": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13853,
          13864
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "7925": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13883,
          13904
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 124,
        "value": "0x2"
      },
      "7927": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13883,
          13904
        ],
        "op": "DUP3",
        "path": "23"
      },
      "7928": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13883,
          13904
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7929": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13883,
          13904
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "7930": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13883,
          13904
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7931": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13883,
          13904
        ],
        "op": "DUP5",
        "path": "23"
      },
      "7932": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13883,
          13904
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7933": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13883,
          13904
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "7934": {
        "branch": 257,
        "fn": "SharpeAI._checkRange",
        "offset": [
          13883,
          13904
        ],
        "op": "SLT",
        "path": "23"
      },
      "7935": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1F1A"
      },
      "7938": {
        "branch": 257,
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7939": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "7941": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "7942": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "7946": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "7948": {
        "op": "SHL"
      },
      "7949": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7950": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "7951": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "7953": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "ADD",
        "path": "23"
      },
      "7954": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "7957": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7958": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x38AB"
      },
      "7961": {
        "fn": "SharpeAI._checkRange",
        "jump": "i",
        "offset": [
          13875,
          13930
        ],
        "op": "JUMP",
        "path": "23"
      },
      "7962": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13875,
          13930
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "7963": {
        "op": "PUSH3",
        "value": "0xD89E7"
      },
      "7967": {
        "op": "NOT"
      },
      "7968": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13949,
          13979
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 125,
        "value": "0x2"
      },
      "7970": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13949,
          13979
        ],
        "op": "DUP5",
        "path": "23"
      },
      "7971": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13949,
          13979
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7972": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13949,
          13979
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "7973": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13949,
          13979
        ],
        "op": "SLT",
        "path": "23"
      },
      "7974": {
        "branch": 258,
        "fn": "SharpeAI._checkRange",
        "offset": [
          13949,
          13979
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "7975": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1F42"
      },
      "7978": {
        "branch": 258,
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "7979": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "7981": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "7982": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "7986": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "7988": {
        "op": "SHL"
      },
      "7989": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "DUP2",
        "path": "23"
      },
      "7990": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "7991": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "7993": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "ADD",
        "path": "23"
      },
      "7994": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "7997": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "7998": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3C68"
      },
      "8001": {
        "fn": "SharpeAI._checkRange",
        "jump": "i",
        "offset": [
          13941,
          14001
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8002": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          13941,
          14001
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8003": {
        "offset": [
          637,
          646
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x1F4F"
      },
      "8006": {
        "op": "PUSH3",
        "value": "0xD89E7"
      },
      "8010": {
        "op": "NOT"
      },
      "8011": {
        "offset": [
          637,
          646
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3FD3"
      },
      "8014": {
        "fn": "SharpeAI._checkRange",
        "jump": "i",
        "offset": [
          637,
          646
        ],
        "op": "JUMP",
        "path": "20"
      },
      "8015": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          637,
          646
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "8016": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14020,
          14050
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 126,
        "value": "0x2"
      },
      "8018": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14020,
          14050
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "8019": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14020,
          14029
        ],
        "op": "DUP3",
        "path": "23"
      },
      "8020": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14020,
          14050
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "8022": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14020,
          14050
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "8023": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14020,
          14050
        ],
        "op": "SGT",
        "path": "23"
      },
      "8024": {
        "branch": 259,
        "fn": "SharpeAI._checkRange",
        "offset": [
          14020,
          14050
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8025": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1F74"
      },
      "8028": {
        "branch": 259,
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8029": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8031": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8032": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "8036": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "8038": {
        "op": "SHL"
      },
      "8039": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8040": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "8041": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "8043": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "ADD",
        "path": "23"
      },
      "8044": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "8047": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8048": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3CD7"
      },
      "8051": {
        "fn": "SharpeAI._checkRange",
        "jump": "i",
        "offset": [
          14012,
          14073
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8052": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14012,
          14073
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8053": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14092,
          14116
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 127,
        "value": "0x1F7E"
      },
      "8056": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14104,
          14116
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8057": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14092,
          14101
        ],
        "op": "DUP5",
        "path": "23"
      },
      "8058": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14092,
          14116
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3F9D"
      },
      "8061": {
        "fn": "SharpeAI._checkRange",
        "jump": "i",
        "offset": [
          14092,
          14116
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8062": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14092,
          14116
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8063": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14092,
          14121
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "8065": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14092,
          14121
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "8066": {
        "branch": 260,
        "fn": "SharpeAI._checkRange",
        "offset": [
          14092,
          14121
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8067": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1F9E"
      },
      "8070": {
        "branch": 260,
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8071": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8073": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8074": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "8078": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "8080": {
        "op": "SHL"
      },
      "8081": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8082": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "8083": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "8085": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "ADD",
        "path": "23"
      },
      "8086": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "8089": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8090": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x391C"
      },
      "8093": {
        "fn": "SharpeAI._checkRange",
        "jump": "i",
        "offset": [
          14084,
          14149
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8094": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14084,
          14149
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8095": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14168,
          14192
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 128,
        "value": "0x1FA8"
      },
      "8098": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14180,
          14192
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8099": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14168,
          14177
        ],
        "op": "DUP4",
        "path": "23"
      },
      "8100": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14168,
          14192
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3F9D"
      },
      "8103": {
        "fn": "SharpeAI._checkRange",
        "jump": "i",
        "offset": [
          14168,
          14192
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8104": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14168,
          14192
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8105": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14168,
          14197
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x2"
      },
      "8107": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14168,
          14197
        ],
        "op": "SIGNEXTEND",
        "path": "23"
      },
      "8108": {
        "branch": 261,
        "fn": "SharpeAI._checkRange",
        "offset": [
          14168,
          14197
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8109": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x5DF"
      },
      "8112": {
        "branch": 261,
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8113": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8115": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8116": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "8120": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "8122": {
        "op": "SHL"
      },
      "8123": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8124": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "8125": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "8127": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "ADD",
        "path": "23"
      },
      "8128": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x542"
      },
      "8131": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8132": {
        "fn": "SharpeAI._checkRange",
        "offset": [
          14160,
          14225
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x398A"
      },
      "8135": {
        "fn": "SharpeAI._checkRange",
        "jump": "i",
        "offset": [
          14160,
          14225
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8136": {
        "fn": "SharpeAI._position",
        "offset": [
          18267,
          18648
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8137": {
        "fn": "SharpeAI._position",
        "offset": [
          18384,
          18391
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8139": {
        "fn": "SharpeAI._position",
        "offset": [
          18406,
          18413
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8140": {
        "fn": "SharpeAI._position",
        "offset": [
          18428,
          18435
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8142": {
        "fn": "SharpeAI._position",
        "offset": [
          18450,
          18457
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8143": {
        "fn": "SharpeAI._position",
        "offset": [
          18472,
          18479
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8145": {
        "fn": "SharpeAI._position",
        "offset": [
          18517,
          18536
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8146": {
        "fn": "SharpeAI._position",
        "offset": [
          18539,
          18595
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1FDC"
      },
      "8149": {
        "fn": "SharpeAI._position",
        "offset": [
          18567,
          18571
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "8150": {
        "fn": "SharpeAI._position",
        "offset": [
          18574,
          18583
        ],
        "op": "DUP10",
        "path": "23"
      },
      "8151": {
        "fn": "SharpeAI._position",
        "offset": [
          18585,
          18594
        ],
        "op": "DUP10",
        "path": "23"
      },
      "8152": {
        "fn": "SharpeAI._position",
        "offset": [
          18539,
          18558
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2736"
      },
      "8155": {
        "fn": "SharpeAI._position",
        "jump": "i",
        "offset": [
          18539,
          18595
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8156": {
        "fn": "SharpeAI._position",
        "offset": [
          18539,
          18595
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8157": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 129,
        "value": "0x40"
      },
      "8159": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8160": {
        "op": "PUSH4",
        "value": "0x514EA4BF"
      },
      "8165": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "8167": {
        "op": "SHL"
      },
      "8168": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8169": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "8170": {
        "fn": "SharpeAI._position",
        "offset": [
          18517,
          18595
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8171": {
        "fn": "SharpeAI._position",
        "offset": [
          18517,
          18595
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "8172": {
        "op": "POP"
      },
      "8173": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8175": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8177": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8179": {
        "op": "SHL"
      },
      "8180": {
        "op": "SUB"
      },
      "8181": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18617
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "8214": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18627
        ],
        "op": "AND",
        "path": "23"
      },
      "8215": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18627
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8216": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18627
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x514EA4BF"
      },
      "8221": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18627
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8222": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x202B"
      },
      "8225": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8226": {
        "fn": "SharpeAI._position",
        "offset": [
          18517,
          18595
        ],
        "op": "DUP5",
        "path": "23"
      },
      "8227": {
        "fn": "SharpeAI._position",
        "offset": [
          18517,
          18595
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8228": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "8230": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "ADD",
        "path": "23"
      },
      "8231": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3756"
      },
      "8234": {
        "fn": "SharpeAI._position",
        "jump": "i",
        "offset": [
          18613,
          18640
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8235": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8236": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xA0"
      },
      "8238": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8240": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8241": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8242": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP4",
        "path": "23"
      },
      "8243": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "SUB",
        "path": "23"
      },
      "8244": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8245": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP7",
        "path": "23"
      },
      "8246": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8247": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "8248": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8249": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8250": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8251": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2043"
      },
      "8254": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8255": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8257": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8258": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "REVERT",
        "path": "23"
      },
      "8259": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8260": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "POP",
        "path": "23"
      },
      "8261": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "GAS",
        "path": "23"
      },
      "8262": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "STATICCALL",
        "path": "23"
      },
      "8263": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8264": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8265": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8266": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2057"
      },
      "8269": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8270": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "8271": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8273": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8274": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "8275": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "8276": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8278": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "REVERT",
        "path": "23"
      },
      "8279": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8280": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "POP",
        "path": "23"
      },
      "8281": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "POP",
        "path": "23"
      },
      "8282": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "POP",
        "path": "23"
      },
      "8283": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "POP",
        "path": "23"
      },
      "8284": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8286": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8287": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "8288": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "8290": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "NOT",
        "path": "23"
      },
      "8291": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "8293": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP3",
        "path": "23"
      },
      "8294": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "ADD",
        "path": "23"
      },
      "8295": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "AND",
        "path": "23"
      },
      "8296": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP3",
        "path": "23"
      },
      "8297": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "ADD",
        "path": "23"
      },
      "8298": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8299": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8301": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "8302": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "POP",
        "path": "23"
      },
      "8303": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8304": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "ADD",
        "path": "23"
      },
      "8305": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8306": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x207B"
      },
      "8309": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "8310": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8311": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3423"
      },
      "8314": {
        "fn": "SharpeAI._position",
        "jump": "i",
        "offset": [
          18613,
          18640
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8315": {
        "fn": "SharpeAI._position",
        "offset": [
          18613,
          18640
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8316": {
        "fn": "SharpeAI._position",
        "offset": [
          18606,
          18640
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8317": {
        "fn": "SharpeAI._position",
        "offset": [
          18606,
          18640
        ],
        "op": "SWAP13",
        "path": "23"
      },
      "8318": {
        "fn": "SharpeAI._position",
        "offset": [
          18606,
          18640
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "8319": {
        "fn": "SharpeAI._position",
        "offset": [
          18606,
          18640
        ],
        "op": "SWAP12",
        "path": "23"
      },
      "8320": {
        "op": "POP"
      },
      "8321": {
        "fn": "SharpeAI._position",
        "offset": [
          18606,
          18640
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8322": {
        "fn": "SharpeAI._position",
        "offset": [
          18606,
          18640
        ],
        "op": "SWAP10",
        "path": "23"
      },
      "8323": {
        "op": "POP"
      },
      "8324": {
        "fn": "SharpeAI._position",
        "offset": [
          18606,
          18640
        ],
        "op": "SWAP8",
        "path": "23"
      },
      "8325": {
        "op": "POP"
      },
      "8326": {
        "fn": "SharpeAI._position",
        "offset": [
          18606,
          18640
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8327": {
        "fn": "SharpeAI._position",
        "offset": [
          18606,
          18640
        ],
        "op": "SWAP6",
        "path": "23"
      },
      "8328": {
        "op": "POP"
      },
      "8329": {
        "fn": "SharpeAI._position",
        "offset": [
          18267,
          18648
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8330": {
        "op": "POP"
      },
      "8331": {
        "op": "POP"
      },
      "8332": {
        "op": "POP"
      },
      "8333": {
        "op": "POP"
      },
      "8334": {
        "fn": "SharpeAI._position",
        "jump": "o",
        "offset": [
          18267,
          18648
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8335": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8336": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14497,
          14512
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8338": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14497,
          14512
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8339": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14497,
          14512
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8340": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14497,
          14512
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8341": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8343": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8345": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "8347": {
        "op": "SHL"
      },
      "8348": {
        "op": "SUB"
      },
      "8349": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14644,
          14657
        ],
        "op": "DUP6",
        "path": "23"
      },
      "8350": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14644,
          14657
        ],
        "op": "AND",
        "path": "23"
      },
      "8351": {
        "branch": 262,
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14644,
          14657
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8352": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14640,
          14749
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x214A"
      },
      "8355": {
        "branch": 262,
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14640,
          14749
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8356": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 130,
        "value": "0x40"
      },
      "8358": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8359": {
        "op": "PUSH4",
        "value": "0xA34123A7"
      },
      "8364": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "8366": {
        "op": "SHL"
      },
      "8367": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8368": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "8369": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8371": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8373": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8375": {
        "op": "SHL"
      },
      "8376": {
        "op": "SUB"
      },
      "8377": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14699
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "8410": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14704
        ],
        "op": "AND",
        "path": "23"
      },
      "8411": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14704
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8412": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14704
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xA34123A7"
      },
      "8417": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14704
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8418": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x20F3"
      },
      "8421": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8422": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14705,
          14714
        ],
        "op": "DUP11",
        "path": "23"
      },
      "8423": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14705,
          14714
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8424": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14716,
          14725
        ],
        "op": "DUP11",
        "path": "23"
      },
      "8425": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14716,
          14725
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8426": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14727,
          14736
        ],
        "op": "DUP11",
        "path": "23"
      },
      "8427": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14727,
          14736
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8428": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "8430": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "ADD",
        "path": "23"
      },
      "8431": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x376D"
      },
      "8434": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          14695,
          14737
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8435": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8436": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8438": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8439": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8440": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8441": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP4",
        "path": "23"
      },
      "8442": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "SUB",
        "path": "23"
      },
      "8443": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8444": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8446": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP8",
        "path": "23"
      },
      "8447": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8448": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "8449": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8450": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8451": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8452": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x210C"
      },
      "8455": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8456": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8458": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8459": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "REVERT",
        "path": "23"
      },
      "8460": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8461": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "POP",
        "path": "23"
      },
      "8462": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "GAS",
        "path": "23"
      },
      "8463": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "CALL",
        "path": "23"
      },
      "8464": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8465": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8466": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8467": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2120"
      },
      "8470": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8471": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "8472": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8474": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8475": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "8476": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "8477": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8479": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "REVERT",
        "path": "23"
      },
      "8480": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8481": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "POP",
        "path": "23"
      },
      "8482": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "POP",
        "path": "23"
      },
      "8483": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "POP",
        "path": "23"
      },
      "8484": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "POP",
        "path": "23"
      },
      "8485": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8487": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8488": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "8489": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "8491": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "NOT",
        "path": "23"
      },
      "8492": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "8494": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP3",
        "path": "23"
      },
      "8495": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "ADD",
        "path": "23"
      },
      "8496": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "AND",
        "path": "23"
      },
      "8497": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP3",
        "path": "23"
      },
      "8498": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "ADD",
        "path": "23"
      },
      "8499": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8500": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8502": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "8503": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "POP",
        "path": "23"
      },
      "8504": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8505": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "ADD",
        "path": "23"
      },
      "8506": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8507": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2144"
      },
      "8510": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "8511": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8512": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x32E2"
      },
      "8515": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          14695,
          14737
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8516": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14695,
          14737
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8517": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14674,
          14737
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8518": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14674,
          14737
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "8519": {
        "op": "POP"
      },
      "8520": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14674,
          14737
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "8521": {
        "op": "POP"
      },
      "8522": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14640,
          14749
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8523": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14820,
          14836
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8525": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14838,
          14854
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8526": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          14875
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "8559": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8561": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8563": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8565": {
        "op": "SHL"
      },
      "8566": {
        "op": "SUB"
      },
      "8567": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          14883
        ],
        "op": "AND",
        "path": "23"
      },
      "8568": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          14883
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x4F1EB3D8"
      },
      "8573": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14910,
          14914
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "8574": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14934,
          14943
        ],
        "op": "DUP12",
        "path": "23"
      },
      "8575": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14962,
          14971
        ],
        "op": "DUP12",
        "path": "23"
      },
      "8576": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8578": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8580": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "8582": {
        "op": "SHL"
      },
      "8583": {
        "op": "SUB"
      },
      "8584": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15026,
          15043
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8585": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8587": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8588": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP7",
        "path": "23"
      },
      "8589": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xFFFFFFFF"
      },
      "8594": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "AND",
        "path": "23"
      },
      "8595": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "8597": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SHL",
        "path": "23"
      },
      "8598": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8599": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "8600": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "8602": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "ADD",
        "path": "23"
      },
      "8603": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x21A8"
      },
      "8606": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SWAP6",
        "path": "23"
      },
      "8607": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "8608": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8609": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "8610": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "8611": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8612": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x36F5"
      },
      "8615": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          14871,
          15058
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8616": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8617": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8619": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8620": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8621": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8622": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP4",
        "path": "23"
      },
      "8623": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SUB",
        "path": "23"
      },
      "8624": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8625": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8627": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP8",
        "path": "23"
      },
      "8628": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8629": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "8630": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8631": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8632": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8633": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x21C1"
      },
      "8636": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8637": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8639": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8640": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "REVERT",
        "path": "23"
      },
      "8641": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8642": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "POP",
        "path": "23"
      },
      "8643": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "GAS",
        "path": "23"
      },
      "8644": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "CALL",
        "path": "23"
      },
      "8645": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8646": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8647": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8648": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x21D5"
      },
      "8651": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8652": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "8653": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8655": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8656": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "8657": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "8658": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8660": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "REVERT",
        "path": "23"
      },
      "8661": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8662": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "POP",
        "path": "23"
      },
      "8663": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "POP",
        "path": "23"
      },
      "8664": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "POP",
        "path": "23"
      },
      "8665": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "POP",
        "path": "23"
      },
      "8666": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8668": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8669": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "8670": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "8672": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "NOT",
        "path": "23"
      },
      "8673": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "8675": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP3",
        "path": "23"
      },
      "8676": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "ADD",
        "path": "23"
      },
      "8677": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "AND",
        "path": "23"
      },
      "8678": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP3",
        "path": "23"
      },
      "8679": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "ADD",
        "path": "23"
      },
      "8680": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8681": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8683": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "8684": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "POP",
        "path": "23"
      },
      "8685": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8686": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "ADD",
        "path": "23"
      },
      "8687": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8688": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x21F9"
      },
      "8691": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "8692": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8693": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x33F5"
      },
      "8696": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          14871,
          15058
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8697": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14871,
          15058
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8698": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8700": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8702": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "8704": {
        "op": "SHL"
      },
      "8705": {
        "op": "SUB"
      },
      "8706": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14819,
          15058
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "8707": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14819,
          15058
        ],
        "op": "DUP3",
        "path": "23"
      },
      "8708": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14819,
          15058
        ],
        "op": "AND",
        "path": "23"
      },
      "8709": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14819,
          15058
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8710": {
        "op": "POP"
      },
      "8711": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14819,
          15058
        ],
        "op": "AND",
        "path": "23"
      },
      "8712": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14819,
          15058
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8713": {
        "op": "POP"
      },
      "8714": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15086,
          15107
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 131,
        "value": "0x2213"
      },
      "8717": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14819,
          15058
        ],
        "op": "DUP3",
        "path": "23"
      },
      "8718": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15099,
          15106
        ],
        "op": "DUP8",
        "path": "23"
      },
      "8719": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15086,
          15098
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x197B"
      },
      "8722": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          15086,
          15107
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8723": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15086,
          15107
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8724": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15071,
          15107
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8725": {
        "op": "POP"
      },
      "8726": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15133,
          15154
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 132,
        "value": "0x221F"
      },
      "8729": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15133,
          15141
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8730": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15146,
          15153
        ],
        "op": "DUP7",
        "path": "23"
      },
      "8731": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15133,
          15145
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x197B"
      },
      "8734": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          15133,
          15154
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8735": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15133,
          15154
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8736": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15299,
          15310
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x6"
      },
      "8738": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15299,
          15310
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "8739": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15118,
          15154
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8740": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15118,
          15154
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8741": {
        "op": "POP"
      },
      "8742": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15165,
          15188
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8744": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15165,
          15188
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8745": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15165,
          15188
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8746": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15165,
          15188
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8747": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15325,
          15341
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8748": {
        "branch": 263,
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15325,
          15341
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "8749": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15321,
          15783
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2290"
      },
      "8752": {
        "branch": 263,
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15321,
          15783
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "8753": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15376,
          15415
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 133,
        "value": "0x2241"
      },
      "8756": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15411,
          15414
        ],
        "op": "PUSH3",
        "path": "23",
        "value": "0xF4240"
      },
      "8760": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15376,
          15406
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "8763": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15376,
          15388
        ],
        "op": "DUP10",
        "path": "23"
      },
      "8764": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15393,
          15405
        ],
        "op": "DUP5",
        "path": "23"
      },
      "8765": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15376,
          15392
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "8768": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          15376,
          15406
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8769": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15376,
          15415
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8770": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15358,
          15415
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "8771": {
        "op": "POP"
      },
      "8772": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15448,
          15487
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 134,
        "value": "0x2254"
      },
      "8775": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15483,
          15486
        ],
        "op": "PUSH3",
        "path": "23",
        "value": "0xF4240"
      },
      "8779": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15448,
          15478
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "8782": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15448,
          15460
        ],
        "op": "DUP9",
        "path": "23"
      },
      "8783": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15465,
          15477
        ],
        "op": "DUP5",
        "path": "23"
      },
      "8784": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15448,
          15464
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "8787": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          15448,
          15478
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8788": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15448,
          15487
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8789": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15430,
          15487
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "8790": {
        "op": "POP"
      },
      "8791": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15517,
          15550
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 135,
        "value": "0x2260"
      },
      "8794": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15517,
          15529
        ],
        "op": "DUP8",
        "path": "23"
      },
      "8795": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15534,
          15549
        ],
        "op": "DUP5",
        "path": "23"
      },
      "8796": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15517,
          15533
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x197B"
      },
      "8799": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          15517,
          15550
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8800": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15517,
          15550
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8801": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15502,
          15550
        ],
        "op": "SWAP7",
        "path": "23"
      },
      "8802": {
        "op": "POP"
      },
      "8803": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15580,
          15613
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 136,
        "value": "0x226C"
      },
      "8806": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15580,
          15592
        ],
        "op": "DUP7",
        "path": "23"
      },
      "8807": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15597,
          15612
        ],
        "op": "DUP4",
        "path": "23"
      },
      "8808": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15580,
          15596
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x197B"
      },
      "8811": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          15580,
          15613
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8812": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15580,
          15613
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8813": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15651,
          15671
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 137,
        "value": "0xB"
      },
      "8815": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15651,
          15671
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "8816": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15565,
          15613
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8817": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15565,
          15613
        ],
        "op": "SWAP7",
        "path": "23"
      },
      "8818": {
        "op": "POP"
      },
      "8819": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15651,
          15692
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x227C"
      },
      "8822": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15651,
          15692
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8823": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15676,
          15691
        ],
        "op": "DUP5",
        "path": "23"
      },
      "8824": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15651,
          15675
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24DE"
      },
      "8827": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          15651,
          15692
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8828": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15651,
          15692
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8829": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15628,
          15648
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xB"
      },
      "8831": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15628,
          15692
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "8832": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15730,
          15750
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 138,
        "value": "0xC"
      },
      "8834": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15730,
          15750
        ],
        "op": "SLOAD",
        "path": "23"
      },
      "8835": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15730,
          15771
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x228C"
      },
      "8838": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15730,
          15771
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8839": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15755,
          15770
        ],
        "op": "DUP4",
        "path": "23"
      },
      "8840": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15730,
          15754
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24DE"
      },
      "8843": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          15730,
          15771
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8844": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15730,
          15771
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8845": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15707,
          15727
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xC"
      },
      "8847": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15707,
          15771
        ],
        "op": "SSTORE",
        "path": "23"
      },
      "8848": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15321,
          15783
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8849": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "PUSH32",
        "path": "23",
        "statement": 139,
        "value": "0x1AC56D7E866E3F5EA9AA92AA11758EAD39A0A5F013F3FEFB0F47CB9D008EDD27"
      },
      "8882": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15810,
          15822
        ],
        "op": "DUP8",
        "path": "23"
      },
      "8883": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15824,
          15836
        ],
        "op": "DUP8",
        "path": "23"
      },
      "8884": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15838,
          15853
        ],
        "op": "DUP6",
        "path": "23"
      },
      "8885": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15855,
          15870
        ],
        "op": "DUP6",
        "path": "23"
      },
      "8886": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8888": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8889": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x22C5"
      },
      "8892": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "8893": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8894": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "8895": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "8896": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8897": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3E83"
      },
      "8900": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "i",
        "offset": [
          15798,
          15871
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8901": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8902": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8904": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8905": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8906": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "8907": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "SUB",
        "path": "23"
      },
      "8908": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "8909": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          15798,
          15871
        ],
        "op": "LOG1",
        "path": "23"
      },
      "8910": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "POP",
        "path": "23"
      },
      "8911": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "POP",
        "path": "23"
      },
      "8912": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "POP",
        "path": "23"
      },
      "8913": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "POP",
        "path": "23"
      },
      "8914": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "POP",
        "path": "23"
      },
      "8915": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8916": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "POP",
        "path": "23"
      },
      "8917": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8918": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "POP",
        "path": "23"
      },
      "8919": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8920": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "POP",
        "path": "23"
      },
      "8921": {
        "fn": "SharpeAI._burnAndCollect",
        "offset": [
          14335,
          15879
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "8922": {
        "fn": "SharpeAI._burnAndCollect",
        "jump": "o",
        "offset": [
          14335,
          15879
        ],
        "op": "JUMP",
        "path": "23"
      },
      "8923": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19300,
          19823
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "8924": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19464,
          19471
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "8926": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19485,
          19505
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8927": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19525
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "8960": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8962": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "8964": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "8966": {
        "op": "SHL"
      },
      "8967": {
        "op": "SUB"
      },
      "8968": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19531
        ],
        "op": "AND",
        "path": "23"
      },
      "8969": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19531
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x3850C7BD"
      },
      "8974": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8976": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8977": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8978": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xFFFFFFFF"
      },
      "8983": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "AND",
        "path": "23"
      },
      "8984": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "8986": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "SHL",
        "path": "23"
      },
      "8987": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP2",
        "path": "23"
      },
      "8988": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "8989": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "8991": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "ADD",
        "path": "23"
      },
      "8992": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "8994": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "8996": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "8997": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP1",
        "path": "23"
      },
      "8998": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP4",
        "path": "23"
      },
      "8999": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "SUB",
        "path": "23"
      },
      "9000": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP2",
        "path": "23"
      },
      "9001": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP7",
        "path": "23"
      },
      "9002": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9003": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "9004": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "9005": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9006": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "9007": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2337"
      },
      "9010": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "9011": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9013": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9014": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "REVERT",
        "path": "23"
      },
      "9015": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9016": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9017": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "GAS",
        "path": "23"
      },
      "9018": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "STATICCALL",
        "path": "23"
      },
      "9019": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "9020": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9021": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "9022": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x234B"
      },
      "9025": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "9026": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "9027": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9029": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9030": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "9031": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "9032": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9034": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "REVERT",
        "path": "23"
      },
      "9035": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9036": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9037": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9038": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9039": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9040": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "9042": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "9043": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "9044": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "9046": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "NOT",
        "path": "23"
      },
      "9047": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "9049": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP3",
        "path": "23"
      },
      "9050": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "ADD",
        "path": "23"
      },
      "9051": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "AND",
        "path": "23"
      },
      "9052": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP3",
        "path": "23"
      },
      "9053": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "ADD",
        "path": "23"
      },
      "9054": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9055": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "9057": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "9058": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9059": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "DUP2",
        "path": "23"
      },
      "9060": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "ADD",
        "path": "23"
      },
      "9061": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9062": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x236F"
      },
      "9065": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "9066": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9067": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3484"
      },
      "9070": {
        "fn": "SharpeAI._liquidityForAmounts",
        "jump": "i",
        "offset": [
          19521,
          19533
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9071": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19521,
          19533
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9072": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19484,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9073": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19484,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9074": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19484,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9075": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19484,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9076": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19484,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9077": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19484,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9078": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19484,
          19533
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9079": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19484,
          19533
        ],
        "op": "POP",
        "path": "23"
      },
      "9080": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19564,
          19815
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 140,
        "value": "0x2394"
      },
      "9083": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19622,
          19634
        ],
        "op": "DUP2",
        "path": "23"
      },
      "9084": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19653,
          19691
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2384"
      },
      "9087": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19681,
          19690
        ],
        "op": "DUP9",
        "path": "23"
      },
      "9088": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19653,
          19680
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x276C"
      },
      "9091": {
        "fn": "SharpeAI._liquidityForAmounts",
        "jump": "i",
        "offset": [
          19653,
          19691
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9092": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19653,
          19691
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9093": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19710,
          19748
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x238D"
      },
      "9096": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19738,
          19747
        ],
        "op": "DUP9",
        "path": "23"
      },
      "9097": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19710,
          19737
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x276C"
      },
      "9100": {
        "fn": "SharpeAI._liquidityForAmounts",
        "jump": "i",
        "offset": [
          19710,
          19748
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9101": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19710,
          19748
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9102": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19767,
          19774
        ],
        "op": "DUP8",
        "path": "23"
      },
      "9103": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19793,
          19800
        ],
        "op": "DUP8",
        "path": "23"
      },
      "9104": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19564,
          19603
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2B46"
      },
      "9107": {
        "fn": "SharpeAI._liquidityForAmounts",
        "jump": "i",
        "offset": [
          19564,
          19815
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9108": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19564,
          19815
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9109": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19544,
          19815
        ],
        "op": "SWAP7",
        "path": "23"
      },
      "9110": {
        "fn": "SharpeAI._liquidityForAmounts",
        "offset": [
          19300,
          19823
        ],
        "op": "SWAP6",
        "path": "23"
      },
      "9111": {
        "op": "POP"
      },
      "9112": {
        "op": "POP"
      },
      "9113": {
        "op": "POP"
      },
      "9114": {
        "op": "POP"
      },
      "9115": {
        "op": "POP"
      },
      "9116": {
        "op": "POP"
      },
      "9117": {
        "fn": "SharpeAI._liquidityForAmounts",
        "jump": "o",
        "offset": [
          19300,
          19823
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9118": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          15952,
          16197
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9119": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9121": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9123": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "9125": {
        "op": "SHL"
      },
      "9126": {
        "op": "SUB"
      },
      "9127": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16087,
          16100
        ],
        "op": "DUP2",
        "path": "23"
      },
      "9128": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16087,
          16100
        ],
        "op": "AND",
        "path": "23"
      },
      "9129": {
        "branch": 264,
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16087,
          16100
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "9130": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16083,
          16190
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x5DF"
      },
      "9133": {
        "branch": 264,
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16083,
          16190
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "9134": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16178
        ],
        "op": "PUSH1",
        "path": "23",
        "statement": 141,
        "value": "0x40"
      },
      "9136": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16178
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "9137": {
        "op": "PUSH4",
        "value": "0x3C8A7D8D"
      },
      "9142": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "9144": {
        "op": "SHL"
      },
      "9145": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16178
        ],
        "op": "DUP2",
        "path": "23"
      },
      "9146": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16178
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "9147": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9149": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9151": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9153": {
        "op": "SHL"
      },
      "9154": {
        "op": "SUB"
      },
      "9155": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16121
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "9188": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16126
        ],
        "op": "AND",
        "path": "23"
      },
      "9189": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16126
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9190": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16126
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x3C8A7D8D"
      },
      "9195": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16126
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9196": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16178
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1C72"
      },
      "9199": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16178
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9200": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16135,
          16139
        ],
        "op": "ADDRESS",
        "path": "23"
      },
      "9201": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16135,
          16139
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9202": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16142,
          16151
        ],
        "op": "DUP8",
        "path": "23"
      },
      "9203": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16142,
          16151
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9204": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16153,
          16162
        ],
        "op": "DUP8",
        "path": "23"
      },
      "9205": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16153,
          16162
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9206": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16164,
          16173
        ],
        "op": "DUP8",
        "path": "23"
      },
      "9207": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16164,
          16173
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9208": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16178
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "9210": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16178
        ],
        "op": "ADD",
        "path": "23"
      },
      "9211": {
        "fn": "SharpeAI._mintLiquidity",
        "offset": [
          16117,
          16178
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x36B3"
      },
      "9214": {
        "fn": "SharpeAI._mintLiquidity",
        "jump": "i",
        "offset": [
          16117,
          16178
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9215": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18734,
          19218
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9216": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18874,
          18881
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9218": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18883,
          18890
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9219": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18904,
          18924
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9221": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18944
        ],
        "op": "PUSH32",
        "path": "23",
        "value": "0x0"
      },
      "9254": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9256": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9258": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9260": {
        "op": "SHL"
      },
      "9261": {
        "op": "SUB"
      },
      "9262": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18950
        ],
        "op": "AND",
        "path": "23"
      },
      "9263": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18950
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0x3850C7BD"
      },
      "9268": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "9270": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "9271": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP2",
        "path": "23"
      },
      "9272": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xFFFFFFFF"
      },
      "9277": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "AND",
        "path": "23"
      },
      "9278": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "9280": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "SHL",
        "path": "23"
      },
      "9281": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP2",
        "path": "23"
      },
      "9282": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "9283": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "9285": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "ADD",
        "path": "23"
      },
      "9286": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0xE0"
      },
      "9288": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "9290": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "9291": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9292": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP4",
        "path": "23"
      },
      "9293": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "SUB",
        "path": "23"
      },
      "9294": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP2",
        "path": "23"
      },
      "9295": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP7",
        "path": "23"
      },
      "9296": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9297": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "EXTCODESIZE",
        "path": "23"
      },
      "9298": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "9299": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9300": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "9301": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x245D"
      },
      "9304": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "9305": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9307": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9308": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "REVERT",
        "path": "23"
      },
      "9309": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9310": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9311": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "GAS",
        "path": "23"
      },
      "9312": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "STATICCALL",
        "path": "23"
      },
      "9313": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "9314": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9315": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "9316": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2471"
      },
      "9319": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "9320": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "9321": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9323": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9324": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "RETURNDATACOPY",
        "path": "23"
      },
      "9325": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "9326": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9328": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "REVERT",
        "path": "23"
      },
      "9329": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9330": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9331": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9332": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9333": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9334": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "9336": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "MLOAD",
        "path": "23"
      },
      "9337": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "RETURNDATASIZE",
        "path": "23"
      },
      "9338": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "9340": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "NOT",
        "path": "23"
      },
      "9341": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1F"
      },
      "9343": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP3",
        "path": "23"
      },
      "9344": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "ADD",
        "path": "23"
      },
      "9345": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "AND",
        "path": "23"
      },
      "9346": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP3",
        "path": "23"
      },
      "9347": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "ADD",
        "path": "23"
      },
      "9348": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9349": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x40"
      },
      "9351": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "9352": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9353": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "DUP2",
        "path": "23"
      },
      "9354": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "ADD",
        "path": "23"
      },
      "9355": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9356": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2495"
      },
      "9359": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "9360": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9361": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x3484"
      },
      "9364": {
        "fn": "SharpeAI._amountsForLiquidity",
        "jump": "i",
        "offset": [
          18940,
          18952
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9365": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18940,
          18952
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9366": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18903,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9367": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18903,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9368": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18903,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9369": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18903,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9370": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18903,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9371": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18903,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9372": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18903,
          18952
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9373": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18903,
          18952
        ],
        "op": "POP",
        "path": "23"
      },
      "9374": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18983,
          19210
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 142,
        "value": "0x24B9"
      },
      "9377": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          19041,
          19053
        ],
        "op": "DUP2",
        "path": "23"
      },
      "9378": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          19072,
          19110
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24AA"
      },
      "9381": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          19100,
          19109
        ],
        "op": "DUP9",
        "path": "23"
      },
      "9382": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          19072,
          19099
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x276C"
      },
      "9385": {
        "fn": "SharpeAI._amountsForLiquidity",
        "jump": "i",
        "offset": [
          19072,
          19110
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9386": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          19072,
          19110
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9387": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          19129,
          19167
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24B3"
      },
      "9390": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          19157,
          19166
        ],
        "op": "DUP9",
        "path": "23"
      },
      "9391": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          19129,
          19156
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x276C"
      },
      "9394": {
        "fn": "SharpeAI._amountsForLiquidity",
        "jump": "i",
        "offset": [
          19129,
          19167
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9395": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          19129,
          19167
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9396": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          19186,
          19195
        ],
        "op": "DUP8",
        "path": "23"
      },
      "9397": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18983,
          19022
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2C0A"
      },
      "9400": {
        "fn": "SharpeAI._amountsForLiquidity",
        "jump": "i",
        "offset": [
          18983,
          19210
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9401": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18983,
          19210
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9402": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18963,
          19210
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "9403": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18963,
          19210
        ],
        "op": "POP",
        "path": "23"
      },
      "9404": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18963,
          19210
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "9405": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18963,
          19210
        ],
        "op": "POP",
        "path": "23"
      },
      "9406": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18963,
          19210
        ],
        "op": "POP",
        "path": "23"
      },
      "9407": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18734,
          19218
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "9408": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18734,
          19218
        ],
        "op": "POP",
        "path": "23"
      },
      "9409": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18734,
          19218
        ],
        "op": "SWAP4",
        "path": "23"
      },
      "9410": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18734,
          19218
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "9411": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18734,
          19218
        ],
        "op": "POP",
        "path": "23"
      },
      "9412": {
        "fn": "SharpeAI._amountsForLiquidity",
        "offset": [
          18734,
          19218
        ],
        "op": "POP",
        "path": "23"
      },
      "9413": {
        "fn": "SharpeAI._amountsForLiquidity",
        "jump": "o",
        "offset": [
          18734,
          19218
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9414": {
        "fn": "SafeMath.mul",
        "offset": [
          3451,
          3547
        ],
        "op": "JUMPDEST",
        "path": "8"
      },
      "9415": {
        "fn": "SafeMath.mul",
        "offset": [
          3509,
          3516
        ],
        "op": "PUSH1",
        "path": "8",
        "value": "0x0"
      },
      "9417": {
        "fn": "SafeMath.mul",
        "offset": [
          3535,
          3540
        ],
        "op": "PUSH2",
        "path": "8",
        "statement": 143,
        "value": "0x76C"
      },
      "9420": {
        "fn": "SafeMath.mul",
        "offset": [
          3539,
          3540
        ],
        "op": "DUP3",
        "path": "8"
      },
      "9421": {
        "fn": "SafeMath.mul",
        "offset": [
          3535,
          3536
        ],
        "op": "DUP5",
        "path": "8"
      },
      "9422": {
        "fn": "SafeMath.mul",
        "offset": [
          3535,
          3540
        ],
        "op": "PUSH2",
        "path": "8",
        "value": "0x3ED8"
      },
      "9425": {
        "fn": "SafeMath.mul",
        "jump": "i",
        "offset": [
          3535,
          3540
        ],
        "op": "JUMP",
        "path": "8"
      },
      "9426": {
        "fn": "SafeMath.div",
        "offset": [
          3836,
          3932
        ],
        "op": "JUMPDEST",
        "path": "8"
      },
      "9427": {
        "fn": "SafeMath.div",
        "offset": [
          3894,
          3901
        ],
        "op": "PUSH1",
        "path": "8",
        "value": "0x0"
      },
      "9429": {
        "fn": "SafeMath.div",
        "offset": [
          3920,
          3925
        ],
        "op": "PUSH2",
        "path": "8",
        "statement": 144,
        "value": "0x76C"
      },
      "9432": {
        "fn": "SafeMath.div",
        "offset": [
          3924,
          3925
        ],
        "op": "DUP3",
        "path": "8"
      },
      "9433": {
        "fn": "SafeMath.div",
        "offset": [
          3920,
          3921
        ],
        "op": "DUP5",
        "path": "8"
      },
      "9434": {
        "fn": "SafeMath.div",
        "offset": [
          3920,
          3925
        ],
        "op": "PUSH2",
        "path": "8",
        "value": "0x3EC4"
      },
      "9437": {
        "fn": "SafeMath.div",
        "jump": "i",
        "offset": [
          3920,
          3925
        ],
        "op": "JUMP",
        "path": "8"
      },
      "9438": {
        "fn": "SafeMath.add",
        "offset": [
          2741,
          2837
        ],
        "op": "JUMPDEST",
        "path": "8"
      },
      "9439": {
        "fn": "SafeMath.add",
        "offset": [
          2799,
          2806
        ],
        "op": "PUSH1",
        "path": "8",
        "value": "0x0"
      },
      "9441": {
        "fn": "SafeMath.add",
        "offset": [
          2825,
          2830
        ],
        "op": "PUSH2",
        "path": "8",
        "statement": 145,
        "value": "0x76C"
      },
      "9444": {
        "fn": "SafeMath.add",
        "offset": [
          2829,
          2830
        ],
        "op": "DUP3",
        "path": "8"
      },
      "9445": {
        "fn": "SafeMath.add",
        "offset": [
          2825,
          2826
        ],
        "op": "DUP5",
        "path": "8"
      },
      "9446": {
        "fn": "SafeMath.add",
        "offset": [
          2825,
          2830
        ],
        "op": "PUSH2",
        "path": "8",
        "value": "0x3EAC"
      },
      "9449": {
        "fn": "SafeMath.add",
        "jump": "i",
        "offset": [
          2825,
          2830
        ],
        "op": "JUMP",
        "path": "8"
      },
      "9450": {
        "fn": "ERC20._burn",
        "offset": [
          9124,
          9700
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "9451": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9453": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9455": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9457": {
        "op": "SHL"
      },
      "9458": {
        "op": "SUB"
      },
      "9459": {
        "fn": "ERC20._burn",
        "offset": [
          9207,
          9228
        ],
        "op": "DUP3",
        "path": "1",
        "statement": 146
      },
      "9460": {
        "branch": 279,
        "fn": "ERC20._burn",
        "offset": [
          9207,
          9228
        ],
        "op": "AND",
        "path": "1"
      },
      "9461": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2510"
      },
      "9464": {
        "branch": 279,
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "9465": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "9467": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "9468": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "9472": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "9474": {
        "op": "SHL"
      },
      "9475": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "DUP2",
        "path": "1"
      },
      "9476": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "9477": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "9479": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "ADD",
        "path": "1"
      },
      "9480": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x542"
      },
      "9483": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9484": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3B7D"
      },
      "9487": {
        "fn": "ERC20._burn",
        "jump": "i",
        "offset": [
          9199,
          9266
        ],
        "op": "JUMP",
        "path": "1"
      },
      "9488": {
        "fn": "ERC20._burn",
        "offset": [
          9199,
          9266
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "9489": {
        "fn": "ERC20._burn",
        "offset": [
          9277,
          9326
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 147,
        "value": "0x251C"
      },
      "9492": {
        "fn": "ERC20._burn",
        "offset": [
          9298,
          9305
        ],
        "op": "DUP3",
        "path": "1"
      },
      "9493": {
        "fn": "ERC20._burn",
        "offset": [
          9315,
          9316
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "9495": {
        "fn": "ERC20._burn",
        "offset": [
          9319,
          9325
        ],
        "op": "DUP4",
        "path": "1"
      },
      "9496": {
        "fn": "ERC20._burn",
        "offset": [
          9277,
          9297
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5DF"
      },
      "9499": {
        "fn": "ERC20._burn",
        "jump": "i",
        "offset": [
          9277,
          9326
        ],
        "op": "JUMP",
        "path": "1"
      },
      "9500": {
        "fn": "ERC20._burn",
        "offset": [
          9277,
          9326
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "9501": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9503": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9505": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9507": {
        "op": "SHL"
      },
      "9508": {
        "op": "SUB"
      },
      "9509": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "DUP3",
        "path": "1"
      },
      "9510": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "AND",
        "path": "1"
      },
      "9511": {
        "fn": "ERC20._burn",
        "offset": [
          9337,
          9359
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "9513": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9514": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "DUP2",
        "path": "1"
      },
      "9515": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "9516": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "9518": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "DUP2",
        "path": "1"
      },
      "9519": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9520": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "9521": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "9523": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9524": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "9525": {
        "fn": "ERC20._burn",
        "offset": [
          9362,
          9380
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "9526": {
        "fn": "ERC20._burn",
        "offset": [
          9398,
          9422
        ],
        "op": "DUP2",
        "path": "1",
        "statement": 148
      },
      "9527": {
        "fn": "ERC20._burn",
        "offset": [
          9398,
          9422
        ],
        "op": "DUP2",
        "path": "1"
      },
      "9528": {
        "fn": "ERC20._burn",
        "offset": [
          9398,
          9422
        ],
        "op": "LT",
        "path": "1"
      },
      "9529": {
        "branch": 280,
        "fn": "ERC20._burn",
        "offset": [
          9398,
          9422
        ],
        "op": "ISZERO",
        "path": "1"
      },
      "9530": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2555"
      },
      "9533": {
        "branch": 280,
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "JUMPI",
        "path": "1"
      },
      "9534": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "9536": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "9537": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "9541": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "9543": {
        "op": "SHL"
      },
      "9544": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "DUP2",
        "path": "1"
      },
      "9545": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "9546": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x4"
      },
      "9548": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "ADD",
        "path": "1"
      },
      "9549": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x542"
      },
      "9552": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9553": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x384D"
      },
      "9556": {
        "fn": "ERC20._burn",
        "jump": "i",
        "offset": [
          9390,
          9461
        ],
        "op": "JUMP",
        "path": "1"
      },
      "9557": {
        "fn": "ERC20._burn",
        "offset": [
          9390,
          9461
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "9558": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9560": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9562": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9564": {
        "op": "SHL"
      },
      "9565": {
        "op": "SUB"
      },
      "9566": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "DUP4",
        "path": "1",
        "statement": 149
      },
      "9567": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "AND",
        "path": "1"
      },
      "9568": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9504
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "9570": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9571": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "DUP2",
        "path": "1"
      },
      "9572": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "9573": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x20"
      },
      "9575": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "DUP2",
        "path": "1"
      },
      "9576": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9577": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "MSTORE",
        "path": "1"
      },
      "9578": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "9580": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "DUP2",
        "path": "1"
      },
      "9581": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9513
        ],
        "op": "KECCAK256",
        "path": "1"
      },
      "9582": {
        "fn": "ERC20._burn",
        "offset": [
          9516,
          9539
        ],
        "op": "DUP4",
        "path": "1"
      },
      "9583": {
        "fn": "ERC20._burn",
        "offset": [
          9516,
          9539
        ],
        "op": "DUP4",
        "path": "1"
      },
      "9584": {
        "fn": "ERC20._burn",
        "offset": [
          9516,
          9539
        ],
        "op": "SUB",
        "path": "1"
      },
      "9585": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9539
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9586": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9539
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "9587": {
        "fn": "ERC20._burn",
        "offset": [
          9559,
          9571
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 150,
        "value": "0x2"
      },
      "9589": {
        "fn": "ERC20._burn",
        "offset": [
          9559,
          9581
        ],
        "op": "DUP1",
        "path": "1"
      },
      "9590": {
        "fn": "ERC20._burn",
        "offset": [
          9559,
          9581
        ],
        "op": "SLOAD",
        "path": "1"
      },
      "9591": {
        "fn": "ERC20._burn",
        "offset": [
          9533,
          9539
        ],
        "op": "DUP5",
        "path": "1"
      },
      "9592": {
        "fn": "ERC20._burn",
        "offset": [
          9533,
          9539
        ],
        "op": "SWAP3",
        "path": "1"
      },
      "9593": {
        "fn": "ERC20._burn",
        "offset": [
          9495,
          9504
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9594": {
        "fn": "ERC20._burn",
        "offset": [
          9559,
          9581
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x2584"
      },
      "9597": {
        "fn": "ERC20._burn",
        "offset": [
          9559,
          9581
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9598": {
        "fn": "ERC20._burn",
        "offset": [
          9533,
          9539
        ],
        "op": "DUP5",
        "path": "1"
      },
      "9599": {
        "fn": "ERC20._burn",
        "offset": [
          9533,
          9539
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9600": {
        "fn": "ERC20._burn",
        "offset": [
          9559,
          9581
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3F1F"
      },
      "9603": {
        "fn": "ERC20._burn",
        "jump": "i",
        "offset": [
          9559,
          9581
        ],
        "op": "JUMP",
        "path": "1"
      },
      "9604": {
        "fn": "ERC20._burn",
        "offset": [
          9559,
          9581
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "9605": {
        "fn": "ERC20._burn",
        "offset": [
          9559,
          9581
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9606": {
        "fn": "ERC20._burn",
        "offset": [
          9559,
          9581
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "9607": {
        "fn": "ERC20._burn",
        "offset": [
          9559,
          9581
        ],
        "op": "SSTORE",
        "path": "1"
      },
      "9608": {
        "op": "POP"
      },
      "9609": {
        "op": "POP"
      },
      "9610": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "PUSH1",
        "path": "1",
        "statement": 151,
        "value": "0x40"
      },
      "9612": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "9613": {
        "fn": "ERC20._burn",
        "offset": [
          9623,
          9624
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "9615": {
        "fn": "ERC20._burn",
        "offset": [
          9623,
          9624
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9616": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9618": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9620": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9622": {
        "op": "SHL"
      },
      "9623": {
        "op": "SUB"
      },
      "9624": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "DUP6",
        "path": "1"
      },
      "9625": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "AND",
        "path": "1"
      },
      "9626": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9627": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "PUSH32",
        "path": "1",
        "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
      },
      "9660": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9661": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x25C7"
      },
      "9664": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9665": {
        "fn": "ERC20._burn",
        "offset": [
          9627,
          9633
        ],
        "op": "DUP7",
        "path": "1"
      },
      "9666": {
        "fn": "ERC20._burn",
        "offset": [
          9627,
          9633
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9667": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x3756"
      },
      "9670": {
        "fn": "ERC20._burn",
        "jump": "i",
        "offset": [
          9597,
          9634
        ],
        "op": "JUMP",
        "path": "1"
      },
      "9671": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "JUMPDEST",
        "path": "1"
      },
      "9672": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x40"
      },
      "9674": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "MLOAD",
        "path": "1"
      },
      "9675": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "DUP1",
        "path": "1"
      },
      "9676": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "SWAP2",
        "path": "1"
      },
      "9677": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "SUB",
        "path": "1"
      },
      "9678": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "SWAP1",
        "path": "1"
      },
      "9679": {
        "fn": "ERC20._burn",
        "offset": [
          9597,
          9634
        ],
        "op": "LOG3",
        "path": "1"
      },
      "9680": {
        "fn": "ERC20._burn",
        "offset": [
          9645,
          9693
        ],
        "op": "PUSH2",
        "path": "1",
        "statement": 152,
        "value": "0x5DF"
      },
      "9683": {
        "fn": "ERC20._burn",
        "offset": [
          9665,
          9672
        ],
        "op": "DUP4",
        "path": "1"
      },
      "9684": {
        "fn": "ERC20._burn",
        "offset": [
          9682,
          9683
        ],
        "op": "PUSH1",
        "path": "1",
        "value": "0x0"
      },
      "9686": {
        "fn": "ERC20._burn",
        "offset": [
          9686,
          9692
        ],
        "op": "DUP5",
        "path": "1"
      },
      "9687": {
        "fn": "ERC20._burn",
        "offset": [
          9645,
          9664
        ],
        "op": "PUSH2",
        "path": "1",
        "value": "0x5DF"
      },
      "9690": {
        "fn": "ERC20._burn",
        "jump": "i",
        "offset": [
          9645,
          9693
        ],
        "op": "JUMP",
        "path": "1"
      },
      "9691": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10048,
          10793
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9692": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10209,
          10224
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9694": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10226,
          10241
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9695": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10255,
          10277
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9697": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10289,
          10320
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x25EA"
      },
      "9700": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10299,
          10308
        ],
        "op": "DUP8",
        "path": "23"
      },
      "9701": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10310,
          10319
        ],
        "op": "DUP8",
        "path": "23"
      },
      "9702": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10289,
          10298
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x1FC8"
      },
      "9705": {
        "fn": "SharpeAI._burnLiquidityShare",
        "jump": "i",
        "offset": [
          10289,
          10320
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9706": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10289,
          10320
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9707": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10254,
          10320
        ],
        "op": "POP",
        "path": "23"
      },
      "9708": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10254,
          10320
        ],
        "op": "POP",
        "path": "23"
      },
      "9709": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10254,
          10320
        ],
        "op": "POP",
        "path": "23"
      },
      "9710": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10254,
          10320
        ],
        "op": "POP",
        "path": "23"
      },
      "9711": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10254,
          10320
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9712": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10254,
          10320
        ],
        "op": "POP",
        "path": "23"
      },
      "9713": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10331,
          10348
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9715": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10351,
          10403
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2612"
      },
      "9718": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10391,
          10402
        ],
        "op": "DUP6",
        "path": "23"
      },
      "9719": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10351,
          10386
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "9722": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10379,
          10385
        ],
        "op": "DUP9",
        "path": "23"
      },
      "9723": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10359,
          10373
        ],
        "op": "DUP6",
        "path": "23"
      },
      "9724": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9726": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9728": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "9730": {
        "op": "SHL"
      },
      "9731": {
        "op": "SUB"
      },
      "9732": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10351,
          10374
        ],
        "op": "AND",
        "path": "23"
      },
      "9733": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10351,
          10378
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "9736": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10351,
          10378
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9737": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10351,
          10386
        ],
        "op": "SWAP2",
        "path": "23"
      },
      "9738": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10351,
          10386
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9739": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10351,
          10386
        ],
        "op": "PUSH4",
        "path": "23",
        "value": "0xFFFFFFFF"
      },
      "9744": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10351,
          10386
        ],
        "op": "AND",
        "path": "23"
      },
      "9745": {
        "fn": "SharpeAI._burnLiquidityShare",
        "jump": "i",
        "offset": [
          10351,
          10386
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9746": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10351,
          10403
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9747": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10331,
          10403
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9748": {
        "op": "POP"
      },
      "9749": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10420,
          10433
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9750": {
        "branch": 265,
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10420,
          10433
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "9751": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10416,
          10786
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2676"
      },
      "9754": {
        "branch": 265,
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10416,
          10786
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "9755": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10451,
          10466
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9757": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10468,
          10483
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9758": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10485,
          10498
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "9760": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10500,
          10513
        ],
        "op": "DUP1",
        "path": "23"
      },
      "9761": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10534,
          10594
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2633"
      },
      "9764": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10550,
          10559
        ],
        "op": "DUP13",
        "path": "23"
      },
      "9765": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10561,
          10570
        ],
        "op": "DUP13",
        "path": "23"
      },
      "9766": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10572,
          10593
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x262E"
      },
      "9769": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10583,
          10592
        ],
        "op": "DUP9",
        "path": "23"
      },
      "9770": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10572,
          10582
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2CA6"
      },
      "9773": {
        "fn": "SharpeAI._burnLiquidityShare",
        "jump": "i",
        "offset": [
          10572,
          10593
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9774": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10572,
          10593
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9775": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10534,
          10549
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x208F"
      },
      "9778": {
        "fn": "SharpeAI._burnLiquidityShare",
        "jump": "i",
        "offset": [
          10534,
          10594
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9779": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10534,
          10594
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9780": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10450,
          10594
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "9781": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10450,
          10594
        ],
        "op": "SWAP7",
        "path": "23"
      },
      "9782": {
        "op": "POP"
      },
      "9783": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10450,
          10594
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9784": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10450,
          10594
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "9785": {
        "op": "POP"
      },
      "9786": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10450,
          10594
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "9787": {
        "op": "POP"
      },
      "9788": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10450,
          10594
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9789": {
        "op": "POP"
      },
      "9790": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10655,
          10702
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 153,
        "value": "0x2655"
      },
      "9793": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10667,
          10701
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x264E"
      },
      "9796": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10689,
          10700
        ],
        "op": "DUP11",
        "path": "23"
      },
      "9797": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10667,
          10684
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "9800": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10450,
          10594
        ],
        "op": "DUP6",
        "path": "23"
      },
      "9801": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10677,
          10683
        ],
        "op": "DUP15",
        "path": "23"
      },
      "9802": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10667,
          10676
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "9805": {
        "fn": "SharpeAI._burnLiquidityShare",
        "jump": "i",
        "offset": [
          10667,
          10684
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9806": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10667,
          10701
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9807": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10655,
          10662
        ],
        "op": "DUP6",
        "path": "23"
      },
      "9808": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10655,
          10662
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9809": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10655,
          10666
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24DE"
      },
      "9812": {
        "fn": "SharpeAI._burnLiquidityShare",
        "jump": "i",
        "offset": [
          10655,
          10702
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9813": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10655,
          10702
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9814": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10645,
          10702
        ],
        "op": "SWAP8",
        "path": "23"
      },
      "9815": {
        "op": "POP"
      },
      "9816": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10727,
          10774
        ],
        "op": "PUSH2",
        "path": "23",
        "statement": 154,
        "value": "0x266F"
      },
      "9819": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10739,
          10773
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2668"
      },
      "9822": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10761,
          10772
        ],
        "op": "DUP11",
        "path": "23"
      },
      "9823": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10739,
          10756
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x116B"
      },
      "9826": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10739,
          10744
        ],
        "op": "DUP5",
        "path": "23"
      },
      "9827": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10749,
          10755
        ],
        "op": "DUP15",
        "path": "23"
      },
      "9828": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10739,
          10748
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24C6"
      },
      "9831": {
        "fn": "SharpeAI._burnLiquidityShare",
        "jump": "i",
        "offset": [
          10739,
          10756
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9832": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10739,
          10773
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9833": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10727,
          10734
        ],
        "op": "DUP5",
        "path": "23"
      },
      "9834": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10727,
          10734
        ],
        "op": "SWAP1",
        "path": "23"
      },
      "9835": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10727,
          10738
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x24DE"
      },
      "9838": {
        "fn": "SharpeAI._burnLiquidityShare",
        "jump": "i",
        "offset": [
          10727,
          10774
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9839": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10727,
          10774
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9840": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10717,
          10774
        ],
        "op": "SWAP7",
        "path": "23"
      },
      "9841": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10717,
          10774
        ],
        "op": "POP",
        "path": "23"
      },
      "9842": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10416,
          10786
        ],
        "op": "POP",
        "path": "23"
      },
      "9843": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10416,
          10786
        ],
        "op": "POP",
        "path": "23"
      },
      "9844": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10416,
          10786
        ],
        "op": "POP",
        "path": "23"
      },
      "9845": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10416,
          10786
        ],
        "op": "POP",
        "path": "23"
      },
      "9846": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10416,
          10786
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "9847": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10048,
          10793
        ],
        "op": "POP",
        "path": "23"
      },
      "9848": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10048,
          10793
        ],
        "op": "POP",
        "path": "23"
      },
      "9849": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10048,
          10793
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "9850": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10048,
          10793
        ],
        "op": "POP",
        "path": "23"
      },
      "9851": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10048,
          10793
        ],
        "op": "SWAP5",
        "path": "23"
      },
      "9852": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10048,
          10793
        ],
        "op": "SWAP3",
        "path": "23"
      },
      "9853": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10048,
          10793
        ],
        "op": "POP",
        "path": "23"
      },
      "9854": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10048,
          10793
        ],
        "op": "POP",
        "path": "23"
      },
      "9855": {
        "fn": "SharpeAI._burnLiquidityShare",
        "offset": [
          10048,
          10793
        ],
        "op": "POP",
        "path": "23"
      },
      "9856": {
        "fn": "SharpeAI._burnLiquidityShare",
        "jump": "o",
        "offset": [
          10048,
          10793
        ],
        "op": "JUMP",
        "path": "23"
      },
      "9857": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3207,
          3913
        ],
        "op": "JUMPDEST",
        "path": "4"
      },
      "9858": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3626,
          3649
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x0"
      },
      "9860": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x26D6"
      },
      "9863": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3680,
          3684
        ],
        "op": "DUP3",
        "path": "4"
      },
      "9864": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x40"
      },
      "9866": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "MLOAD",
        "path": "4"
      },
      "9867": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "DUP1",
        "path": "4"
      },
      "9868": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x40"
      },
      "9870": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "ADD",
        "path": "4"
      },
      "9871": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x40"
      },
      "9873": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "MSTORE",
        "path": "4"
      },
      "9874": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "DUP1",
        "path": "4"
      },
      "9875": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x20"
      },
      "9877": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "DUP2",
        "path": "4"
      },
      "9878": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "MSTORE",
        "path": "4"
      },
      "9879": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x20"
      },
      "9881": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "ADD",
        "path": "4"
      },
      "9882": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "PUSH32",
        "path": "4",
        "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
      },
      "9915": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "DUP2",
        "path": "4"
      },
      "9916": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "MSTORE",
        "path": "4"
      },
      "9917": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "POP",
        "path": "4"
      },
      "9918": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3660,
          3665
        ],
        "op": "DUP6",
        "path": "4"
      },
      "9919": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9921": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "9923": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "9925": {
        "op": "SHL"
      },
      "9926": {
        "op": "SUB"
      },
      "9927": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3679
        ],
        "op": "AND",
        "path": "4"
      },
      "9928": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3679
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x2CD1"
      },
      "9931": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3679
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "9932": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "SWAP3",
        "path": "4"
      },
      "9933": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "SWAP2",
        "path": "4"
      },
      "9934": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "9935": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "PUSH4",
        "path": "4",
        "value": "0xFFFFFFFF"
      },
      "9940": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "AND",
        "path": "4"
      },
      "9941": {
        "fn": "SafeERC20._callOptionalReturn",
        "jump": "i",
        "offset": [
          3652,
          3721
        ],
        "op": "JUMP",
        "path": "4"
      },
      "9942": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3652,
          3721
        ],
        "op": "JUMPDEST",
        "path": "4"
      },
      "9943": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3735,
          3752
        ],
        "op": "DUP1",
        "path": "4"
      },
      "9944": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3735,
          3752
        ],
        "op": "MLOAD",
        "path": "4"
      },
      "9945": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3626,
          3721
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "9946": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3626,
          3721
        ],
        "op": "SWAP2",
        "path": "4"
      },
      "9947": {
        "op": "POP"
      },
      "9948": {
        "branch": 299,
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3735,
          3756
        ],
        "op": "ISZERO",
        "path": "4"
      },
      "9949": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3731,
          3907
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x5DF"
      },
      "9952": {
        "branch": 299,
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3731,
          3907
        ],
        "op": "JUMPI",
        "path": "4"
      },
      "9953": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3830,
          3840
        ],
        "op": "DUP1",
        "path": "4",
        "statement": 155
      },
      "9954": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "DUP1",
        "path": "4"
      },
      "9955": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x20"
      },
      "9957": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "ADD",
        "path": "4"
      },
      "9958": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "9959": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "MLOAD",
        "path": "4"
      },
      "9960": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "DUP2",
        "path": "4"
      },
      "9961": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "ADD",
        "path": "4"
      },
      "9962": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "9963": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x26F4"
      },
      "9966": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "SWAP2",
        "path": "4"
      },
      "9967": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "9968": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x321B"
      },
      "9971": {
        "fn": "SafeERC20._callOptionalReturn",
        "jump": "i",
        "offset": [
          3819,
          3849
        ],
        "op": "JUMP",
        "path": "4"
      },
      "9972": {
        "branch": 300,
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3819,
          3849
        ],
        "op": "JUMPDEST",
        "path": "4"
      },
      "9973": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x5DF"
      },
      "9976": {
        "branch": 300,
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "JUMPI",
        "path": "4"
      },
      "9977": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x40"
      },
      "9979": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "MLOAD",
        "path": "4"
      },
      "9980": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "9984": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "9986": {
        "op": "SHL"
      },
      "9987": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "DUP2",
        "path": "4"
      },
      "9988": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "MSTORE",
        "path": "4"
      },
      "9989": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "PUSH1",
        "path": "4",
        "value": "0x4"
      },
      "9991": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "ADD",
        "path": "4"
      },
      "9992": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x542"
      },
      "9995": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "SWAP1",
        "path": "4"
      },
      "9996": {
        "fn": "SafeERC20._callOptionalReturn",
        "offset": [
          3811,
          3896
        ],
        "op": "PUSH2",
        "path": "4",
        "value": "0x3D62"
      },
      "9999": {
        "fn": "SafeERC20._callOptionalReturn",
        "jump": "i",
        "offset": [
          3811,
          3896
        ],
        "op": "JUMP",
        "path": "4"
      },
      "10000": {
        "fn": "Math.max",
        "offset": [
          285,
          390
        ],
        "op": "JUMPDEST",
        "path": "7"
      },
      "10001": {
        "fn": "Math.max",
        "offset": [
          343,
          350
        ],
        "op": "PUSH1",
        "path": "7",
        "value": "0x0"
      },
      "10003": {
        "fn": "Math.max",
        "offset": [
          374,
          375
        ],
        "op": "DUP2",
        "path": "7",
        "statement": 156
      },
      "10004": {
        "fn": "Math.max",
        "offset": [
          369,
          370
        ],
        "op": "DUP4",
        "path": "7"
      },
      "10005": {
        "fn": "Math.max",
        "offset": [
          369,
          375
        ],
        "op": "LT",
        "path": "7"
      },
      "10006": {
        "branch": 296,
        "fn": "Math.max",
        "offset": [
          369,
          375
        ],
        "op": "ISZERO",
        "path": "7"
      },
      "10007": {
        "fn": "Math.max",
        "offset": [
          369,
          383
        ],
        "op": "PUSH2",
        "path": "7",
        "value": "0x2720"
      },
      "10010": {
        "branch": 296,
        "fn": "Math.max",
        "offset": [
          369,
          383
        ],
        "op": "JUMPI",
        "path": "7"
      },
      "10011": {
        "fn": "Math.max",
        "offset": [
          382,
          383
        ],
        "op": "DUP2",
        "path": "7"
      },
      "10012": {
        "fn": "Math.max",
        "offset": [
          369,
          383
        ],
        "op": "PUSH2",
        "path": "7",
        "value": "0x76C"
      },
      "10015": {
        "fn": "Math.max",
        "offset": [
          369,
          383
        ],
        "op": "JUMP",
        "path": "7"
      },
      "10016": {
        "fn": "Math.max",
        "offset": [
          369,
          383
        ],
        "op": "JUMPDEST",
        "path": "7"
      },
      "10017": {
        "op": "POP"
      },
      "10018": {
        "fn": "Math.max",
        "offset": [
          378,
          379
        ],
        "op": "SWAP1",
        "path": "7"
      },
      "10019": {
        "fn": "Math.max",
        "offset": [
          378,
          379
        ],
        "op": "SWAP2",
        "path": "7"
      },
      "10020": {
        "fn": "Math.max",
        "offset": [
          285,
          390
        ],
        "op": "SWAP1",
        "path": "7"
      },
      "10021": {
        "op": "POP"
      },
      "10022": {
        "fn": "Math.max",
        "jump": "o",
        "offset": [
          285,
          390
        ],
        "op": "JUMP",
        "path": "7"
      },
      "10023": {
        "fn": "Math.min",
        "offset": [
          461,
          565
        ],
        "op": "JUMPDEST",
        "path": "7"
      },
      "10024": {
        "fn": "Math.min",
        "offset": [
          519,
          526
        ],
        "op": "PUSH1",
        "path": "7",
        "value": "0x0"
      },
      "10026": {
        "fn": "Math.min",
        "offset": [
          549,
          550
        ],
        "op": "DUP2",
        "path": "7",
        "statement": 157
      },
      "10027": {
        "fn": "Math.min",
        "offset": [
          545,
          546
        ],
        "op": "DUP4",
        "path": "7"
      },
      "10028": {
        "branch": 297,
        "fn": "Math.min",
        "offset": [
          545,
          550
        ],
        "op": "LT",
        "path": "7"
      },
      "10029": {
        "fn": "Math.min",
        "offset": [
          545,
          558
        ],
        "op": "PUSH2",
        "path": "7",
        "value": "0x2720"
      },
      "10032": {
        "branch": 297,
        "fn": "Math.min",
        "offset": [
          545,
          558
        ],
        "op": "JUMPI",
        "path": "7"
      },
      "10033": {
        "fn": "Math.min",
        "offset": [
          557,
          558
        ],
        "op": "DUP2",
        "path": "7"
      },
      "10034": {
        "fn": "Math.min",
        "offset": [
          545,
          558
        ],
        "op": "PUSH2",
        "path": "7",
        "value": "0x76C"
      },
      "10037": {
        "fn": "Math.min",
        "offset": [
          545,
          558
        ],
        "op": "JUMP",
        "path": "7"
      },
      "10038": {
        "fn": "PositionKey.compute",
        "offset": [
          162,
          370
        ],
        "op": "JUMPDEST",
        "path": "22"
      },
      "10039": {
        "fn": "PositionKey.compute",
        "offset": [
          281,
          288
        ],
        "op": "PUSH1",
        "path": "22",
        "value": "0x0"
      },
      "10041": {
        "fn": "PositionKey.compute",
        "offset": [
          334,
          339
        ],
        "op": "DUP4",
        "path": "22",
        "statement": 158
      },
      "10042": {
        "fn": "PositionKey.compute",
        "offset": [
          341,
          350
        ],
        "op": "DUP4",
        "path": "22"
      },
      "10043": {
        "fn": "PositionKey.compute",
        "offset": [
          352,
          361
        ],
        "op": "DUP4",
        "path": "22"
      },
      "10044": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "PUSH1",
        "path": "22",
        "value": "0x40"
      },
      "10046": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "MLOAD",
        "path": "22"
      },
      "10047": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "PUSH1",
        "path": "22",
        "value": "0x20"
      },
      "10049": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "ADD",
        "path": "22"
      },
      "10050": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "PUSH2",
        "path": "22",
        "value": "0x274D"
      },
      "10053": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "SWAP4",
        "path": "22"
      },
      "10054": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "SWAP3",
        "path": "22"
      },
      "10055": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "SWAP2",
        "path": "22"
      },
      "10056": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "SWAP1",
        "path": "22"
      },
      "10057": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "PUSH2",
        "path": "22",
        "value": "0x35F0"
      },
      "10060": {
        "fn": "PositionKey.compute",
        "jump": "i",
        "offset": [
          317,
          362
        ],
        "op": "JUMP",
        "path": "22"
      },
      "10061": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "JUMPDEST",
        "path": "22"
      },
      "10062": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "PUSH1",
        "path": "22",
        "value": "0x40"
      },
      "10064": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "MLOAD",
        "path": "22"
      },
      "10065": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "PUSH1",
        "path": "22",
        "value": "0x20"
      },
      "10067": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "DUP2",
        "path": "22"
      },
      "10068": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "DUP4",
        "path": "22"
      },
      "10069": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "SUB",
        "path": "22"
      },
      "10070": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "SUB",
        "path": "22"
      },
      "10071": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "DUP2",
        "path": "22"
      },
      "10072": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "MSTORE",
        "path": "22"
      },
      "10073": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "SWAP1",
        "path": "22"
      },
      "10074": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "PUSH1",
        "path": "22",
        "value": "0x40"
      },
      "10076": {
        "fn": "PositionKey.compute",
        "offset": [
          317,
          362
        ],
        "op": "MSTORE",
        "path": "22"
      },
      "10077": {
        "fn": "PositionKey.compute",
        "offset": [
          307,
          363
        ],
        "op": "DUP1",
        "path": "22"
      },
      "10078": {
        "fn": "PositionKey.compute",
        "offset": [
          307,
          363
        ],
        "op": "MLOAD",
        "path": "22"
      },
      "10079": {
        "fn": "PositionKey.compute",
        "offset": [
          307,
          363
        ],
        "op": "SWAP1",
        "path": "22"
      },
      "10080": {
        "fn": "PositionKey.compute",
        "offset": [
          307,
          363
        ],
        "op": "PUSH1",
        "path": "22",
        "value": "0x20"
      },
      "10082": {
        "fn": "PositionKey.compute",
        "offset": [
          307,
          363
        ],
        "op": "ADD",
        "path": "22"
      },
      "10083": {
        "fn": "PositionKey.compute",
        "offset": [
          307,
          363
        ],
        "op": "KECCAK256",
        "path": "22"
      },
      "10084": {
        "fn": "PositionKey.compute",
        "offset": [
          300,
          363
        ],
        "op": "SWAP1",
        "path": "22"
      },
      "10085": {
        "fn": "PositionKey.compute",
        "offset": [
          300,
          363
        ],
        "op": "POP",
        "path": "22"
      },
      "10086": {
        "fn": "PositionKey.compute",
        "offset": [
          162,
          370
        ],
        "op": "SWAP4",
        "path": "22"
      },
      "10087": {
        "fn": "PositionKey.compute",
        "offset": [
          162,
          370
        ],
        "op": "SWAP3",
        "path": "22"
      },
      "10088": {
        "fn": "PositionKey.compute",
        "offset": [
          162,
          370
        ],
        "op": "POP",
        "path": "22"
      },
      "10089": {
        "fn": "PositionKey.compute",
        "offset": [
          162,
          370
        ],
        "op": "POP",
        "path": "22"
      },
      "10090": {
        "fn": "PositionKey.compute",
        "offset": [
          162,
          370
        ],
        "op": "POP",
        "path": "22"
      },
      "10091": {
        "fn": "PositionKey.compute",
        "jump": "o",
        "offset": [
          162,
          370
        ],
        "op": "JUMP",
        "path": "22"
      },
      "10092": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1355,
          3938
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10093": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1418,
          1438
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "10095": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1450,
          1465
        ],
        "op": "DUP1",
        "path": "20"
      },
      "10096": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1475,
          1476
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "10098": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1468,
          1472
        ],
        "op": "DUP4",
        "path": "20"
      },
      "10099": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1468,
          1476
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x2"
      },
      "10101": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1468,
          1476
        ],
        "op": "SIGNEXTEND",
        "path": "20"
      },
      "10102": {
        "branch": 301,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1468,
          1476
        ],
        "op": "SLT",
        "path": "20"
      },
      "10103": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1468,
          1525
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2783"
      },
      "10106": {
        "branch": 301,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1468,
          1525
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10107": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1519,
          1523
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10108": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1512,
          1524
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x2"
      },
      "10110": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1512,
          1524
        ],
        "op": "SIGNEXTEND",
        "path": "20"
      },
      "10111": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1468,
          1525
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2790"
      },
      "10114": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1468,
          1525
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10115": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1468,
          1525
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10116": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1495,
          1499
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10117": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1488,
          1500
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x2"
      },
      "10119": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1488,
          1500
        ],
        "op": "SIGNEXTEND",
        "path": "20"
      },
      "10120": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1487,
          1500
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2790"
      },
      "10123": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1487,
          1500
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10124": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1487,
          1500
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3FF4"
      },
      "10127": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          1487,
          1500
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10128": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1487,
          1500
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10129": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1450,
          1525
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10130": {
        "op": "POP"
      },
      "10131": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1591,
          1604
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "10133": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1617,
          1620
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x1"
      },
      "10135": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1607,
          1620
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10136": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1607,
          1620
        ],
        "op": "AND",
        "path": "20"
      },
      "10137": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1607,
          1700
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x27A6"
      },
      "10140": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1607,
          1700
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10141": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "10143": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "10145": {
        "op": "SHL"
      },
      "10146": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1607,
          1700
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x27B8"
      },
      "10149": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1607,
          1700
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10150": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1607,
          1700
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10151": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1628,
          1662
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xFFFCB933BD6FAD37AA2D162D1A594001"
      },
      "10168": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1607,
          1700
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10169": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1591,
          1700
        ],
        "op": "PUSH17",
        "path": "20",
        "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
      },
      "10187": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1591,
          1700
        ],
        "op": "AND",
        "path": "20"
      },
      "10188": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1591,
          1700
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10189": {
        "op": "POP"
      },
      "10190": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1724,
          1727
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x2"
      },
      "10192": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1714,
          1727
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10193": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1714,
          1727
        ],
        "op": "AND",
        "path": "20"
      },
      "10194": {
        "branch": 302,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1714,
          1732
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10195": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1710,
          1793
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x27F7"
      },
      "10198": {
        "branch": 302,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1710,
          1793
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10199": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1790,
          1793
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 159,
        "value": "0x80"
      },
      "10201": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1743,
          1785
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x27F2"
      },
      "10204": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1743,
          1748
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10205": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1751,
          1785
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xFFF97272373D413259A46990580E213A"
      },
      "10222": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1743,
          1785
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10225": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          1743,
          1785
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10226": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1743,
          1785
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10227": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1742,
          1793
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10228": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1742,
          1793
        ],
        "op": "SHR",
        "path": "20"
      },
      "10229": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1734,
          1793
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10230": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1734,
          1793
        ],
        "op": "POP",
        "path": "20"
      },
      "10231": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1710,
          1793
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10232": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1817,
          1820
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x4"
      },
      "10234": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1807,
          1820
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10235": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1807,
          1820
        ],
        "op": "AND",
        "path": "20"
      },
      "10236": {
        "branch": 303,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1807,
          1825
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10237": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1803,
          1886
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2821"
      },
      "10240": {
        "branch": 303,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1803,
          1886
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10241": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1883,
          1886
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 160,
        "value": "0x80"
      },
      "10243": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1836,
          1878
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x281C"
      },
      "10246": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1836,
          1841
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10247": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1844,
          1878
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xFFF2E50F5F656932EF12357CF3C7FDCC"
      },
      "10264": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1836,
          1878
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10267": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          1836,
          1878
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10268": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1836,
          1878
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10269": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1835,
          1886
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10270": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1835,
          1886
        ],
        "op": "SHR",
        "path": "20"
      },
      "10271": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1827,
          1886
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10272": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1827,
          1886
        ],
        "op": "POP",
        "path": "20"
      },
      "10273": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1803,
          1886
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10274": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1910,
          1913
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x8"
      },
      "10276": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1900,
          1913
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10277": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1900,
          1913
        ],
        "op": "AND",
        "path": "20"
      },
      "10278": {
        "branch": 304,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1900,
          1918
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10279": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1896,
          1979
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x284B"
      },
      "10282": {
        "branch": 304,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1896,
          1979
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10283": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1976,
          1979
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 161,
        "value": "0x80"
      },
      "10285": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1929,
          1971
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2846"
      },
      "10288": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1929,
          1934
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10289": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1937,
          1971
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xFFE5CACA7E10E4E61C3624EAA0941CD0"
      },
      "10306": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1929,
          1971
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10309": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          1929,
          1971
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10310": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1929,
          1971
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10311": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1928,
          1979
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10312": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1928,
          1979
        ],
        "op": "SHR",
        "path": "20"
      },
      "10313": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1920,
          1979
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10314": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1920,
          1979
        ],
        "op": "POP",
        "path": "20"
      },
      "10315": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1896,
          1979
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10316": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2003,
          2007
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x10"
      },
      "10318": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1993,
          2007
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10319": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1993,
          2007
        ],
        "op": "AND",
        "path": "20"
      },
      "10320": {
        "branch": 305,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1993,
          2012
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10321": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1989,
          2073
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2875"
      },
      "10324": {
        "branch": 305,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1989,
          2073
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10325": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2070,
          2073
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 162,
        "value": "0x80"
      },
      "10327": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2023,
          2065
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2870"
      },
      "10330": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2023,
          2028
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10331": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2031,
          2065
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xFFCB9843D60F6159C9DB58835C926644"
      },
      "10348": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2023,
          2065
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10351": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2023,
          2065
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10352": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2023,
          2065
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10353": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2022,
          2073
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10354": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2022,
          2073
        ],
        "op": "SHR",
        "path": "20"
      },
      "10355": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2014,
          2073
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10356": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2014,
          2073
        ],
        "op": "POP",
        "path": "20"
      },
      "10357": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1989,
          2073
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10358": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2097,
          2101
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x20"
      },
      "10360": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2087,
          2101
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10361": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2087,
          2101
        ],
        "op": "AND",
        "path": "20"
      },
      "10362": {
        "branch": 306,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2087,
          2106
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10363": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2083,
          2167
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x289F"
      },
      "10366": {
        "branch": 306,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2083,
          2167
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10367": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2164,
          2167
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 163,
        "value": "0x80"
      },
      "10369": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2117,
          2159
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x289A"
      },
      "10372": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2117,
          2122
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10373": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2125,
          2159
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xFF973B41FA98C081472E6896DFB254C0"
      },
      "10390": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2117,
          2159
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10393": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2117,
          2159
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10394": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2117,
          2159
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10395": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2116,
          2167
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10396": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2116,
          2167
        ],
        "op": "SHR",
        "path": "20"
      },
      "10397": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2108,
          2167
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10398": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2108,
          2167
        ],
        "op": "POP",
        "path": "20"
      },
      "10399": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2083,
          2167
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10400": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2191,
          2195
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x40"
      },
      "10402": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2181,
          2195
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10403": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2181,
          2195
        ],
        "op": "AND",
        "path": "20"
      },
      "10404": {
        "branch": 307,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2181,
          2200
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10405": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2177,
          2261
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x28C9"
      },
      "10408": {
        "branch": 307,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2177,
          2261
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10409": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2258,
          2261
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 164,
        "value": "0x80"
      },
      "10411": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2211,
          2253
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x28C4"
      },
      "10414": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2211,
          2216
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10415": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2219,
          2253
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xFF2EA16466C96A3843EC78B326B52861"
      },
      "10432": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2211,
          2253
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10435": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2211,
          2253
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10436": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2211,
          2253
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10437": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2210,
          2261
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10438": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2210,
          2261
        ],
        "op": "SHR",
        "path": "20"
      },
      "10439": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2202,
          2261
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10440": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2202,
          2261
        ],
        "op": "POP",
        "path": "20"
      },
      "10441": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2177,
          2261
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10442": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2285,
          2289
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x80"
      },
      "10444": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2275,
          2289
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10445": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2275,
          2289
        ],
        "op": "AND",
        "path": "20"
      },
      "10446": {
        "branch": 308,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2275,
          2294
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10447": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2271,
          2355
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x28F3"
      },
      "10450": {
        "branch": 308,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2271,
          2355
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10451": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2352,
          2355
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 165,
        "value": "0x80"
      },
      "10453": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2305,
          2347
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x28EE"
      },
      "10456": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2305,
          2310
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10457": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2313,
          2347
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xFE5DEE046A99A2A811C461F1969C3053"
      },
      "10474": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2305,
          2347
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10477": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2305,
          2347
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10478": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2305,
          2347
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10479": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2304,
          2355
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10480": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2304,
          2355
        ],
        "op": "SHR",
        "path": "20"
      },
      "10481": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2296,
          2355
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10482": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2296,
          2355
        ],
        "op": "POP",
        "path": "20"
      },
      "10483": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2271,
          2355
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10484": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2379,
          2384
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x100"
      },
      "10487": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2369,
          2384
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10488": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2369,
          2384
        ],
        "op": "AND",
        "path": "20"
      },
      "10489": {
        "branch": 309,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2369,
          2389
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10490": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2365,
          2450
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x291E"
      },
      "10493": {
        "branch": 309,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2365,
          2450
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10494": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2447,
          2450
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 166,
        "value": "0x80"
      },
      "10496": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2400,
          2442
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2919"
      },
      "10499": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2400,
          2405
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10500": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2408,
          2442
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xFCBE86C7900A88AEDCFFC83B479AA3A4"
      },
      "10517": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2400,
          2442
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10520": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2400,
          2442
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10521": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2400,
          2442
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10522": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2399,
          2450
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10523": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2399,
          2450
        ],
        "op": "SHR",
        "path": "20"
      },
      "10524": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2391,
          2450
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10525": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2391,
          2450
        ],
        "op": "POP",
        "path": "20"
      },
      "10526": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2365,
          2450
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10527": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2474,
          2479
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x200"
      },
      "10530": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2464,
          2479
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10531": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2464,
          2479
        ],
        "op": "AND",
        "path": "20"
      },
      "10532": {
        "branch": 310,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2464,
          2484
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10533": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2460,
          2545
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2949"
      },
      "10536": {
        "branch": 310,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2460,
          2545
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10537": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2542,
          2545
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 167,
        "value": "0x80"
      },
      "10539": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2495,
          2537
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2944"
      },
      "10542": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2495,
          2500
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10543": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2503,
          2537
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xF987A7253AC413176F2B074CF7815E54"
      },
      "10560": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2495,
          2537
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10563": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2495,
          2537
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10564": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2495,
          2537
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10565": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2494,
          2545
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10566": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2494,
          2545
        ],
        "op": "SHR",
        "path": "20"
      },
      "10567": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2486,
          2545
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10568": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2486,
          2545
        ],
        "op": "POP",
        "path": "20"
      },
      "10569": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2460,
          2545
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10570": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2569,
          2574
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x400"
      },
      "10573": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2559,
          2574
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10574": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2559,
          2574
        ],
        "op": "AND",
        "path": "20"
      },
      "10575": {
        "branch": 311,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2559,
          2579
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10576": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2555,
          2640
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2974"
      },
      "10579": {
        "branch": 311,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2555,
          2640
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10580": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2637,
          2640
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 168,
        "value": "0x80"
      },
      "10582": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2590,
          2632
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x296F"
      },
      "10585": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2590,
          2595
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10586": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2598,
          2632
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xF3392B0822B70005940C7A398E4B70F3"
      },
      "10603": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2590,
          2632
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10606": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2590,
          2632
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10607": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2590,
          2632
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10608": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2589,
          2640
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10609": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2589,
          2640
        ],
        "op": "SHR",
        "path": "20"
      },
      "10610": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2581,
          2640
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10611": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2581,
          2640
        ],
        "op": "POP",
        "path": "20"
      },
      "10612": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2555,
          2640
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10613": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2664,
          2669
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x800"
      },
      "10616": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2654,
          2669
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10617": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2654,
          2669
        ],
        "op": "AND",
        "path": "20"
      },
      "10618": {
        "branch": 312,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2654,
          2674
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10619": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2650,
          2735
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x299F"
      },
      "10622": {
        "branch": 312,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2650,
          2735
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10623": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2732,
          2735
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 169,
        "value": "0x80"
      },
      "10625": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2685,
          2727
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x299A"
      },
      "10628": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2685,
          2690
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10629": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2693,
          2727
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xE7159475A2C29B7443B29C7FA6E889D9"
      },
      "10646": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2685,
          2727
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10649": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2685,
          2727
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10650": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2685,
          2727
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10651": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2684,
          2735
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10652": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2684,
          2735
        ],
        "op": "SHR",
        "path": "20"
      },
      "10653": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2676,
          2735
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10654": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2676,
          2735
        ],
        "op": "POP",
        "path": "20"
      },
      "10655": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2650,
          2735
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10656": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2759,
          2765
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x1000"
      },
      "10659": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2749,
          2765
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10660": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2749,
          2765
        ],
        "op": "AND",
        "path": "20"
      },
      "10661": {
        "branch": 313,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2749,
          2770
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10662": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2745,
          2831
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x29CA"
      },
      "10665": {
        "branch": 313,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2745,
          2831
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10666": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2828,
          2831
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 170,
        "value": "0x80"
      },
      "10668": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2781,
          2823
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x29C5"
      },
      "10671": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2781,
          2786
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10672": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2789,
          2823
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xD097F3BDFD2022B8845AD8F792AA5825"
      },
      "10689": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2781,
          2823
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10692": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2781,
          2823
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10693": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2781,
          2823
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10694": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2780,
          2831
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10695": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2780,
          2831
        ],
        "op": "SHR",
        "path": "20"
      },
      "10696": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2772,
          2831
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10697": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2772,
          2831
        ],
        "op": "POP",
        "path": "20"
      },
      "10698": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2745,
          2831
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10699": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2855,
          2861
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2000"
      },
      "10702": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2845,
          2861
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10703": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2845,
          2861
        ],
        "op": "AND",
        "path": "20"
      },
      "10704": {
        "branch": 314,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2845,
          2866
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10705": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2841,
          2927
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x29F5"
      },
      "10708": {
        "branch": 314,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2841,
          2927
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10709": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2924,
          2927
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 171,
        "value": "0x80"
      },
      "10711": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2877,
          2919
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x29F0"
      },
      "10714": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2877,
          2882
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10715": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2885,
          2919
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0xA9F746462D870FDF8A65DC1F90E061E5"
      },
      "10732": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2877,
          2919
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10735": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2877,
          2919
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10736": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2877,
          2919
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10737": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2876,
          2927
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10738": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2876,
          2927
        ],
        "op": "SHR",
        "path": "20"
      },
      "10739": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2868,
          2927
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10740": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2868,
          2927
        ],
        "op": "POP",
        "path": "20"
      },
      "10741": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2841,
          2927
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10742": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2951,
          2957
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x4000"
      },
      "10745": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2941,
          2957
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10746": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2941,
          2957
        ],
        "op": "AND",
        "path": "20"
      },
      "10747": {
        "branch": 315,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2941,
          2962
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10748": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2937,
          3023
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2A20"
      },
      "10751": {
        "branch": 315,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2937,
          3023
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10752": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3020,
          3023
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 172,
        "value": "0x80"
      },
      "10754": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2973,
          3015
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2A1B"
      },
      "10757": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2973,
          2978
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10758": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2981,
          3015
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0x70D869A156D2A1B890BB3DF62BAF32F7"
      },
      "10775": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2973,
          3015
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10778": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          2973,
          3015
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10779": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2973,
          3015
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10780": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2972,
          3023
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10781": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2972,
          3023
        ],
        "op": "SHR",
        "path": "20"
      },
      "10782": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2964,
          3023
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10783": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2964,
          3023
        ],
        "op": "POP",
        "path": "20"
      },
      "10784": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          2937,
          3023
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10785": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3047,
          3053
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x8000"
      },
      "10788": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3037,
          3053
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10789": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3037,
          3053
        ],
        "op": "AND",
        "path": "20"
      },
      "10790": {
        "branch": 316,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3037,
          3058
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10791": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3033,
          3119
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2A4B"
      },
      "10794": {
        "branch": 316,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3033,
          3119
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10795": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3116,
          3119
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 173,
        "value": "0x80"
      },
      "10797": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3069,
          3111
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2A46"
      },
      "10800": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3069,
          3074
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10801": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3077,
          3111
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0x31BE135F97D08FD981231505542FCFA6"
      },
      "10818": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3069,
          3111
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10821": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          3069,
          3111
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10822": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3069,
          3111
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10823": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3068,
          3119
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10824": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3068,
          3119
        ],
        "op": "SHR",
        "path": "20"
      },
      "10825": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3060,
          3119
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10826": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3060,
          3119
        ],
        "op": "POP",
        "path": "20"
      },
      "10827": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3033,
          3119
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10828": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3143,
          3150
        ],
        "op": "PUSH3",
        "path": "20",
        "value": "0x10000"
      },
      "10832": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3133,
          3150
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10833": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3133,
          3150
        ],
        "op": "AND",
        "path": "20"
      },
      "10834": {
        "branch": 317,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3133,
          3155
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10835": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3129,
          3215
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2A77"
      },
      "10838": {
        "branch": 317,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3129,
          3215
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10839": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3212,
          3215
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 174,
        "value": "0x80"
      },
      "10841": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3166,
          3207
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2A72"
      },
      "10844": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3166,
          3171
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10845": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3174,
          3207
        ],
        "op": "PUSH16",
        "path": "20",
        "value": "0x9AA508B5B7A84E1C677DE54F3E99BC9"
      },
      "10862": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3166,
          3207
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10865": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          3166,
          3207
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10866": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3166,
          3207
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10867": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3165,
          3215
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10868": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3165,
          3215
        ],
        "op": "SHR",
        "path": "20"
      },
      "10869": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3157,
          3215
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10870": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3157,
          3215
        ],
        "op": "POP",
        "path": "20"
      },
      "10871": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3129,
          3215
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10872": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3239,
          3246
        ],
        "op": "PUSH3",
        "path": "20",
        "value": "0x20000"
      },
      "10876": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3229,
          3246
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10877": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3229,
          3246
        ],
        "op": "AND",
        "path": "20"
      },
      "10878": {
        "branch": 318,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3229,
          3251
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10879": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3225,
          3310
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2AA2"
      },
      "10882": {
        "branch": 318,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3225,
          3310
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10883": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3307,
          3310
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 175,
        "value": "0x80"
      },
      "10885": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3262,
          3302
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2A9D"
      },
      "10888": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3262,
          3267
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10889": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3270,
          3302
        ],
        "op": "PUSH15",
        "path": "20",
        "value": "0x5D6AF8DEDB81196699C329225EE604"
      },
      "10905": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3262,
          3302
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10908": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          3262,
          3302
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10909": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3262,
          3302
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10910": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3261,
          3310
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10911": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3261,
          3310
        ],
        "op": "SHR",
        "path": "20"
      },
      "10912": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3253,
          3310
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10913": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3253,
          3310
        ],
        "op": "POP",
        "path": "20"
      },
      "10914": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3225,
          3310
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10915": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3334,
          3341
        ],
        "op": "PUSH3",
        "path": "20",
        "value": "0x40000"
      },
      "10919": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3324,
          3341
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10920": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3324,
          3341
        ],
        "op": "AND",
        "path": "20"
      },
      "10921": {
        "branch": 319,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3324,
          3346
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10922": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3320,
          3403
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2ACC"
      },
      "10925": {
        "branch": 319,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3320,
          3403
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10926": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3400,
          3403
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 176,
        "value": "0x80"
      },
      "10928": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3357,
          3395
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2AC7"
      },
      "10931": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3357,
          3362
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10932": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3365,
          3395
        ],
        "op": "PUSH14",
        "path": "20",
        "value": "0x2216E584F5FA1EA926041BEDFE98"
      },
      "10947": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3357,
          3395
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10950": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          3357,
          3395
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10951": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3357,
          3395
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10952": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3356,
          3403
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10953": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3356,
          3403
        ],
        "op": "SHR",
        "path": "20"
      },
      "10954": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3348,
          3403
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10955": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3348,
          3403
        ],
        "op": "POP",
        "path": "20"
      },
      "10956": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3320,
          3403
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10957": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3427,
          3434
        ],
        "op": "PUSH3",
        "path": "20",
        "value": "0x80000"
      },
      "10961": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3417,
          3434
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10962": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3417,
          3434
        ],
        "op": "AND",
        "path": "20"
      },
      "10963": {
        "branch": 320,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3417,
          3439
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "10964": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3413,
          3491
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2AF4"
      },
      "10967": {
        "branch": 320,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3413,
          3491
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "10968": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3488,
          3491
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 177,
        "value": "0x80"
      },
      "10970": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3450,
          3483
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2AEF"
      },
      "10973": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3450,
          3455
        ],
        "op": "DUP3",
        "path": "20"
      },
      "10974": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3458,
          3483
        ],
        "op": "PUSH12",
        "path": "20",
        "value": "0x48A170391F7DC42444E8FA2"
      },
      "10987": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3450,
          3483
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3ED8"
      },
      "10990": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          3450,
          3483
        ],
        "op": "JUMP",
        "path": "20"
      },
      "10991": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3450,
          3483
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10992": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3449,
          3491
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10993": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3449,
          3491
        ],
        "op": "SHR",
        "path": "20"
      },
      "10994": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3441,
          3491
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "10995": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3441,
          3491
        ],
        "op": "POP",
        "path": "20"
      },
      "10996": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3413,
          3491
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "10997": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3513,
          3514
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "10999": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3506,
          3510
        ],
        "op": "DUP5",
        "path": "20"
      },
      "11000": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3506,
          3514
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x2"
      },
      "11002": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3506,
          3514
        ],
        "op": "SIGNEXTEND",
        "path": "20"
      },
      "11003": {
        "branch": 321,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3506,
          3514
        ],
        "op": "SGT",
        "path": "20"
      },
      "11004": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3502,
          3549
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "11005": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3502,
          3549
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2B0F"
      },
      "11008": {
        "branch": 321,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3502,
          3549
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "11009": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3524,
          3549
        ],
        "op": "PUSH2",
        "path": "20",
        "statement": 178,
        "value": "0x2B0C"
      },
      "11012": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3544,
          3549
        ],
        "op": "DUP2",
        "path": "20"
      },
      "11013": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "11015": {
        "op": "NOT"
      },
      "11016": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3524,
          3549
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3EC4"
      },
      "11019": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          3524,
          3549
        ],
        "op": "JUMP",
        "path": "20"
      },
      "11020": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3524,
          3549
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "11021": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3516,
          3549
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "11022": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3516,
          3549
        ],
        "op": "POP",
        "path": "20"
      },
      "11023": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3502,
          3549
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "11024": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3916
        ],
        "op": "PUSH2",
        "path": "20",
        "statement": 179,
        "value": "0x2B1E"
      },
      "11027": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3908,
          3915
        ],
        "op": "PUSH5",
        "path": "20",
        "value": "0x100000000"
      },
      "11033": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3904
        ],
        "op": "DUP3",
        "path": "20"
      },
      "11034": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3916
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3FBF"
      },
      "11037": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          3899,
          3916
        ],
        "op": "JUMP",
        "path": "20"
      },
      "11038": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3916
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "11039": {
        "branch": 322,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3921
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "11040": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3929
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2B2A"
      },
      "11043": {
        "branch": 322,
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3929
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "11044": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3928,
          3929
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x1"
      },
      "11046": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3929
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2B2D"
      },
      "11049": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3929
        ],
        "op": "JUMP",
        "path": "20"
      },
      "11050": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3929
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "11051": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3924,
          3925
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "11053": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3899,
          3929
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "11054": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3882,
          3930
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x2B3E"
      },
      "11057": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3882,
          3930
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "11058": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3882,
          3930
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0xFF"
      },
      "11060": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3882,
          3930
        ],
        "op": "AND",
        "path": "20"
      },
      "11061": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3892,
          3894
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x20"
      },
      "11063": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3883,
          3894
        ],
        "op": "DUP4",
        "path": "20"
      },
      "11064": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3883,
          3894
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "11065": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3883,
          3894
        ],
        "op": "SHR",
        "path": "20"
      },
      "11066": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3882,
          3930
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x3EAC"
      },
      "11069": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "i",
        "offset": [
          3882,
          3930
        ],
        "op": "JUMP",
        "path": "20"
      },
      "11070": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3882,
          3930
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "11071": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          3859,
          3931
        ],
        "op": "SWAP5",
        "path": "20"
      },
      "11072": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "offset": [
          1355,
          3938
        ],
        "op": "SWAP4",
        "path": "20"
      },
      "11073": {
        "op": "POP"
      },
      "11074": {
        "op": "POP"
      },
      "11075": {
        "op": "POP"
      },
      "11076": {
        "op": "POP"
      },
      "11077": {
        "fn": "TickMath.getSqrtRatioAtTick",
        "jump": "o",
        "offset": [
          1355,
          3938
        ],
        "op": "JUMP",
        "path": "20"
      },
      "11078": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          2982,
          3883
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11079": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3185,
          3202
        ],
        "op": "PUSH1",
        "path": "21",
        "value": "0x0"
      },
      "11081": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3234,
          3247
        ],
        "op": "DUP4",
        "path": "21"
      },
      "11082": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11084": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11086": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11088": {
        "op": "SHL"
      },
      "11089": {
        "op": "SUB"
      },
      "11090": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3218,
          3247
        ],
        "op": "AND",
        "path": "21"
      },
      "11091": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3218,
          3231
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11092": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11094": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11096": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11098": {
        "op": "SHL"
      },
      "11099": {
        "op": "SUB"
      },
      "11100": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3218,
          3247
        ],
        "op": "AND",
        "path": "21"
      },
      "11101": {
        "branch": 284,
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3218,
          3247
        ],
        "op": "GT",
        "path": "21"
      },
      "11102": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3214,
          3312
        ],
        "op": "ISZERO",
        "path": "21"
      },
      "11103": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3214,
          3312
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2B66"
      },
      "11106": {
        "branch": 284,
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3214,
          3312
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11107": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3283,
          3296
        ],
        "op": "SWAP3",
        "path": "21",
        "statement": 180
      },
      "11108": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3283,
          3296
        ],
        "op": "SWAP4",
        "path": "21"
      },
      "11109": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3298,
          3311
        ],
        "op": "SWAP3",
        "path": "21"
      },
      "11110": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3214,
          3312
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11111": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3343,
          3356
        ],
        "op": "DUP5",
        "path": "21"
      },
      "11112": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11114": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11116": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11118": {
        "op": "SHL"
      },
      "11119": {
        "op": "SUB"
      },
      "11120": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3327,
          3356
        ],
        "op": "AND",
        "path": "21"
      },
      "11121": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3327,
          3339
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11122": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11124": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11126": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11128": {
        "op": "SHL"
      },
      "11129": {
        "op": "SUB"
      },
      "11130": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3327,
          3356
        ],
        "op": "AND",
        "path": "21"
      },
      "11131": {
        "branch": 285,
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3327,
          3356
        ],
        "op": "GT",
        "path": "21"
      },
      "11132": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3323,
          3877
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2B91"
      },
      "11135": {
        "branch": 285,
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3323,
          3877
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11136": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3384,
          3445
        ],
        "op": "PUSH2",
        "path": "21",
        "statement": 181,
        "value": "0x2B8A"
      },
      "11139": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3407,
          3420
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11140": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3422,
          3435
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11141": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3437,
          3444
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11142": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3384,
          3406
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2CE0"
      },
      "11145": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "jump": "i",
        "offset": [
          3384,
          3445
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11146": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3384,
          3445
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11147": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3372,
          3445
        ],
        "op": "SWAP1",
        "path": "21"
      },
      "11148": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3372,
          3445
        ],
        "op": "POP",
        "path": "21"
      },
      "11149": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3323,
          3877
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2C01"
      },
      "11152": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3323,
          3877
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11153": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3323,
          3877
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11154": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3481,
          3494
        ],
        "op": "DUP4",
        "path": "21"
      },
      "11155": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11157": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11159": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11161": {
        "op": "SHL"
      },
      "11162": {
        "op": "SUB"
      },
      "11163": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3466,
          3494
        ],
        "op": "AND",
        "path": "21"
      },
      "11164": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3466,
          3478
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11165": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11167": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11169": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11171": {
        "op": "SHL"
      },
      "11172": {
        "op": "SUB"
      },
      "11173": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3466,
          3494
        ],
        "op": "AND",
        "path": "21"
      },
      "11174": {
        "branch": 286,
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3466,
          3494
        ],
        "op": "LT",
        "path": "21"
      },
      "11175": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3462,
          3877
        ],
        "op": "ISZERO",
        "path": "21"
      },
      "11176": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3462,
          3877
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2BF3"
      },
      "11179": {
        "branch": 286,
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3462,
          3877
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11180": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3510,
          3528
        ],
        "op": "PUSH1",
        "path": "21",
        "value": "0x0"
      },
      "11182": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3531,
          3591
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2BB8"
      },
      "11185": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3554,
          3566
        ],
        "op": "DUP8",
        "path": "21"
      },
      "11186": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3568,
          3581
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11187": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3583,
          3590
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11188": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3531,
          3553
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2CE0"
      },
      "11191": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "jump": "i",
        "offset": [
          3531,
          3591
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11192": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3531,
          3591
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11193": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3510,
          3591
        ],
        "op": "SWAP1",
        "path": "21"
      },
      "11194": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3510,
          3591
        ],
        "op": "POP",
        "path": "21"
      },
      "11195": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3605,
          3623
        ],
        "op": "PUSH1",
        "path": "21",
        "value": "0x0"
      },
      "11197": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3626,
          3686
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2BC7"
      },
      "11200": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3649,
          3662
        ],
        "op": "DUP8",
        "path": "21"
      },
      "11201": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3664,
          3676
        ],
        "op": "DUP10",
        "path": "21"
      },
      "11202": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3678,
          3685
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11203": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3626,
          3648
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D4A"
      },
      "11206": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "jump": "i",
        "offset": [
          3626,
          3686
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11207": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3626,
          3686
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11208": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3605,
          3686
        ],
        "op": "SWAP1",
        "path": "21"
      },
      "11209": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3605,
          3686
        ],
        "op": "POP",
        "path": "21"
      },
      "11210": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3726,
          3736
        ],
        "op": "DUP1",
        "path": "21",
        "statement": 182
      },
      "11211": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11213": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11215": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "11217": {
        "op": "SHL"
      },
      "11218": {
        "op": "SUB"
      },
      "11219": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3713,
          3736
        ],
        "op": "AND",
        "path": "21"
      },
      "11220": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3713,
          3723
        ],
        "op": "DUP3",
        "path": "21"
      },
      "11221": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11223": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11225": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "11227": {
        "op": "SHL"
      },
      "11228": {
        "op": "SUB"
      },
      "11229": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3713,
          3736
        ],
        "op": "AND",
        "path": "21"
      },
      "11230": {
        "branch": 287,
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3713,
          3736
        ],
        "op": "LT",
        "path": "21"
      },
      "11231": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3713,
          3762
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2BE8"
      },
      "11234": {
        "branch": 287,
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3713,
          3762
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11235": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3752,
          3762
        ],
        "op": "DUP1",
        "path": "21"
      },
      "11236": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3713,
          3762
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2BEA"
      },
      "11239": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3713,
          3762
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11240": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3713,
          3762
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11241": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3739,
          3749
        ],
        "op": "DUP2",
        "path": "21"
      },
      "11242": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3713,
          3762
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11243": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3701,
          3762
        ],
        "op": "SWAP3",
        "path": "21"
      },
      "11244": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3701,
          3762
        ],
        "op": "POP",
        "path": "21"
      },
      "11245": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3462,
          3877
        ],
        "op": "POP",
        "path": "21"
      },
      "11246": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3462,
          3877
        ],
        "op": "POP",
        "path": "21"
      },
      "11247": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3462,
          3877
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2C01"
      },
      "11250": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3462,
          3877
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11251": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3462,
          3877
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11252": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3805,
          3866
        ],
        "op": "PUSH2",
        "path": "21",
        "statement": 183,
        "value": "0x2BFE"
      },
      "11255": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3828,
          3841
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11256": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3843,
          3856
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11257": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3858,
          3865
        ],
        "op": "DUP5",
        "path": "21"
      },
      "11258": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3805,
          3827
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D4A"
      },
      "11261": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "jump": "i",
        "offset": [
          3805,
          3866
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11262": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3805,
          3866
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11263": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3793,
          3866
        ],
        "op": "SWAP1",
        "path": "21"
      },
      "11264": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3793,
          3866
        ],
        "op": "POP",
        "path": "21"
      },
      "11265": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          3462,
          3877
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11266": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          2982,
          3883
        ],
        "op": "SWAP6",
        "path": "21"
      },
      "11267": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          2982,
          3883
        ],
        "op": "SWAP5",
        "path": "21"
      },
      "11268": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          2982,
          3883
        ],
        "op": "POP",
        "path": "21"
      },
      "11269": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          2982,
          3883
        ],
        "op": "POP",
        "path": "21"
      },
      "11270": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          2982,
          3883
        ],
        "op": "POP",
        "path": "21"
      },
      "11271": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          2982,
          3883
        ],
        "op": "POP",
        "path": "21"
      },
      "11272": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "offset": [
          2982,
          3883
        ],
        "op": "POP",
        "path": "21"
      },
      "11273": {
        "fn": "LiquidityAmounts.getLiquidityForAmounts",
        "jump": "o",
        "offset": [
          2982,
          3883
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11274": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6013,
          6812
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11275": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6193,
          6208
        ],
        "op": "PUSH1",
        "path": "21",
        "value": "0x0"
      },
      "11277": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6210,
          6225
        ],
        "op": "DUP1",
        "path": "21"
      },
      "11278": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6257,
          6270
        ],
        "op": "DUP4",
        "path": "21"
      },
      "11279": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11281": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11283": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11285": {
        "op": "SHL"
      },
      "11286": {
        "op": "SUB"
      },
      "11287": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6241,
          6270
        ],
        "op": "AND",
        "path": "21"
      },
      "11288": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6241,
          6254
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11289": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11291": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11293": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11295": {
        "op": "SHL"
      },
      "11296": {
        "op": "SUB"
      },
      "11297": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6241,
          6270
        ],
        "op": "AND",
        "path": "21"
      },
      "11298": {
        "branch": 288,
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6241,
          6270
        ],
        "op": "GT",
        "path": "21"
      },
      "11299": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6237,
          6335
        ],
        "op": "ISZERO",
        "path": "21"
      },
      "11300": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6237,
          6335
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2C2B"
      },
      "11303": {
        "branch": 288,
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6237,
          6335
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11304": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6306,
          6319
        ],
        "op": "SWAP3",
        "path": "21",
        "statement": 184
      },
      "11305": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6306,
          6319
        ],
        "op": "SWAP4",
        "path": "21"
      },
      "11306": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6321,
          6334
        ],
        "op": "SWAP3",
        "path": "21"
      },
      "11307": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6237,
          6335
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11308": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6366,
          6379
        ],
        "op": "DUP5",
        "path": "21"
      },
      "11309": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11311": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11313": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11315": {
        "op": "SHL"
      },
      "11316": {
        "op": "SUB"
      },
      "11317": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6350,
          6379
        ],
        "op": "AND",
        "path": "21"
      },
      "11318": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6350,
          6362
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11319": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11321": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11323": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11325": {
        "op": "SHL"
      },
      "11326": {
        "op": "SUB"
      },
      "11327": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6350,
          6379
        ],
        "op": "AND",
        "path": "21"
      },
      "11328": {
        "branch": 289,
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6350,
          6379
        ],
        "op": "GT",
        "path": "21"
      },
      "11329": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6346,
          6806
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2C56"
      },
      "11332": {
        "branch": 289,
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6346,
          6806
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11333": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6405,
          6468
        ],
        "op": "PUSH2",
        "path": "21",
        "statement": 185,
        "value": "0x2C4F"
      },
      "11336": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6428,
          6441
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11337": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6443,
          6456
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11338": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6458,
          6467
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11339": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6405,
          6427
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D80"
      },
      "11342": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "jump": "i",
        "offset": [
          6405,
          6468
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11343": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6405,
          6468
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11344": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6395,
          6468
        ],
        "op": "SWAP2",
        "path": "21"
      },
      "11345": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6395,
          6468
        ],
        "op": "POP",
        "path": "21"
      },
      "11346": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6346,
          6806
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2C9D"
      },
      "11349": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6346,
          6806
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11350": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6346,
          6806
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11351": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6504,
          6517
        ],
        "op": "DUP4",
        "path": "21"
      },
      "11352": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11354": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11356": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11358": {
        "op": "SHL"
      },
      "11359": {
        "op": "SUB"
      },
      "11360": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6489,
          6517
        ],
        "op": "AND",
        "path": "21"
      },
      "11361": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6489,
          6501
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11362": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11364": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11366": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11368": {
        "op": "SHL"
      },
      "11369": {
        "op": "SUB"
      },
      "11370": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6489,
          6517
        ],
        "op": "AND",
        "path": "21"
      },
      "11371": {
        "branch": 290,
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6489,
          6517
        ],
        "op": "LT",
        "path": "21"
      },
      "11372": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6485,
          6806
        ],
        "op": "ISZERO",
        "path": "21"
      },
      "11373": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6485,
          6806
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2C8F"
      },
      "11376": {
        "branch": 290,
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6485,
          6806
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11377": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6543,
          6605
        ],
        "op": "PUSH2",
        "path": "21",
        "statement": 186,
        "value": "0x2C7B"
      },
      "11380": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6566,
          6578
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11381": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6580,
          6593
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11382": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6595,
          6604
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11383": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6543,
          6565
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D80"
      },
      "11386": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "jump": "i",
        "offset": [
          6543,
          6605
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11387": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6543,
          6605
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11388": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6533,
          6605
        ],
        "op": "SWAP2",
        "path": "21"
      },
      "11389": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6533,
          6605
        ],
        "op": "POP",
        "path": "21"
      },
      "11390": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6629,
          6691
        ],
        "op": "PUSH2",
        "path": "21",
        "statement": 187,
        "value": "0x2C88"
      },
      "11393": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6652,
          6665
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11394": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6667,
          6679
        ],
        "op": "DUP8",
        "path": "21"
      },
      "11395": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6681,
          6690
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11396": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6629,
          6651
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2DF3"
      },
      "11399": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "jump": "i",
        "offset": [
          6629,
          6691
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11400": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6629,
          6691
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11401": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6619,
          6691
        ],
        "op": "SWAP1",
        "path": "21"
      },
      "11402": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6619,
          6691
        ],
        "op": "POP",
        "path": "21"
      },
      "11403": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6485,
          6806
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2C9D"
      },
      "11406": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6485,
          6806
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11407": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6485,
          6806
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11408": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6732,
          6795
        ],
        "op": "PUSH2",
        "path": "21",
        "statement": 188,
        "value": "0x2C9A"
      },
      "11411": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6755,
          6768
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11412": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6770,
          6783
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11413": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6785,
          6794
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11414": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6732,
          6754
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2DF3"
      },
      "11417": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "jump": "i",
        "offset": [
          6732,
          6795
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11418": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6732,
          6795
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11419": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6722,
          6795
        ],
        "op": "SWAP1",
        "path": "21"
      },
      "11420": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6722,
          6795
        ],
        "op": "POP",
        "path": "21"
      },
      "11421": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6485,
          6806
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11422": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6013,
          6812
        ],
        "op": "SWAP5",
        "path": "21"
      },
      "11423": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6013,
          6812
        ],
        "op": "POP",
        "path": "21"
      },
      "11424": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6013,
          6812
        ],
        "op": "SWAP5",
        "path": "21"
      },
      "11425": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6013,
          6812
        ],
        "op": "SWAP3",
        "path": "21"
      },
      "11426": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6013,
          6812
        ],
        "op": "POP",
        "path": "21"
      },
      "11427": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6013,
          6812
        ],
        "op": "POP",
        "path": "21"
      },
      "11428": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "offset": [
          6013,
          6812
        ],
        "op": "POP",
        "path": "21"
      },
      "11429": {
        "fn": "LiquidityAmounts.getAmountsForLiquidity",
        "jump": "o",
        "offset": [
          6013,
          6812
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11430": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19891,
          20031
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "11431": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19945,
          19952
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "11433": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11435": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11437": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "11439": {
        "op": "SHL"
      },
      "11440": {
        "op": "SUB"
      },
      "11441": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19972,
          19994
        ],
        "op": "DUP3",
        "path": "23",
        "statement": 189
      },
      "11442": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19972,
          19994
        ],
        "op": "GT",
        "path": "23"
      },
      "11443": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19972,
          19994
        ],
        "op": "ISZERO",
        "path": "23"
      },
      "11444": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "PUSH2",
        "path": "23",
        "value": "0x2CCD"
      },
      "11447": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "JUMPI",
        "path": "23"
      },
      "11448": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "11453": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "11455": {
        "op": "SHL"
      },
      "11456": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "11458": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "11459": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x1"
      },
      "11461": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x4"
      },
      "11463": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "MSTORE",
        "path": "23"
      },
      "11464": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x24"
      },
      "11466": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "PUSH1",
        "path": "23",
        "value": "0x0"
      },
      "11468": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "REVERT",
        "path": "23"
      },
      "11469": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          19965,
          19995
        ],
        "op": "JUMPDEST",
        "path": "23"
      },
      "11470": {
        "op": "POP"
      },
      "11471": {
        "fn": "SharpeAI._toUint128",
        "offset": [
          20021,
          20022
        ],
        "op": "SWAP1",
        "path": "23",
        "statement": 190
      },
      "11472": {
        "fn": "SharpeAI._toUint128",
        "jump": "o",
        "offset": [
          19891,
          20031
        ],
        "op": "JUMP",
        "path": "23"
      },
      "11473": {
        "fn": "Address.functionCall",
        "offset": [
          3861,
          4084
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "11474": {
        "fn": "Address.functionCall",
        "offset": [
          3994,
          4006
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x60"
      },
      "11476": {
        "fn": "Address.functionCall",
        "offset": [
          4025,
          4077
        ],
        "op": "PUSH2",
        "path": "5",
        "statement": 191,
        "value": "0x2B3E"
      },
      "11479": {
        "fn": "Address.functionCall",
        "offset": [
          4047,
          4053
        ],
        "op": "DUP5",
        "path": "5"
      },
      "11480": {
        "fn": "Address.functionCall",
        "offset": [
          4055,
          4059
        ],
        "op": "DUP5",
        "path": "5"
      },
      "11481": {
        "fn": "Address.functionCall",
        "offset": [
          4061,
          4062
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x0"
      },
      "11483": {
        "fn": "Address.functionCall",
        "offset": [
          4064,
          4076
        ],
        "op": "DUP6",
        "path": "5"
      },
      "11484": {
        "fn": "Address.functionCall",
        "offset": [
          4025,
          4046
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x2E3D"
      },
      "11487": {
        "fn": "Address.functionCall",
        "jump": "i",
        "offset": [
          4025,
          4077
        ],
        "op": "JUMP",
        "path": "5"
      },
      "11488": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1085,
          1560
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11489": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1233,
          1250
        ],
        "op": "PUSH1",
        "path": "21",
        "value": "0x0"
      },
      "11491": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1282,
          1295
        ],
        "op": "DUP3",
        "path": "21"
      },
      "11492": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11494": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11496": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11498": {
        "op": "SHL"
      },
      "11499": {
        "op": "SUB"
      },
      "11500": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1266,
          1295
        ],
        "op": "AND",
        "path": "21"
      },
      "11501": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1266,
          1279
        ],
        "op": "DUP5",
        "path": "21"
      },
      "11502": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11504": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11506": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11508": {
        "op": "SHL"
      },
      "11509": {
        "op": "SUB"
      },
      "11510": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1266,
          1295
        ],
        "op": "AND",
        "path": "21"
      },
      "11511": {
        "branch": 291,
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1266,
          1295
        ],
        "op": "GT",
        "path": "21"
      },
      "11512": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1262,
          1360
        ],
        "op": "ISZERO",
        "path": "21"
      },
      "11513": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1262,
          1360
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D00"
      },
      "11516": {
        "branch": 291,
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1262,
          1360
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11517": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1331,
          1344
        ],
        "op": "SWAP2",
        "path": "21",
        "statement": 192
      },
      "11518": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1331,
          1344
        ],
        "op": "SWAP3",
        "path": "21"
      },
      "11519": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1346,
          1359
        ],
        "op": "SWAP2",
        "path": "21"
      },
      "11520": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1262,
          1360
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11521": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1370,
          1390
        ],
        "op": "PUSH1",
        "path": "21",
        "value": "0x0"
      },
      "11523": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1393,
          1456
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D23"
      },
      "11526": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1409,
          1422
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11527": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11529": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11531": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11533": {
        "op": "SHL"
      },
      "11534": {
        "op": "SUB"
      },
      "11535": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1393,
          1456
        ],
        "op": "AND",
        "path": "21"
      },
      "11536": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1424,
          1437
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11537": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11539": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11541": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11543": {
        "op": "SHL"
      },
      "11544": {
        "op": "SUB"
      },
      "11545": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1393,
          1456
        ],
        "op": "AND",
        "path": "21"
      },
      "11546": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11548": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "11550": {
        "op": "SHL"
      },
      "11551": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1393,
          1408
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2EFD"
      },
      "11554": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "jump": "i",
        "offset": [
          1393,
          1456
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11555": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1393,
          1456
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11556": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1370,
          1456
        ],
        "op": "SWAP1",
        "path": "21"
      },
      "11557": {
        "op": "POP"
      },
      "11558": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1473,
          1553
        ],
        "op": "PUSH2",
        "path": "21",
        "statement": 193,
        "value": "0x2C01"
      },
      "11561": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1483,
          1552
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D45"
      },
      "11564": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1499,
          1506
        ],
        "op": "DUP5",
        "path": "21"
      },
      "11565": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1370,
          1456
        ],
        "op": "DUP4",
        "path": "21"
      },
      "11566": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1522,
          1551
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D37"
      },
      "11569": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1538,
          1551
        ],
        "op": "DUP10",
        "path": "21"
      },
      "11570": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1522,
          1535
        ],
        "op": "DUP10",
        "path": "21"
      },
      "11571": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1522,
          1551
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x3EF7"
      },
      "11574": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "jump": "i",
        "offset": [
          1522,
          1551
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11575": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1522,
          1551
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11576": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11578": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11580": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11582": {
        "op": "SHL"
      },
      "11583": {
        "op": "SUB"
      },
      "11584": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1483,
          1552
        ],
        "op": "AND",
        "path": "21"
      },
      "11585": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1483,
          1498
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2EFD"
      },
      "11588": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "jump": "i",
        "offset": [
          1483,
          1552
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11589": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1483,
          1552
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11590": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "offset": [
          1473,
          1482
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x3073"
      },
      "11593": {
        "fn": "LiquidityAmounts.getLiquidityForAmount0",
        "jump": "i",
        "offset": [
          1473,
          1553
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11594": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          1999,
          2382
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11595": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2147,
          2164
        ],
        "op": "PUSH1",
        "path": "21",
        "value": "0x0"
      },
      "11597": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2196,
          2209
        ],
        "op": "DUP3",
        "path": "21"
      },
      "11598": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11600": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11602": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11604": {
        "op": "SHL"
      },
      "11605": {
        "op": "SUB"
      },
      "11606": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2180,
          2209
        ],
        "op": "AND",
        "path": "21"
      },
      "11607": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2180,
          2193
        ],
        "op": "DUP5",
        "path": "21"
      },
      "11608": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11610": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11612": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11614": {
        "op": "SHL"
      },
      "11615": {
        "op": "SUB"
      },
      "11616": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2180,
          2209
        ],
        "op": "AND",
        "path": "21"
      },
      "11617": {
        "branch": 292,
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2180,
          2209
        ],
        "op": "GT",
        "path": "21"
      },
      "11618": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2176,
          2274
        ],
        "op": "ISZERO",
        "path": "21"
      },
      "11619": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2176,
          2274
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D6A"
      },
      "11622": {
        "branch": 292,
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2176,
          2274
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11623": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2245,
          2258
        ],
        "op": "SWAP2",
        "path": "21",
        "statement": 194
      },
      "11624": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2245,
          2258
        ],
        "op": "SWAP3",
        "path": "21"
      },
      "11625": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2260,
          2273
        ],
        "op": "SWAP2",
        "path": "21"
      },
      "11626": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2176,
          2274
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11627": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2291,
          2375
        ],
        "op": "PUSH2",
        "path": "21",
        "statement": 195,
        "value": "0x2B3E"
      },
      "11630": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2301,
          2374
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D45"
      },
      "11633": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2317,
          2324
        ],
        "op": "DUP4",
        "path": "21"
      },
      "11634": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11636": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "11638": {
        "op": "SHL"
      },
      "11639": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2344,
          2373
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2D37"
      },
      "11642": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2360,
          2373
        ],
        "op": "DUP9",
        "path": "21"
      },
      "11643": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2344,
          2357
        ],
        "op": "DUP9",
        "path": "21"
      },
      "11644": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "offset": [
          2344,
          2373
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x3EF7"
      },
      "11647": {
        "fn": "LiquidityAmounts.getLiquidityForAmount1",
        "jump": "i",
        "offset": [
          2344,
          2373
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11648": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4241,
          4739
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11649": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4391,
          4406
        ],
        "op": "PUSH1",
        "path": "21",
        "value": "0x0"
      },
      "11651": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4438,
          4451
        ],
        "op": "DUP3",
        "path": "21"
      },
      "11652": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11654": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11656": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11658": {
        "op": "SHL"
      },
      "11659": {
        "op": "SUB"
      },
      "11660": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4422,
          4451
        ],
        "op": "AND",
        "path": "21"
      },
      "11661": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4422,
          4435
        ],
        "op": "DUP5",
        "path": "21"
      },
      "11662": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11664": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11666": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11668": {
        "op": "SHL"
      },
      "11669": {
        "op": "SUB"
      },
      "11670": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4422,
          4451
        ],
        "op": "AND",
        "path": "21"
      },
      "11671": {
        "branch": 293,
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4422,
          4451
        ],
        "op": "GT",
        "path": "21"
      },
      "11672": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4418,
          4516
        ],
        "op": "ISZERO",
        "path": "21"
      },
      "11673": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4418,
          4516
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2DA0"
      },
      "11676": {
        "branch": 293,
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4418,
          4516
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11677": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4487,
          4500
        ],
        "op": "SWAP2",
        "path": "21",
        "statement": 196
      },
      "11678": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4487,
          4500
        ],
        "op": "SWAP3",
        "path": "21"
      },
      "11679": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4502,
          4515
        ],
        "op": "SWAP2",
        "path": "21"
      },
      "11680": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4418,
          4516
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11681": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11683": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11685": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11687": {
        "op": "SHL"
      },
      "11688": {
        "op": "SUB"
      },
      "11689": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4732
        ],
        "op": "DUP5",
        "path": "21",
        "statement": 197
      },
      "11690": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4732
        ],
        "op": "AND",
        "path": "21"
      },
      "11691": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4716
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2DE9"
      },
      "11694": {
        "op": "PUSH16",
        "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
      },
      "11711": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "11713": {
        "op": "SHL"
      },
      "11714": {
        "offset": [
          309,
          311
        ],
        "op": "PUSH1",
        "path": "18",
        "value": "0x60"
      },
      "11716": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4579,
          4624
        ],
        "op": "DUP6",
        "path": "21"
      },
      "11717": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4579,
          4624
        ],
        "op": "SWAP1",
        "path": "21"
      },
      "11718": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4579,
          4624
        ],
        "op": "SHL",
        "path": "21"
      },
      "11719": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4579,
          4624
        ],
        "op": "AND",
        "path": "21"
      },
      "11720": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4642,
          4671
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2DD1"
      },
      "11723": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4719,
          4732
        ],
        "op": "DUP8",
        "path": "21"
      },
      "11724": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4642,
          4655
        ],
        "op": "DUP8",
        "path": "21"
      },
      "11725": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4642,
          4671
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x3EF7"
      },
      "11728": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "jump": "i",
        "offset": [
          4642,
          4671
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11729": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4642,
          4671
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11730": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11732": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11734": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11736": {
        "op": "SHL"
      },
      "11737": {
        "op": "SUB"
      },
      "11738": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4716
        ],
        "op": "AND",
        "path": "21"
      },
      "11739": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4689,
          4702
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11740": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11742": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11744": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11746": {
        "op": "SHL"
      },
      "11747": {
        "op": "SUB"
      },
      "11748": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4716
        ],
        "op": "AND",
        "path": "21"
      },
      "11749": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4561
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2EFD"
      },
      "11752": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "jump": "i",
        "offset": [
          4546,
          4716
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11753": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4716
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11754": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4732
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2B3E"
      },
      "11757": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4732
        ],
        "op": "SWAP2",
        "path": "21"
      },
      "11758": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4732
        ],
        "op": "SWAP1",
        "path": "21"
      },
      "11759": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "offset": [
          4546,
          4732
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x3EC4"
      },
      "11762": {
        "fn": "LiquidityAmounts.getAmount0ForLiquidity",
        "jump": "i",
        "offset": [
          4546,
          4732
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11763": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5097,
          5472
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11764": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5247,
          5262
        ],
        "op": "PUSH1",
        "path": "21",
        "value": "0x0"
      },
      "11766": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5294,
          5307
        ],
        "op": "DUP3",
        "path": "21"
      },
      "11767": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11769": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11771": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11773": {
        "op": "SHL"
      },
      "11774": {
        "op": "SUB"
      },
      "11775": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5278,
          5307
        ],
        "op": "AND",
        "path": "21"
      },
      "11776": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5278,
          5291
        ],
        "op": "DUP5",
        "path": "21"
      },
      "11777": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11779": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11781": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11783": {
        "op": "SHL"
      },
      "11784": {
        "op": "SUB"
      },
      "11785": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5278,
          5307
        ],
        "op": "AND",
        "path": "21"
      },
      "11786": {
        "branch": 294,
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5278,
          5307
        ],
        "op": "GT",
        "path": "21"
      },
      "11787": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5274,
          5372
        ],
        "op": "ISZERO",
        "path": "21"
      },
      "11788": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5274,
          5372
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2E13"
      },
      "11791": {
        "branch": 294,
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5274,
          5372
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "11792": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5343,
          5356
        ],
        "op": "SWAP2",
        "path": "21",
        "statement": 198
      },
      "11793": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5343,
          5356
        ],
        "op": "SWAP3",
        "path": "21"
      },
      "11794": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5358,
          5371
        ],
        "op": "SWAP2",
        "path": "21"
      },
      "11795": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5274,
          5372
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11796": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5390,
          5465
        ],
        "op": "PUSH2",
        "path": "21",
        "statement": 199,
        "value": "0x2B3E"
      },
      "11799": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11801": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11803": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "11805": {
        "op": "SHL"
      },
      "11806": {
        "op": "SUB"
      },
      "11807": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5390,
          5465
        ],
        "op": "DUP4",
        "path": "21"
      },
      "11808": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5390,
          5465
        ],
        "op": "AND",
        "path": "21"
      },
      "11809": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5417,
          5446
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2E2A"
      },
      "11812": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5433,
          5446
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11813": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5417,
          5430
        ],
        "op": "DUP7",
        "path": "21"
      },
      "11814": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5417,
          5446
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x3EF7"
      },
      "11817": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "jump": "i",
        "offset": [
          5417,
          5446
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11818": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5417,
          5446
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "11819": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11821": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11823": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11825": {
        "op": "SHL"
      },
      "11826": {
        "op": "SUB"
      },
      "11827": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5390,
          5465
        ],
        "op": "AND",
        "path": "21"
      },
      "11828": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11830": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "11832": {
        "op": "SHL"
      },
      "11833": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "offset": [
          5390,
          5405
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0x2EFD"
      },
      "11836": {
        "fn": "LiquidityAmounts.getAmount1ForLiquidity",
        "jump": "i",
        "offset": [
          5390,
          5465
        ],
        "op": "JUMP",
        "path": "21"
      },
      "11837": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          4948,
          5447
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "11838": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5113,
          5125
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x60"
      },
      "11840": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5170,
          5175
        ],
        "op": "DUP3",
        "path": "5",
        "statement": 200
      },
      "11841": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5145,
          5166
        ],
        "op": "SELFBALANCE",
        "path": "5"
      },
      "11842": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5145,
          5175
        ],
        "op": "LT",
        "path": "5"
      },
      "11843": {
        "branch": 266,
        "fn": "Address.functionCallWithValue",
        "offset": [
          5145,
          5175
        ],
        "op": "ISZERO",
        "path": "5"
      },
      "11844": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x2E5F"
      },
      "11847": {
        "branch": 266,
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "JUMPI",
        "path": "5"
      },
      "11848": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x40"
      },
      "11850": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "MLOAD",
        "path": "5"
      },
      "11851": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "11855": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "11857": {
        "op": "SHL"
      },
      "11858": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "DUP2",
        "path": "5"
      },
      "11859": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "MSTORE",
        "path": "5"
      },
      "11860": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x4"
      },
      "11862": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "ADD",
        "path": "5"
      },
      "11863": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x542"
      },
      "11866": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "SWAP1",
        "path": "5"
      },
      "11867": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x3A29"
      },
      "11870": {
        "fn": "Address.functionCallWithValue",
        "jump": "i",
        "offset": [
          5137,
          5218
        ],
        "op": "JUMP",
        "path": "5"
      },
      "11871": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5137,
          5218
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "11872": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5236,
          5254
        ],
        "op": "PUSH2",
        "path": "5",
        "statement": 201,
        "value": "0x2E68"
      },
      "11875": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5247,
          5253
        ],
        "op": "DUP6",
        "path": "5"
      },
      "11876": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5236,
          5246
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x3089"
      },
      "11879": {
        "fn": "Address.functionCallWithValue",
        "jump": "i",
        "offset": [
          5236,
          5254
        ],
        "op": "JUMP",
        "path": "5"
      },
      "11880": {
        "branch": 267,
        "fn": "Address.functionCallWithValue",
        "offset": [
          5236,
          5254
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "11881": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x2E84"
      },
      "11884": {
        "branch": 267,
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "JUMPI",
        "path": "5"
      },
      "11885": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x40"
      },
      "11887": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "MLOAD",
        "path": "5"
      },
      "11888": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "11892": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "11894": {
        "op": "SHL"
      },
      "11895": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "DUP2",
        "path": "5"
      },
      "11896": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "MSTORE",
        "path": "5"
      },
      "11897": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x4"
      },
      "11899": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "ADD",
        "path": "5"
      },
      "11900": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x542"
      },
      "11903": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "SWAP1",
        "path": "5"
      },
      "11904": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x3D03"
      },
      "11907": {
        "fn": "Address.functionCallWithValue",
        "jump": "i",
        "offset": [
          5228,
          5288
        ],
        "op": "JUMP",
        "path": "5"
      },
      "11908": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5228,
          5288
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "11909": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5300,
          5312
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x0"
      },
      "11911": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5314,
          5337
        ],
        "op": "DUP1",
        "path": "5"
      },
      "11912": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5347
        ],
        "op": "DUP7",
        "path": "5"
      },
      "11913": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11915": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "11917": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "11919": {
        "op": "SHL"
      },
      "11920": {
        "op": "SUB"
      },
      "11921": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5352
        ],
        "op": "AND",
        "path": "5"
      },
      "11922": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5360,
          5365
        ],
        "op": "DUP6",
        "path": "5"
      },
      "11923": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5367,
          5371
        ],
        "op": "DUP8",
        "path": "5"
      },
      "11924": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x40"
      },
      "11926": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "MLOAD",
        "path": "5"
      },
      "11927": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x2EA0"
      },
      "11930": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SWAP2",
        "path": "5"
      },
      "11931": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SWAP1",
        "path": "5"
      },
      "11932": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x3625"
      },
      "11935": {
        "fn": "Address.functionCallWithValue",
        "jump": "i",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMP",
        "path": "5"
      },
      "11936": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "11937": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x0"
      },
      "11939": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x40"
      },
      "11941": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "MLOAD",
        "path": "5"
      },
      "11942": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP1",
        "path": "5"
      },
      "11943": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP4",
        "path": "5"
      },
      "11944": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SUB",
        "path": "5"
      },
      "11945": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP2",
        "path": "5"
      },
      "11946": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP6",
        "path": "5"
      },
      "11947": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP8",
        "path": "5"
      },
      "11948": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "GAS",
        "path": "5"
      },
      "11949": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "CALL",
        "path": "5"
      },
      "11950": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SWAP3",
        "path": "5"
      },
      "11951": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "5"
      },
      "11952": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "5"
      },
      "11953": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "5"
      },
      "11954": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "RETURNDATASIZE",
        "path": "5"
      },
      "11955": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP1",
        "path": "5"
      },
      "11956": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x0"
      },
      "11958": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP2",
        "path": "5"
      },
      "11959": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "EQ",
        "path": "5"
      },
      "11960": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x2EDD"
      },
      "11963": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMPI",
        "path": "5"
      },
      "11964": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x40"
      },
      "11966": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "MLOAD",
        "path": "5"
      },
      "11967": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SWAP2",
        "path": "5"
      },
      "11968": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "5"
      },
      "11969": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x1F"
      },
      "11971": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "NOT",
        "path": "5"
      },
      "11972": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x3F"
      },
      "11974": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "RETURNDATASIZE",
        "path": "5"
      },
      "11975": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "ADD",
        "path": "5"
      },
      "11976": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "AND",
        "path": "5"
      },
      "11977": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP3",
        "path": "5"
      },
      "11978": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "ADD",
        "path": "5"
      },
      "11979": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x40"
      },
      "11981": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "MSTORE",
        "path": "5"
      },
      "11982": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "RETURNDATASIZE",
        "path": "5"
      },
      "11983": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP3",
        "path": "5"
      },
      "11984": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "MSTORE",
        "path": "5"
      },
      "11985": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "RETURNDATASIZE",
        "path": "5"
      },
      "11986": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x0"
      },
      "11988": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x20"
      },
      "11990": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "DUP5",
        "path": "5"
      },
      "11991": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "ADD",
        "path": "5"
      },
      "11992": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "RETURNDATACOPY",
        "path": "5"
      },
      "11993": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x2EE2"
      },
      "11996": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMP",
        "path": "5"
      },
      "11997": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "11998": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x60"
      },
      "12000": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "SWAP2",
        "path": "5"
      },
      "12001": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "5"
      },
      "12002": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "12003": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5341,
          5372
        ],
        "op": "POP",
        "path": "5"
      },
      "12004": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5299,
          5372
        ],
        "op": "SWAP2",
        "path": "5"
      },
      "12005": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5299,
          5372
        ],
        "op": "POP",
        "path": "5"
      },
      "12006": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5299,
          5372
        ],
        "op": "SWAP2",
        "path": "5"
      },
      "12007": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5299,
          5372
        ],
        "op": "POP",
        "path": "5"
      },
      "12008": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5389,
          5440
        ],
        "op": "PUSH2",
        "path": "5",
        "statement": 202,
        "value": "0x2EF2"
      },
      "12011": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5406,
          5413
        ],
        "op": "DUP3",
        "path": "5"
      },
      "12012": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5415,
          5425
        ],
        "op": "DUP3",
        "path": "5"
      },
      "12013": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5427,
          5439
        ],
        "op": "DUP7",
        "path": "5"
      },
      "12014": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5389,
          5405
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x30BA"
      },
      "12017": {
        "fn": "Address.functionCallWithValue",
        "jump": "i",
        "offset": [
          5389,
          5440
        ],
        "op": "JUMP",
        "path": "5"
      },
      "12018": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5389,
          5440
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "12019": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          5382,
          5440
        ],
        "op": "SWAP8",
        "path": "5"
      },
      "12020": {
        "fn": "Address.functionCallWithValue",
        "offset": [
          4948,
          5447
        ],
        "op": "SWAP7",
        "path": "5"
      },
      "12021": {
        "op": "POP"
      },
      "12022": {
        "op": "POP"
      },
      "12023": {
        "op": "POP"
      },
      "12024": {
        "op": "POP"
      },
      "12025": {
        "op": "POP"
      },
      "12026": {
        "op": "POP"
      },
      "12027": {
        "op": "POP"
      },
      "12028": {
        "fn": "Address.functionCallWithValue",
        "jump": "o",
        "offset": [
          4948,
          5447
        ],
        "op": "JUMP",
        "path": "5"
      },
      "12029": {
        "fn": "FullMath.mulDiv",
        "offset": [
          742,
          4524
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12030": {
        "fn": "FullMath.mulDiv",
        "offset": [
          854,
          868
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x0"
      },
      "12032": {
        "fn": "FullMath.mulDiv",
        "offset": [
          854,
          868
        ],
        "op": "DUP1",
        "path": "19"
      },
      "12033": {
        "fn": "FullMath.mulDiv",
        "offset": [
          854,
          868
        ],
        "op": "DUP1",
        "path": "19"
      },
      "12034": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12036": {
        "op": "NOT"
      },
      "12037": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1361,
          1362
        ],
        "op": "DUP6",
        "path": "19"
      },
      "12038": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1358,
          1359
        ],
        "op": "DUP8",
        "path": "19"
      },
      "12039": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1351,
          1371
        ],
        "op": "MULMOD",
        "path": "19"
      },
      "12040": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1393,
          1402
        ],
        "op": "DUP7",
        "path": "19"
      },
      "12041": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1393,
          1402
        ],
        "op": "DUP7",
        "path": "19"
      },
      "12042": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1393,
          1402
        ],
        "op": "MUL",
        "path": "19"
      },
      "12043": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1393,
          1402
        ],
        "op": "SWAP3",
        "path": "19"
      },
      "12044": {
        "op": "POP"
      },
      "12045": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1444,
          1457
        ],
        "op": "DUP3",
        "path": "19"
      },
      "12046": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1444,
          1457
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12047": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1444,
          1457
        ],
        "op": "LT",
        "path": "19"
      },
      "12048": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1428,
          1442
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12049": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1428,
          1442
        ],
        "op": "DUP4",
        "path": "19"
      },
      "12050": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1428,
          1442
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12051": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1428,
          1442
        ],
        "op": "SUB",
        "path": "19"
      },
      "12052": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1424,
          1458
        ],
        "op": "SUB",
        "path": "19"
      },
      "12053": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1424,
          1458
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12054": {
        "op": "POP"
      },
      "12055": {
        "branch": 281,
        "fn": "FullMath.mulDiv",
        "offset": [
          1540,
          1550
        ],
        "op": "DUP1",
        "path": "19"
      },
      "12056": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1536,
          1715
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2F33"
      },
      "12059": {
        "branch": 281,
        "fn": "FullMath.mulDiv",
        "offset": [
          1536,
          1715
        ],
        "op": "JUMPI",
        "path": "19"
      },
      "12060": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1588,
          1589
        ],
        "op": "PUSH1",
        "path": "19",
        "statement": 203,
        "value": "0x0"
      },
      "12062": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1574,
          1585
        ],
        "op": "DUP5",
        "path": "19"
      },
      "12063": {
        "branch": 282,
        "fn": "FullMath.mulDiv",
        "offset": [
          1574,
          1589
        ],
        "op": "GT",
        "path": "19"
      },
      "12064": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1566,
          1590
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2F28"
      },
      "12067": {
        "branch": 282,
        "fn": "FullMath.mulDiv",
        "offset": [
          1566,
          1590
        ],
        "op": "JUMPI",
        "path": "19"
      },
      "12068": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1566,
          1590
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x0"
      },
      "12070": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1566,
          1590
        ],
        "op": "DUP1",
        "path": "19"
      },
      "12071": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1566,
          1590
        ],
        "op": "REVERT",
        "path": "19"
      },
      "12072": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1566,
          1590
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12073": {
        "op": "POP"
      },
      "12074": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1641,
          1664
        ],
        "op": "DUP3",
        "path": "19"
      },
      "12075": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1641,
          1664
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12076": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1641,
          1664
        ],
        "op": "DIV",
        "path": "19"
      },
      "12077": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1641,
          1664
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12078": {
        "op": "POP"
      },
      "12079": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1691,
          1704
        ],
        "op": "PUSH2",
        "path": "19",
        "statement": 204,
        "value": "0x76C"
      },
      "12082": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1691,
          1704
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12083": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1536,
          1715
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12084": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1842,
          1847
        ],
        "op": "DUP1",
        "path": "19",
        "statement": 205
      },
      "12085": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1828,
          1839
        ],
        "op": "DUP5",
        "path": "19"
      },
      "12086": {
        "branch": 283,
        "fn": "FullMath.mulDiv",
        "offset": [
          1828,
          1847
        ],
        "op": "GT",
        "path": "19"
      },
      "12087": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1820,
          1848
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2F3F"
      },
      "12090": {
        "branch": 283,
        "fn": "FullMath.mulDiv",
        "offset": [
          1820,
          1848
        ],
        "op": "JUMPI",
        "path": "19"
      },
      "12091": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1820,
          1848
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x0"
      },
      "12093": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1820,
          1848
        ],
        "op": "DUP1",
        "path": "19"
      },
      "12094": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1820,
          1848
        ],
        "op": "REVERT",
        "path": "19"
      },
      "12095": {
        "fn": "FullMath.mulDiv",
        "offset": [
          1820,
          1848
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12096": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2125,
          2142
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x0"
      },
      "12098": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2201,
          2212
        ],
        "op": "DUP5",
        "path": "19"
      },
      "12099": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2198,
          2199
        ],
        "op": "DUP7",
        "path": "19"
      },
      "12100": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2195,
          2196
        ],
        "op": "DUP9",
        "path": "19"
      },
      "12101": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2188,
          2213
        ],
        "op": "MULMOD",
        "path": "19"
      },
      "12102": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2373,
          2394
        ],
        "op": "DUP1",
        "path": "19"
      },
      "12103": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2373,
          2394
        ],
        "op": "DUP5",
        "path": "19"
      },
      "12104": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2373,
          2394
        ],
        "op": "SUB",
        "path": "19"
      },
      "12105": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2373,
          2394
        ],
        "op": "SWAP4",
        "path": "19"
      },
      "12106": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2330,
          2350
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12107": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2330,
          2350
        ],
        "op": "GT",
        "path": "19"
      },
      "12108": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2319,
          2351
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12109": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2319,
          2351
        ],
        "op": "SWAP3",
        "path": "19"
      },
      "12110": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2319,
          2351
        ],
        "op": "SUB",
        "path": "19"
      },
      "12111": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2319,
          2351
        ],
        "op": "SWAP2",
        "path": "19"
      },
      "12112": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2175,
          2213
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12113": {
        "op": "POP"
      },
      "12114": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2553,
          2565
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x0"
      },
      "12116": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2583,
          2599
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2F5F"
      },
      "12119": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2583,
          2595
        ],
        "op": "DUP7",
        "path": "19"
      },
      "12120": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2583,
          2595
        ],
        "op": "NOT",
        "path": "19"
      },
      "12121": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2598,
          2599
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x1"
      },
      "12123": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2583,
          2599
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3EAC"
      },
      "12126": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          2583,
          2599
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12127": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2583,
          2599
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12128": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2568,
          2600
        ],
        "op": "DUP7",
        "path": "19"
      },
      "12129": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2568,
          2600
        ],
        "op": "AND",
        "path": "19"
      },
      "12130": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2694,
          2716
        ],
        "op": "SWAP6",
        "path": "19"
      },
      "12131": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2694,
          2716
        ],
        "op": "DUP7",
        "path": "19"
      },
      "12132": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2694,
          2716
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12133": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2694,
          2716
        ],
        "op": "DIV",
        "path": "19"
      },
      "12134": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2694,
          2716
        ],
        "op": "SWAP6",
        "path": "19"
      },
      "12135": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2822,
          2838
        ],
        "op": "SWAP4",
        "path": "19"
      },
      "12136": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2822,
          2838
        ],
        "op": "DUP5",
        "path": "19"
      },
      "12137": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2822,
          2838
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12138": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2822,
          2838
        ],
        "op": "DIV",
        "path": "19"
      },
      "12139": {
        "fn": "FullMath.mulDiv",
        "offset": [
          2822,
          2838
        ],
        "op": "SWAP4",
        "path": "19"
      },
      "12140": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3070,
          3071
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x0"
      },
      "12142": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3066,
          3078
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12143": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3066,
          3078
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12144": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3066,
          3078
        ],
        "op": "SUB",
        "path": "19"
      },
      "12145": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3062,
          3085
        ],
        "op": "DIV",
        "path": "19"
      },
      "12146": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3087,
          3088
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x1"
      },
      "12148": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3058,
          3089
        ],
        "op": "ADD",
        "path": "19"
      },
      "12149": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3058,
          3089
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12150": {
        "op": "POP"
      },
      "12151": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3117,
          3129
        ],
        "op": "PUSH2",
        "path": "19",
        "statement": 206,
        "value": "0x2F80"
      },
      "12154": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3058,
          3089
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12155": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3117,
          3122
        ],
        "op": "DUP5",
        "path": "19"
      },
      "12156": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3117,
          3129
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12159": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3117,
          3129
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12160": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3117,
          3129
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12161": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3108,
          3129
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12162": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3108,
          3129
        ],
        "op": "SWAP4",
        "path": "19"
      },
      "12163": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3108,
          3129
        ],
        "op": "OR",
        "path": "19"
      },
      "12164": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3108,
          3129
        ],
        "op": "SWAP3",
        "path": "19"
      },
      "12165": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3463,
          3474
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x0"
      },
      "12167": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3478,
          3493
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2F91"
      },
      "12170": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3482,
          3493
        ],
        "op": "DUP8",
        "path": "19"
      },
      "12171": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3478,
          3479
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x3"
      },
      "12173": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3478,
          3493
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12176": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3478,
          3493
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12177": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3478,
          3493
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12178": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3497,
          3498
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x2"
      },
      "12180": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3477,
          3498
        ],
        "op": "XOR",
        "path": "19"
      },
      "12181": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3477,
          3498
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12182": {
        "op": "POP"
      },
      "12183": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3724,
          3741
        ],
        "op": "PUSH2",
        "path": "19",
        "statement": 207,
        "value": "0x2FA0"
      },
      "12186": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3477,
          3498
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12187": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3724,
          3735
        ],
        "op": "DUP9",
        "path": "19"
      },
      "12188": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3724,
          3741
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12191": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3724,
          3741
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12192": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3724,
          3741
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12193": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3720,
          3741
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2FAB"
      },
      "12196": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3720,
          3741
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12197": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3720,
          3721
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x2"
      },
      "12199": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3720,
          3741
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3F1F"
      },
      "12202": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3720,
          3741
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12203": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3720,
          3741
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12204": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3713,
          3741
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2FB5"
      },
      "12207": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3713,
          3741
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12208": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3713,
          3741
        ],
        "op": "DUP3",
        "path": "19"
      },
      "12209": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3713,
          3741
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12212": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3713,
          3741
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12213": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3713,
          3741
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12214": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3713,
          3741
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12215": {
        "op": "POP"
      },
      "12216": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3782,
          3799
        ],
        "op": "PUSH2",
        "path": "19",
        "statement": 208,
        "value": "0x2FC1"
      },
      "12219": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3713,
          3741
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12220": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3782,
          3793
        ],
        "op": "DUP9",
        "path": "19"
      },
      "12221": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3782,
          3799
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12224": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3782,
          3799
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12225": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3782,
          3799
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12226": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3778,
          3799
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2FCC"
      },
      "12229": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3778,
          3799
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12230": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3778,
          3779
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x2"
      },
      "12232": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3778,
          3799
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3F1F"
      },
      "12235": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3778,
          3799
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12236": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3778,
          3799
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12237": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3771,
          3799
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2FD6"
      },
      "12240": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3771,
          3799
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12241": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3771,
          3799
        ],
        "op": "DUP3",
        "path": "19"
      },
      "12242": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3771,
          3799
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12245": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3771,
          3799
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12246": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3771,
          3799
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12247": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3771,
          3799
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12248": {
        "op": "POP"
      },
      "12249": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3841,
          3858
        ],
        "op": "PUSH2",
        "path": "19",
        "statement": 209,
        "value": "0x2FE2"
      },
      "12252": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3771,
          3799
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12253": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3841,
          3852
        ],
        "op": "DUP9",
        "path": "19"
      },
      "12254": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3841,
          3858
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12257": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3841,
          3858
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12258": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3841,
          3858
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12259": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3837,
          3858
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2FED"
      },
      "12262": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3837,
          3858
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12263": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3837,
          3838
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x2"
      },
      "12265": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3837,
          3858
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3F1F"
      },
      "12268": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3837,
          3858
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12269": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3837,
          3858
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12270": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3830,
          3858
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x2FF7"
      },
      "12273": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3830,
          3858
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12274": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3830,
          3858
        ],
        "op": "DUP3",
        "path": "19"
      },
      "12275": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3830,
          3858
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12278": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3830,
          3858
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12279": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3830,
          3858
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12280": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3830,
          3858
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12281": {
        "op": "POP"
      },
      "12282": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3900,
          3917
        ],
        "op": "PUSH2",
        "path": "19",
        "statement": 210,
        "value": "0x3003"
      },
      "12285": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3830,
          3858
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12286": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3900,
          3911
        ],
        "op": "DUP9",
        "path": "19"
      },
      "12287": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3900,
          3917
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12290": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3900,
          3917
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12291": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3900,
          3917
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12292": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3896,
          3917
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x300E"
      },
      "12295": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3896,
          3917
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12296": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3896,
          3897
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x2"
      },
      "12298": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3896,
          3917
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3F1F"
      },
      "12301": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3896,
          3917
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12302": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3896,
          3917
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12303": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3889,
          3917
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3018"
      },
      "12306": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3889,
          3917
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12307": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3889,
          3917
        ],
        "op": "DUP3",
        "path": "19"
      },
      "12308": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3889,
          3917
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12311": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3889,
          3917
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12312": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3889,
          3917
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12313": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3889,
          3917
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12314": {
        "op": "POP"
      },
      "12315": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3959,
          3976
        ],
        "op": "PUSH2",
        "path": "19",
        "statement": 211,
        "value": "0x3024"
      },
      "12318": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3889,
          3917
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12319": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3959,
          3970
        ],
        "op": "DUP9",
        "path": "19"
      },
      "12320": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3959,
          3976
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12323": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3959,
          3976
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12324": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3959,
          3976
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12325": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3955,
          3976
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x302F"
      },
      "12328": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3955,
          3976
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12329": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3955,
          3956
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x2"
      },
      "12331": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3955,
          3976
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3F1F"
      },
      "12334": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3955,
          3976
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12335": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3955,
          3976
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12336": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3948,
          3976
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3039"
      },
      "12339": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3948,
          3976
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12340": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3948,
          3976
        ],
        "op": "DUP3",
        "path": "19"
      },
      "12341": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3948,
          3976
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12344": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          3948,
          3976
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12345": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3948,
          3976
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12346": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3948,
          3976
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12347": {
        "op": "POP"
      },
      "12348": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4019,
          4036
        ],
        "op": "PUSH2",
        "path": "19",
        "statement": 212,
        "value": "0x3045"
      },
      "12351": {
        "fn": "FullMath.mulDiv",
        "offset": [
          3948,
          3976
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12352": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4019,
          4030
        ],
        "op": "DUP9",
        "path": "19"
      },
      "12353": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4019,
          4036
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12356": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          4019,
          4036
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12357": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4019,
          4036
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12358": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4015,
          4036
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3050"
      },
      "12361": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4015,
          4036
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12362": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4015,
          4016
        ],
        "op": "PUSH1",
        "path": "19",
        "value": "0x2"
      },
      "12364": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4015,
          4036
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3F1F"
      },
      "12367": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          4015,
          4036
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12368": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4015,
          4036
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12369": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4008,
          4036
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x305A"
      },
      "12372": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4008,
          4036
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12373": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4008,
          4036
        ],
        "op": "DUP3",
        "path": "19"
      },
      "12374": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4008,
          4036
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12377": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          4008,
          4036
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12378": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4008,
          4036
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12379": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4008,
          4036
        ],
        "op": "SWAP1",
        "path": "19"
      },
      "12380": {
        "op": "POP"
      },
      "12381": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4483,
          4494
        ],
        "op": "PUSH2",
        "path": "19",
        "statement": 213,
        "value": "0x3066"
      },
      "12384": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4008,
          4036
        ],
        "op": "DUP2",
        "path": "19"
      },
      "12385": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4483,
          4488
        ],
        "op": "DUP7",
        "path": "19"
      },
      "12386": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4483,
          4494
        ],
        "op": "PUSH2",
        "path": "19",
        "value": "0x3ED8"
      },
      "12389": {
        "fn": "FullMath.mulDiv",
        "jump": "i",
        "offset": [
          4483,
          4494
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12390": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4483,
          4494
        ],
        "op": "JUMPDEST",
        "path": "19"
      },
      "12391": {
        "fn": "FullMath.mulDiv",
        "offset": [
          4474,
          4494
        ],
        "op": "SWAP10",
        "path": "19"
      },
      "12392": {
        "fn": "FullMath.mulDiv",
        "offset": [
          742,
          4524
        ],
        "op": "SWAP9",
        "path": "19"
      },
      "12393": {
        "op": "POP"
      },
      "12394": {
        "op": "POP"
      },
      "12395": {
        "op": "POP"
      },
      "12396": {
        "op": "POP"
      },
      "12397": {
        "op": "POP"
      },
      "12398": {
        "op": "POP"
      },
      "12399": {
        "op": "POP"
      },
      "12400": {
        "op": "POP"
      },
      "12401": {
        "op": "POP"
      },
      "12402": {
        "fn": "FullMath.mulDiv",
        "jump": "o",
        "offset": [
          742,
          4524
        ],
        "op": "JUMP",
        "path": "19"
      },
      "12403": {
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          507,
          617
        ],
        "op": "JUMPDEST",
        "path": "21"
      },
      "12404": {
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          608,
          609
        ],
        "op": "DUP1",
        "path": "21",
        "statement": 214
      },
      "12405": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "12407": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "12409": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "12411": {
        "op": "SHL"
      },
      "12412": {
        "op": "SUB"
      },
      "12413": {
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          588,
          609
        ],
        "op": "DUP2",
        "path": "21"
      },
      "12414": {
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          588,
          609
        ],
        "op": "AND",
        "path": "21"
      },
      "12415": {
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          588,
          609
        ],
        "op": "DUP2",
        "path": "21"
      },
      "12416": {
        "branch": 295,
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          588,
          609
        ],
        "op": "EQ",
        "path": "21"
      },
      "12417": {
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          580,
          610
        ],
        "op": "PUSH2",
        "path": "21",
        "value": "0xB86"
      },
      "12420": {
        "branch": 295,
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          580,
          610
        ],
        "op": "JUMPI",
        "path": "21"
      },
      "12421": {
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          580,
          610
        ],
        "op": "PUSH1",
        "path": "21",
        "value": "0x0"
      },
      "12423": {
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          580,
          610
        ],
        "op": "DUP1",
        "path": "21"
      },
      "12424": {
        "fn": "LiquidityAmounts.toUint128",
        "offset": [
          580,
          610
        ],
        "op": "REVERT",
        "path": "21"
      },
      "12425": {
        "fn": "Address.isContract",
        "offset": [
          1175,
          1495
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "12426": {
        "fn": "Address.isContract",
        "offset": [
          1235,
          1239
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x0"
      },
      "12428": {
        "fn": "Address.isContract",
        "offset": [
          1487,
          1488
        ],
        "op": "DUP1",
        "path": "5",
        "statement": 215
      },
      "12429": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1472
        ],
        "op": "DUP3",
        "path": "5"
      },
      "12430": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "12432": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "12434": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "12436": {
        "op": "SHL"
      },
      "12437": {
        "op": "SUB"
      },
      "12438": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "AND",
        "path": "5"
      },
      "12439": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "DUP1",
        "path": "5"
      },
      "12440": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "EXTCODESIZE",
        "path": "5"
      },
      "12441": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "DUP1",
        "path": "5"
      },
      "12442": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x20"
      },
      "12444": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "ADD",
        "path": "5"
      },
      "12445": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x40"
      },
      "12447": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "MLOAD",
        "path": "5"
      },
      "12448": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "SWAP1",
        "path": "5"
      },
      "12449": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "DUP2",
        "path": "5"
      },
      "12450": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "ADD",
        "path": "5"
      },
      "12451": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x40"
      },
      "12453": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "MSTORE",
        "path": "5"
      },
      "12454": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "DUP2",
        "path": "5"
      },
      "12455": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "DUP2",
        "path": "5"
      },
      "12456": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "MSTORE",
        "path": "5"
      },
      "12457": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x0"
      },
      "12459": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "SWAP1",
        "path": "5"
      },
      "12460": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "DUP1",
        "path": "5"
      },
      "12461": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x20"
      },
      "12463": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "ADD",
        "path": "5"
      },
      "12464": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "SWAP1",
        "path": "5"
      },
      "12465": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "SWAP4",
        "path": "5"
      },
      "12466": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1477
        ],
        "op": "EXTCODECOPY",
        "path": "5"
      },
      "12467": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1484
        ],
        "op": "MLOAD",
        "path": "5"
      },
      "12468": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1488
        ],
        "op": "GT",
        "path": "5"
      },
      "12469": {
        "fn": "Address.isContract",
        "offset": [
          1465,
          1488
        ],
        "op": "SWAP3",
        "path": "5"
      },
      "12470": {
        "fn": "Address.isContract",
        "offset": [
          1175,
          1495
        ],
        "op": "SWAP2",
        "path": "5"
      },
      "12471": {
        "op": "POP"
      },
      "12472": {
        "op": "POP"
      },
      "12473": {
        "fn": "Address.isContract",
        "jump": "o",
        "offset": [
          1175,
          1495
        ],
        "op": "JUMP",
        "path": "5"
      },
      "12474": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7561,
          8253
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "12475": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7707,
          7719
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x60"
      },
      "12477": {
        "branch": 268,
        "fn": "Address.verifyCallResult",
        "offset": [
          7735,
          7742
        ],
        "op": "DUP4",
        "path": "5"
      },
      "12478": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7731,
          8247
        ],
        "op": "ISZERO",
        "path": "5"
      },
      "12479": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7731,
          8247
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x30C9"
      },
      "12482": {
        "branch": 268,
        "fn": "Address.verifyCallResult",
        "offset": [
          7731,
          8247
        ],
        "op": "JUMPI",
        "path": "5"
      },
      "12483": {
        "op": "POP"
      },
      "12484": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7765,
          7775
        ],
        "op": "DUP2",
        "path": "5",
        "statement": 216
      },
      "12485": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7758,
          7775
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x76C"
      },
      "12488": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7758,
          7775
        ],
        "op": "JUMP",
        "path": "5"
      },
      "12489": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7731,
          8247
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "12490": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7876,
          7893
        ],
        "op": "DUP3",
        "path": "5"
      },
      "12491": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7876,
          7893
        ],
        "op": "MLOAD",
        "path": "5"
      },
      "12492": {
        "branch": 269,
        "fn": "Address.verifyCallResult",
        "offset": [
          7876,
          7897
        ],
        "op": "ISZERO",
        "path": "5"
      },
      "12493": {
        "fn": "Address.verifyCallResult",
        "offset": [
          7872,
          8237
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x30D9"
      },
      "12496": {
        "branch": 269,
        "fn": "Address.verifyCallResult",
        "offset": [
          7872,
          8237
        ],
        "op": "JUMPI",
        "path": "5"
      },
      "12497": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8070,
          8080
        ],
        "op": "DUP3",
        "path": "5"
      },
      "12498": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8064,
          8081
        ],
        "op": "MLOAD",
        "path": "5"
      },
      "12499": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8130,
          8145
        ],
        "op": "DUP1",
        "path": "5"
      },
      "12500": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8117,
          8127
        ],
        "op": "DUP5",
        "path": "5"
      },
      "12501": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8113,
          8115
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x20"
      },
      "12503": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8109,
          8128
        ],
        "op": "ADD",
        "path": "5"
      },
      "12504": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8102,
          8146
        ],
        "op": "REVERT",
        "path": "5"
      },
      "12505": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8019,
          8164
        ],
        "op": "JUMPDEST",
        "path": "5"
      },
      "12506": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8209,
          8221
        ],
        "op": "DUP2",
        "path": "5",
        "statement": 217
      },
      "12507": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8202,
          8222
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x40"
      },
      "12509": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8202,
          8222
        ],
        "op": "MLOAD",
        "path": "5"
      },
      "12510": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "12514": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "12516": {
        "op": "SHL"
      },
      "12517": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8202,
          8222
        ],
        "op": "DUP2",
        "path": "5"
      },
      "12518": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8202,
          8222
        ],
        "op": "MSTORE",
        "path": "5"
      },
      "12519": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8202,
          8222
        ],
        "op": "PUSH1",
        "path": "5",
        "value": "0x4"
      },
      "12521": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8202,
          8222
        ],
        "op": "ADD",
        "path": "5"
      },
      "12522": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8202,
          8222
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x542"
      },
      "12525": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8202,
          8222
        ],
        "op": "SWAP2",
        "path": "5"
      },
      "12526": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8202,
          8222
        ],
        "op": "SWAP1",
        "path": "5"
      },
      "12527": {
        "fn": "Address.verifyCallResult",
        "offset": [
          8202,
          8222
        ],
        "op": "PUSH2",
        "path": "5",
        "value": "0x37B3"
      },
      "12530": {
        "fn": "Address.verifyCallResult",
        "jump": "i",
        "offset": [
          8202,
          8222
        ],
        "op": "JUMP",
        "path": "5"
      },
      "12531": {
        "op": "JUMPDEST"
      },
      "12532": {
        "op": "DUP1"
      },
      "12533": {
        "op": "MLOAD"
      },
      "12534": {
        "op": "DUP1"
      },
      "12535": {
        "op": "ISZERO"
      },
      "12536": {
        "op": "ISZERO"
      },
      "12537": {
        "op": "DUP2"
      },
      "12538": {
        "op": "EQ"
      },
      "12539": {
        "op": "PUSH2",
        "value": "0xB86"
      },
      "12542": {
        "op": "JUMPI"
      },
      "12543": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12545": {
        "op": "DUP1"
      },
      "12546": {
        "op": "REVERT"
      },
      "12547": {
        "op": "JUMPDEST"
      },
      "12548": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12550": {
        "op": "DUP1"
      },
      "12551": {
        "op": "DUP4"
      },
      "12552": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "12554": {
        "op": "DUP5"
      },
      "12555": {
        "op": "ADD"
      },
      "12556": {
        "op": "SLT"
      },
      "12557": {
        "op": "PUSH2",
        "value": "0x3114"
      },
      "12560": {
        "op": "JUMPI"
      },
      "12561": {
        "op": "DUP2"
      },
      "12562": {
        "op": "DUP3"
      },
      "12563": {
        "op": "REVERT"
      },
      "12564": {
        "op": "JUMPDEST"
      },
      "12565": {
        "op": "POP"
      },
      "12566": {
        "op": "DUP2"
      },
      "12567": {
        "op": "CALLDATALOAD"
      },
      "12568": {
        "op": "PUSH8",
        "value": "0xFFFFFFFFFFFFFFFF"
      },
      "12577": {
        "op": "DUP2"
      },
      "12578": {
        "op": "GT"
      },
      "12579": {
        "op": "ISZERO"
      },
      "12580": {
        "op": "PUSH2",
        "value": "0x312B"
      },
      "12583": {
        "op": "JUMPI"
      },
      "12584": {
        "op": "DUP2"
      },
      "12585": {
        "op": "DUP3"
      },
      "12586": {
        "op": "REVERT"
      },
      "12587": {
        "op": "JUMPDEST"
      },
      "12588": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "12590": {
        "op": "DUP4"
      },
      "12591": {
        "op": "ADD"
      },
      "12592": {
        "op": "SWAP2"
      },
      "12593": {
        "op": "POP"
      },
      "12594": {
        "op": "DUP4"
      },
      "12595": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "12597": {
        "op": "DUP3"
      },
      "12598": {
        "op": "DUP6"
      },
      "12599": {
        "op": "ADD"
      },
      "12600": {
        "op": "ADD"
      },
      "12601": {
        "op": "GT"
      },
      "12602": {
        "op": "ISZERO"
      },
      "12603": {
        "op": "PUSH2",
        "value": "0x3143"
      },
      "12606": {
        "op": "JUMPI"
      },
      "12607": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12609": {
        "op": "DUP1"
      },
      "12610": {
        "op": "REVERT"
      },
      "12611": {
        "op": "JUMPDEST"
      },
      "12612": {
        "op": "SWAP3"
      },
      "12613": {
        "op": "POP"
      },
      "12614": {
        "op": "SWAP3"
      },
      "12615": {
        "op": "SWAP1"
      },
      "12616": {
        "op": "POP"
      },
      "12617": {
        "jump": "o",
        "op": "JUMP"
      },
      "12618": {
        "op": "JUMPDEST"
      },
      "12619": {
        "op": "DUP1"
      },
      "12620": {
        "op": "MLOAD"
      },
      "12621": {
        "op": "PUSH2",
        "value": "0xFFFF"
      },
      "12624": {
        "op": "DUP2"
      },
      "12625": {
        "op": "AND"
      },
      "12626": {
        "op": "DUP2"
      },
      "12627": {
        "op": "EQ"
      },
      "12628": {
        "op": "PUSH2",
        "value": "0xB86"
      },
      "12631": {
        "op": "JUMPI"
      },
      "12632": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12634": {
        "op": "DUP1"
      },
      "12635": {
        "op": "REVERT"
      },
      "12636": {
        "op": "JUMPDEST"
      },
      "12637": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12639": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "12641": {
        "op": "DUP3"
      },
      "12642": {
        "op": "DUP5"
      },
      "12643": {
        "op": "SUB"
      },
      "12644": {
        "op": "SLT"
      },
      "12645": {
        "op": "ISZERO"
      },
      "12646": {
        "op": "PUSH2",
        "value": "0x316D"
      },
      "12649": {
        "op": "JUMPI"
      },
      "12650": {
        "op": "DUP1"
      },
      "12651": {
        "op": "DUP2"
      },
      "12652": {
        "op": "REVERT"
      },
      "12653": {
        "op": "JUMPDEST"
      },
      "12654": {
        "op": "DUP2"
      },
      "12655": {
        "op": "CALLDATALOAD"
      },
      "12656": {
        "op": "PUSH2",
        "value": "0x76C"
      },
      "12659": {
        "op": "DUP2"
      },
      "12660": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "12663": {
        "jump": "i",
        "op": "JUMP"
      },
      "12664": {
        "op": "JUMPDEST"
      },
      "12665": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12667": {
        "op": "DUP1"
      },
      "12668": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "12670": {
        "op": "DUP4"
      },
      "12671": {
        "op": "DUP6"
      },
      "12672": {
        "op": "SUB"
      },
      "12673": {
        "op": "SLT"
      },
      "12674": {
        "op": "ISZERO"
      },
      "12675": {
        "op": "PUSH2",
        "value": "0x318A"
      },
      "12678": {
        "op": "JUMPI"
      },
      "12679": {
        "op": "DUP1"
      },
      "12680": {
        "op": "DUP2"
      },
      "12681": {
        "op": "REVERT"
      },
      "12682": {
        "op": "JUMPDEST"
      },
      "12683": {
        "op": "DUP3"
      },
      "12684": {
        "op": "CALLDATALOAD"
      },
      "12685": {
        "op": "PUSH2",
        "value": "0x3195"
      },
      "12688": {
        "op": "DUP2"
      },
      "12689": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "12692": {
        "jump": "i",
        "op": "JUMP"
      },
      "12693": {
        "op": "JUMPDEST"
      },
      "12694": {
        "op": "SWAP2"
      },
      "12695": {
        "op": "POP"
      },
      "12696": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "12698": {
        "op": "DUP4"
      },
      "12699": {
        "op": "ADD"
      },
      "12700": {
        "op": "CALLDATALOAD"
      },
      "12701": {
        "op": "PUSH2",
        "value": "0x31A5"
      },
      "12704": {
        "op": "DUP2"
      },
      "12705": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "12708": {
        "jump": "i",
        "op": "JUMP"
      },
      "12709": {
        "op": "JUMPDEST"
      },
      "12710": {
        "op": "DUP1"
      },
      "12711": {
        "op": "SWAP2"
      },
      "12712": {
        "op": "POP"
      },
      "12713": {
        "op": "POP"
      },
      "12714": {
        "op": "SWAP3"
      },
      "12715": {
        "op": "POP"
      },
      "12716": {
        "op": "SWAP3"
      },
      "12717": {
        "op": "SWAP1"
      },
      "12718": {
        "op": "POP"
      },
      "12719": {
        "jump": "o",
        "op": "JUMP"
      },
      "12720": {
        "op": "JUMPDEST"
      },
      "12721": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12723": {
        "op": "DUP1"
      },
      "12724": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12726": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "12728": {
        "op": "DUP5"
      },
      "12729": {
        "op": "DUP7"
      },
      "12730": {
        "op": "SUB"
      },
      "12731": {
        "op": "SLT"
      },
      "12732": {
        "op": "ISZERO"
      },
      "12733": {
        "op": "PUSH2",
        "value": "0x31C4"
      },
      "12736": {
        "op": "JUMPI"
      },
      "12737": {
        "op": "DUP1"
      },
      "12738": {
        "op": "DUP2"
      },
      "12739": {
        "op": "REVERT"
      },
      "12740": {
        "op": "JUMPDEST"
      },
      "12741": {
        "op": "DUP4"
      },
      "12742": {
        "op": "CALLDATALOAD"
      },
      "12743": {
        "op": "PUSH2",
        "value": "0x31CF"
      },
      "12746": {
        "op": "DUP2"
      },
      "12747": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "12750": {
        "jump": "i",
        "op": "JUMP"
      },
      "12751": {
        "op": "JUMPDEST"
      },
      "12752": {
        "op": "SWAP3"
      },
      "12753": {
        "op": "POP"
      },
      "12754": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "12756": {
        "op": "DUP5"
      },
      "12757": {
        "op": "ADD"
      },
      "12758": {
        "op": "CALLDATALOAD"
      },
      "12759": {
        "op": "PUSH2",
        "value": "0x31DF"
      },
      "12762": {
        "op": "DUP2"
      },
      "12763": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "12766": {
        "jump": "i",
        "op": "JUMP"
      },
      "12767": {
        "op": "JUMPDEST"
      },
      "12768": {
        "op": "SWAP3"
      },
      "12769": {
        "op": "SWAP6"
      },
      "12770": {
        "op": "SWAP3"
      },
      "12771": {
        "op": "SWAP5"
      },
      "12772": {
        "op": "POP"
      },
      "12773": {
        "op": "POP"
      },
      "12774": {
        "op": "POP"
      },
      "12775": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "12777": {
        "op": "SWAP2"
      },
      "12778": {
        "op": "SWAP1"
      },
      "12779": {
        "op": "SWAP2"
      },
      "12780": {
        "op": "ADD"
      },
      "12781": {
        "op": "CALLDATALOAD"
      },
      "12782": {
        "op": "SWAP1"
      },
      "12783": {
        "jump": "o",
        "op": "JUMP"
      },
      "12784": {
        "op": "JUMPDEST"
      },
      "12785": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12787": {
        "op": "DUP1"
      },
      "12788": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "12790": {
        "op": "DUP4"
      },
      "12791": {
        "op": "DUP6"
      },
      "12792": {
        "op": "SUB"
      },
      "12793": {
        "op": "SLT"
      },
      "12794": {
        "op": "ISZERO"
      },
      "12795": {
        "op": "PUSH2",
        "value": "0x3202"
      },
      "12798": {
        "op": "JUMPI"
      },
      "12799": {
        "op": "DUP2"
      },
      "12800": {
        "op": "DUP3"
      },
      "12801": {
        "op": "REVERT"
      },
      "12802": {
        "op": "JUMPDEST"
      },
      "12803": {
        "op": "DUP3"
      },
      "12804": {
        "op": "CALLDATALOAD"
      },
      "12805": {
        "op": "PUSH2",
        "value": "0x320D"
      },
      "12808": {
        "op": "DUP2"
      },
      "12809": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "12812": {
        "jump": "i",
        "op": "JUMP"
      },
      "12813": {
        "op": "JUMPDEST"
      },
      "12814": {
        "op": "SWAP5"
      },
      "12815": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "12817": {
        "op": "SWAP4"
      },
      "12818": {
        "op": "SWAP1"
      },
      "12819": {
        "op": "SWAP4"
      },
      "12820": {
        "op": "ADD"
      },
      "12821": {
        "op": "CALLDATALOAD"
      },
      "12822": {
        "op": "SWAP4"
      },
      "12823": {
        "op": "POP"
      },
      "12824": {
        "op": "POP"
      },
      "12825": {
        "op": "POP"
      },
      "12826": {
        "jump": "o",
        "op": "JUMP"
      },
      "12827": {
        "op": "JUMPDEST"
      },
      "12828": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12830": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "12832": {
        "op": "DUP3"
      },
      "12833": {
        "op": "DUP5"
      },
      "12834": {
        "op": "SUB"
      },
      "12835": {
        "op": "SLT"
      },
      "12836": {
        "op": "ISZERO"
      },
      "12837": {
        "op": "PUSH2",
        "value": "0x322C"
      },
      "12840": {
        "op": "JUMPI"
      },
      "12841": {
        "op": "DUP1"
      },
      "12842": {
        "op": "DUP2"
      },
      "12843": {
        "op": "REVERT"
      },
      "12844": {
        "op": "JUMPDEST"
      },
      "12845": {
        "op": "PUSH2",
        "value": "0x76C"
      },
      "12848": {
        "op": "DUP3"
      },
      "12849": {
        "op": "PUSH2",
        "value": "0x30F3"
      },
      "12852": {
        "jump": "i",
        "op": "JUMP"
      },
      "12853": {
        "op": "JUMPDEST"
      },
      "12854": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12856": {
        "op": "DUP1"
      },
      "12857": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12859": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "12861": {
        "op": "DUP5"
      },
      "12862": {
        "op": "DUP7"
      },
      "12863": {
        "op": "SUB"
      },
      "12864": {
        "op": "SLT"
      },
      "12865": {
        "op": "ISZERO"
      },
      "12866": {
        "op": "PUSH2",
        "value": "0x3249"
      },
      "12869": {
        "op": "JUMPI"
      },
      "12870": {
        "op": "DUP3"
      },
      "12871": {
        "op": "DUP4"
      },
      "12872": {
        "op": "REVERT"
      },
      "12873": {
        "op": "JUMPDEST"
      },
      "12874": {
        "op": "DUP4"
      },
      "12875": {
        "op": "CALLDATALOAD"
      },
      "12876": {
        "op": "PUSH2",
        "value": "0x3254"
      },
      "12879": {
        "op": "DUP2"
      },
      "12880": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "12883": {
        "jump": "i",
        "op": "JUMP"
      },
      "12884": {
        "op": "JUMPDEST"
      },
      "12885": {
        "op": "SWAP3"
      },
      "12886": {
        "op": "POP"
      },
      "12887": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "12889": {
        "op": "DUP5"
      },
      "12890": {
        "op": "ADD"
      },
      "12891": {
        "op": "CALLDATALOAD"
      },
      "12892": {
        "op": "SWAP2"
      },
      "12893": {
        "op": "POP"
      },
      "12894": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "12896": {
        "op": "DUP5"
      },
      "12897": {
        "op": "ADD"
      },
      "12898": {
        "op": "CALLDATALOAD"
      },
      "12899": {
        "op": "PUSH2",
        "value": "0x326B"
      },
      "12902": {
        "op": "DUP2"
      },
      "12903": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "12906": {
        "jump": "i",
        "op": "JUMP"
      },
      "12907": {
        "op": "JUMPDEST"
      },
      "12908": {
        "op": "DUP1"
      },
      "12909": {
        "op": "SWAP2"
      },
      "12910": {
        "op": "POP"
      },
      "12911": {
        "op": "POP"
      },
      "12912": {
        "op": "SWAP3"
      },
      "12913": {
        "op": "POP"
      },
      "12914": {
        "op": "SWAP3"
      },
      "12915": {
        "op": "POP"
      },
      "12916": {
        "op": "SWAP3"
      },
      "12917": {
        "jump": "o",
        "op": "JUMP"
      },
      "12918": {
        "op": "JUMPDEST"
      },
      "12919": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12921": {
        "op": "DUP1"
      },
      "12922": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "12924": {
        "op": "DUP4"
      },
      "12925": {
        "op": "DUP6"
      },
      "12926": {
        "op": "SUB"
      },
      "12927": {
        "op": "SLT"
      },
      "12928": {
        "op": "ISZERO"
      },
      "12929": {
        "op": "PUSH2",
        "value": "0x3288"
      },
      "12932": {
        "op": "JUMPI"
      },
      "12933": {
        "op": "DUP2"
      },
      "12934": {
        "op": "DUP3"
      },
      "12935": {
        "op": "REVERT"
      },
      "12936": {
        "op": "JUMPDEST"
      },
      "12937": {
        "op": "DUP3"
      },
      "12938": {
        "op": "CALLDATALOAD"
      },
      "12939": {
        "op": "PUSH2",
        "value": "0x3293"
      },
      "12942": {
        "op": "DUP2"
      },
      "12943": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "12946": {
        "jump": "i",
        "op": "JUMP"
      },
      "12947": {
        "op": "JUMPDEST"
      },
      "12948": {
        "op": "SWAP2"
      },
      "12949": {
        "op": "POP"
      },
      "12950": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "12952": {
        "op": "DUP4"
      },
      "12953": {
        "op": "ADD"
      },
      "12954": {
        "op": "CALLDATALOAD"
      },
      "12955": {
        "op": "PUSH2",
        "value": "0x31A5"
      },
      "12958": {
        "op": "DUP2"
      },
      "12959": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "12962": {
        "jump": "i",
        "op": "JUMP"
      },
      "12963": {
        "op": "JUMPDEST"
      },
      "12964": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12966": {
        "op": "DUP1"
      },
      "12967": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "12969": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "12971": {
        "op": "DUP5"
      },
      "12972": {
        "op": "DUP7"
      },
      "12973": {
        "op": "SUB"
      },
      "12974": {
        "op": "SLT"
      },
      "12975": {
        "op": "ISZERO"
      },
      "12976": {
        "op": "PUSH2",
        "value": "0x32B7"
      },
      "12979": {
        "op": "JUMPI"
      },
      "12980": {
        "op": "DUP3"
      },
      "12981": {
        "op": "DUP4"
      },
      "12982": {
        "op": "REVERT"
      },
      "12983": {
        "op": "JUMPDEST"
      },
      "12984": {
        "op": "DUP4"
      },
      "12985": {
        "op": "CALLDATALOAD"
      },
      "12986": {
        "op": "PUSH2",
        "value": "0x32C2"
      },
      "12989": {
        "op": "DUP2"
      },
      "12990": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "12993": {
        "jump": "i",
        "op": "JUMP"
      },
      "12994": {
        "op": "JUMPDEST"
      },
      "12995": {
        "op": "SWAP3"
      },
      "12996": {
        "op": "POP"
      },
      "12997": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "12999": {
        "op": "DUP5"
      },
      "13000": {
        "op": "ADD"
      },
      "13001": {
        "op": "CALLDATALOAD"
      },
      "13002": {
        "op": "PUSH2",
        "value": "0x32D2"
      },
      "13005": {
        "op": "DUP2"
      },
      "13006": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "13009": {
        "jump": "i",
        "op": "JUMP"
      },
      "13010": {
        "op": "JUMPDEST"
      },
      "13011": {
        "op": "SWAP2"
      },
      "13012": {
        "op": "POP"
      },
      "13013": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13015": {
        "op": "DUP5"
      },
      "13016": {
        "op": "ADD"
      },
      "13017": {
        "op": "CALLDATALOAD"
      },
      "13018": {
        "op": "PUSH2",
        "value": "0x326B"
      },
      "13021": {
        "op": "DUP2"
      },
      "13022": {
        "op": "PUSH2",
        "value": "0x4061"
      },
      "13025": {
        "jump": "i",
        "op": "JUMP"
      },
      "13026": {
        "op": "JUMPDEST"
      },
      "13027": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13029": {
        "op": "DUP1"
      },
      "13030": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13032": {
        "op": "DUP4"
      },
      "13033": {
        "op": "DUP6"
      },
      "13034": {
        "op": "SUB"
      },
      "13035": {
        "op": "SLT"
      },
      "13036": {
        "op": "ISZERO"
      },
      "13037": {
        "op": "PUSH2",
        "value": "0x32F4"
      },
      "13040": {
        "op": "JUMPI"
      },
      "13041": {
        "op": "DUP2"
      },
      "13042": {
        "op": "DUP3"
      },
      "13043": {
        "op": "REVERT"
      },
      "13044": {
        "op": "JUMPDEST"
      },
      "13045": {
        "op": "POP"
      },
      "13046": {
        "op": "POP"
      },
      "13047": {
        "op": "DUP1"
      },
      "13048": {
        "op": "MLOAD"
      },
      "13049": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13051": {
        "op": "SWAP1"
      },
      "13052": {
        "op": "SWAP2"
      },
      "13053": {
        "op": "ADD"
      },
      "13054": {
        "op": "MLOAD"
      },
      "13055": {
        "op": "SWAP1"
      },
      "13056": {
        "op": "SWAP3"
      },
      "13057": {
        "op": "SWAP1"
      },
      "13058": {
        "op": "SWAP2"
      },
      "13059": {
        "op": "POP"
      },
      "13060": {
        "jump": "o",
        "op": "JUMP"
      },
      "13061": {
        "op": "JUMPDEST"
      },
      "13062": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13064": {
        "op": "DUP1"
      },
      "13065": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13067": {
        "op": "DUP1"
      },
      "13068": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "13070": {
        "op": "DUP6"
      },
      "13071": {
        "op": "DUP8"
      },
      "13072": {
        "op": "SUB"
      },
      "13073": {
        "op": "SLT"
      },
      "13074": {
        "op": "ISZERO"
      },
      "13075": {
        "op": "PUSH2",
        "value": "0x331A"
      },
      "13078": {
        "op": "JUMPI"
      },
      "13079": {
        "op": "DUP2"
      },
      "13080": {
        "op": "DUP3"
      },
      "13081": {
        "op": "REVERT"
      },
      "13082": {
        "op": "JUMPDEST"
      },
      "13083": {
        "op": "DUP5"
      },
      "13084": {
        "op": "CALLDATALOAD"
      },
      "13085": {
        "op": "SWAP4"
      },
      "13086": {
        "op": "POP"
      },
      "13087": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13089": {
        "op": "DUP6"
      },
      "13090": {
        "op": "ADD"
      },
      "13091": {
        "op": "CALLDATALOAD"
      },
      "13092": {
        "op": "SWAP3"
      },
      "13093": {
        "op": "POP"
      },
      "13094": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13096": {
        "op": "DUP6"
      },
      "13097": {
        "op": "ADD"
      },
      "13098": {
        "op": "CALLDATALOAD"
      },
      "13099": {
        "op": "PUSH8",
        "value": "0xFFFFFFFFFFFFFFFF"
      },
      "13108": {
        "op": "DUP2"
      },
      "13109": {
        "op": "GT"
      },
      "13110": {
        "op": "ISZERO"
      },
      "13111": {
        "op": "PUSH2",
        "value": "0x333E"
      },
      "13114": {
        "op": "JUMPI"
      },
      "13115": {
        "op": "DUP3"
      },
      "13116": {
        "op": "DUP4"
      },
      "13117": {
        "op": "REVERT"
      },
      "13118": {
        "op": "JUMPDEST"
      },
      "13119": {
        "op": "PUSH2",
        "value": "0x334A"
      },
      "13122": {
        "op": "DUP8"
      },
      "13123": {
        "op": "DUP3"
      },
      "13124": {
        "op": "DUP9"
      },
      "13125": {
        "op": "ADD"
      },
      "13126": {
        "op": "PUSH2",
        "value": "0x3103"
      },
      "13129": {
        "jump": "i",
        "op": "JUMP"
      },
      "13130": {
        "op": "JUMPDEST"
      },
      "13131": {
        "op": "SWAP6"
      },
      "13132": {
        "op": "SWAP9"
      },
      "13133": {
        "op": "SWAP5"
      },
      "13134": {
        "op": "SWAP8"
      },
      "13135": {
        "op": "POP"
      },
      "13136": {
        "op": "SWAP6"
      },
      "13137": {
        "op": "POP"
      },
      "13138": {
        "op": "POP"
      },
      "13139": {
        "op": "POP"
      },
      "13140": {
        "op": "POP"
      },
      "13141": {
        "jump": "o",
        "op": "JUMP"
      },
      "13142": {
        "op": "JUMPDEST"
      },
      "13143": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13145": {
        "op": "DUP1"
      },
      "13146": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13148": {
        "op": "DUP1"
      },
      "13149": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13151": {
        "op": "DUP1"
      },
      "13152": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13154": {
        "op": "DUP1"
      },
      "13155": {
        "op": "PUSH2",
        "value": "0x100"
      },
      "13158": {
        "op": "DUP10"
      },
      "13159": {
        "op": "DUP12"
      },
      "13160": {
        "op": "SUB"
      },
      "13161": {
        "op": "SLT"
      },
      "13162": {
        "op": "ISZERO"
      },
      "13163": {
        "op": "PUSH2",
        "value": "0x3372"
      },
      "13166": {
        "op": "JUMPI"
      },
      "13167": {
        "op": "DUP6"
      },
      "13168": {
        "op": "DUP7"
      },
      "13169": {
        "op": "REVERT"
      },
      "13170": {
        "op": "JUMPDEST"
      },
      "13171": {
        "op": "DUP9"
      },
      "13172": {
        "op": "CALLDATALOAD"
      },
      "13173": {
        "op": "SWAP8"
      },
      "13174": {
        "op": "POP"
      },
      "13175": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13177": {
        "op": "DUP10"
      },
      "13178": {
        "op": "ADD"
      },
      "13179": {
        "op": "CALLDATALOAD"
      },
      "13180": {
        "op": "PUSH2",
        "value": "0x3384"
      },
      "13183": {
        "op": "DUP2"
      },
      "13184": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "13187": {
        "jump": "i",
        "op": "JUMP"
      },
      "13188": {
        "op": "JUMPDEST"
      },
      "13189": {
        "op": "SWAP7"
      },
      "13190": {
        "op": "POP"
      },
      "13191": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13193": {
        "op": "DUP10"
      },
      "13194": {
        "op": "ADD"
      },
      "13195": {
        "op": "CALLDATALOAD"
      },
      "13196": {
        "op": "PUSH2",
        "value": "0x3394"
      },
      "13199": {
        "op": "DUP2"
      },
      "13200": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "13203": {
        "jump": "i",
        "op": "JUMP"
      },
      "13204": {
        "op": "JUMPDEST"
      },
      "13205": {
        "op": "SWAP6"
      },
      "13206": {
        "op": "POP"
      },
      "13207": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "13209": {
        "op": "DUP10"
      },
      "13210": {
        "op": "ADD"
      },
      "13211": {
        "op": "CALLDATALOAD"
      },
      "13212": {
        "op": "PUSH2",
        "value": "0x33A4"
      },
      "13215": {
        "op": "DUP2"
      },
      "13216": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "13219": {
        "jump": "i",
        "op": "JUMP"
      },
      "13220": {
        "op": "JUMPDEST"
      },
      "13221": {
        "op": "SWAP5"
      },
      "13222": {
        "op": "POP"
      },
      "13223": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "13225": {
        "op": "DUP10"
      },
      "13226": {
        "op": "ADD"
      },
      "13227": {
        "op": "CALLDATALOAD"
      },
      "13228": {
        "op": "PUSH2",
        "value": "0x33B4"
      },
      "13231": {
        "op": "DUP2"
      },
      "13232": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "13235": {
        "jump": "i",
        "op": "JUMP"
      },
      "13236": {
        "op": "JUMPDEST"
      },
      "13237": {
        "op": "SWAP4"
      },
      "13238": {
        "op": "POP"
      },
      "13239": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "13241": {
        "op": "DUP10"
      },
      "13242": {
        "op": "ADD"
      },
      "13243": {
        "op": "CALLDATALOAD"
      },
      "13244": {
        "op": "PUSH2",
        "value": "0x33C4"
      },
      "13247": {
        "op": "DUP2"
      },
      "13248": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "13251": {
        "jump": "i",
        "op": "JUMP"
      },
      "13252": {
        "op": "JUMPDEST"
      },
      "13253": {
        "op": "SWAP3"
      },
      "13254": {
        "op": "POP"
      },
      "13255": {
        "op": "PUSH1",
        "value": "0xC0"
      },
      "13257": {
        "op": "DUP10"
      },
      "13258": {
        "op": "ADD"
      },
      "13259": {
        "op": "CALLDATALOAD"
      },
      "13260": {
        "op": "PUSH2",
        "value": "0x33D4"
      },
      "13263": {
        "op": "DUP2"
      },
      "13264": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "13267": {
        "jump": "i",
        "op": "JUMP"
      },
      "13268": {
        "op": "JUMPDEST"
      },
      "13269": {
        "op": "SWAP2"
      },
      "13270": {
        "op": "POP"
      },
      "13271": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "13273": {
        "op": "DUP10"
      },
      "13274": {
        "op": "ADD"
      },
      "13275": {
        "op": "CALLDATALOAD"
      },
      "13276": {
        "op": "PUSH2",
        "value": "0x33E4"
      },
      "13279": {
        "op": "DUP2"
      },
      "13280": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "13283": {
        "jump": "i",
        "op": "JUMP"
      },
      "13284": {
        "op": "JUMPDEST"
      },
      "13285": {
        "op": "DUP1"
      },
      "13286": {
        "op": "SWAP2"
      },
      "13287": {
        "op": "POP"
      },
      "13288": {
        "op": "POP"
      },
      "13289": {
        "op": "SWAP3"
      },
      "13290": {
        "op": "SWAP6"
      },
      "13291": {
        "op": "SWAP9"
      },
      "13292": {
        "op": "POP"
      },
      "13293": {
        "op": "SWAP3"
      },
      "13294": {
        "op": "SWAP6"
      },
      "13295": {
        "op": "SWAP9"
      },
      "13296": {
        "op": "SWAP1"
      },
      "13297": {
        "op": "SWAP4"
      },
      "13298": {
        "op": "SWAP7"
      },
      "13299": {
        "op": "POP"
      },
      "13300": {
        "jump": "o",
        "op": "JUMP"
      },
      "13301": {
        "op": "JUMPDEST"
      },
      "13302": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13304": {
        "op": "DUP1"
      },
      "13305": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13307": {
        "op": "DUP4"
      },
      "13308": {
        "op": "DUP6"
      },
      "13309": {
        "op": "SUB"
      },
      "13310": {
        "op": "SLT"
      },
      "13311": {
        "op": "ISZERO"
      },
      "13312": {
        "op": "PUSH2",
        "value": "0x3407"
      },
      "13315": {
        "op": "JUMPI"
      },
      "13316": {
        "op": "DUP2"
      },
      "13317": {
        "op": "DUP3"
      },
      "13318": {
        "op": "REVERT"
      },
      "13319": {
        "op": "JUMPDEST"
      },
      "13320": {
        "op": "DUP3"
      },
      "13321": {
        "op": "MLOAD"
      },
      "13322": {
        "op": "PUSH2",
        "value": "0x3412"
      },
      "13325": {
        "op": "DUP2"
      },
      "13326": {
        "op": "PUSH2",
        "value": "0x4061"
      },
      "13329": {
        "jump": "i",
        "op": "JUMP"
      },
      "13330": {
        "op": "JUMPDEST"
      },
      "13331": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13333": {
        "op": "DUP5"
      },
      "13334": {
        "op": "ADD"
      },
      "13335": {
        "op": "MLOAD"
      },
      "13336": {
        "op": "SWAP1"
      },
      "13337": {
        "op": "SWAP3"
      },
      "13338": {
        "op": "POP"
      },
      "13339": {
        "op": "PUSH2",
        "value": "0x31A5"
      },
      "13342": {
        "op": "DUP2"
      },
      "13343": {
        "op": "PUSH2",
        "value": "0x4061"
      },
      "13346": {
        "jump": "i",
        "op": "JUMP"
      },
      "13347": {
        "op": "JUMPDEST"
      },
      "13348": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13350": {
        "op": "DUP1"
      },
      "13351": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13353": {
        "op": "DUP1"
      },
      "13354": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13356": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "13358": {
        "op": "DUP7"
      },
      "13359": {
        "op": "DUP9"
      },
      "13360": {
        "op": "SUB"
      },
      "13361": {
        "op": "SLT"
      },
      "13362": {
        "op": "ISZERO"
      },
      "13363": {
        "op": "PUSH2",
        "value": "0x343A"
      },
      "13366": {
        "op": "JUMPI"
      },
      "13367": {
        "op": "DUP3"
      },
      "13368": {
        "op": "DUP4"
      },
      "13369": {
        "op": "REVERT"
      },
      "13370": {
        "op": "JUMPDEST"
      },
      "13371": {
        "op": "DUP6"
      },
      "13372": {
        "op": "MLOAD"
      },
      "13373": {
        "op": "PUSH2",
        "value": "0x3445"
      },
      "13376": {
        "op": "DUP2"
      },
      "13377": {
        "op": "PUSH2",
        "value": "0x4061"
      },
      "13380": {
        "jump": "i",
        "op": "JUMP"
      },
      "13381": {
        "op": "JUMPDEST"
      },
      "13382": {
        "op": "DUP1"
      },
      "13383": {
        "op": "SWAP6"
      },
      "13384": {
        "op": "POP"
      },
      "13385": {
        "op": "POP"
      },
      "13386": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13388": {
        "op": "DUP7"
      },
      "13389": {
        "op": "ADD"
      },
      "13390": {
        "op": "MLOAD"
      },
      "13391": {
        "op": "SWAP4"
      },
      "13392": {
        "op": "POP"
      },
      "13393": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13395": {
        "op": "DUP7"
      },
      "13396": {
        "op": "ADD"
      },
      "13397": {
        "op": "MLOAD"
      },
      "13398": {
        "op": "SWAP3"
      },
      "13399": {
        "op": "POP"
      },
      "13400": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "13402": {
        "op": "DUP7"
      },
      "13403": {
        "op": "ADD"
      },
      "13404": {
        "op": "MLOAD"
      },
      "13405": {
        "op": "PUSH2",
        "value": "0x3465"
      },
      "13408": {
        "op": "DUP2"
      },
      "13409": {
        "op": "PUSH2",
        "value": "0x4061"
      },
      "13412": {
        "jump": "i",
        "op": "JUMP"
      },
      "13413": {
        "op": "JUMPDEST"
      },
      "13414": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "13416": {
        "op": "DUP8"
      },
      "13417": {
        "op": "ADD"
      },
      "13418": {
        "op": "MLOAD"
      },
      "13419": {
        "op": "SWAP1"
      },
      "13420": {
        "op": "SWAP3"
      },
      "13421": {
        "op": "POP"
      },
      "13422": {
        "op": "PUSH2",
        "value": "0x3476"
      },
      "13425": {
        "op": "DUP2"
      },
      "13426": {
        "op": "PUSH2",
        "value": "0x4061"
      },
      "13429": {
        "jump": "i",
        "op": "JUMP"
      },
      "13430": {
        "op": "JUMPDEST"
      },
      "13431": {
        "op": "DUP1"
      },
      "13432": {
        "op": "SWAP2"
      },
      "13433": {
        "op": "POP"
      },
      "13434": {
        "op": "POP"
      },
      "13435": {
        "op": "SWAP3"
      },
      "13436": {
        "op": "SWAP6"
      },
      "13437": {
        "op": "POP"
      },
      "13438": {
        "op": "SWAP3"
      },
      "13439": {
        "op": "SWAP6"
      },
      "13440": {
        "op": "SWAP1"
      },
      "13441": {
        "op": "SWAP4"
      },
      "13442": {
        "op": "POP"
      },
      "13443": {
        "jump": "o",
        "op": "JUMP"
      },
      "13444": {
        "op": "JUMPDEST"
      },
      "13445": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13447": {
        "op": "DUP1"
      },
      "13448": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13450": {
        "op": "DUP1"
      },
      "13451": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13453": {
        "op": "DUP1"
      },
      "13454": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13456": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "13458": {
        "op": "DUP9"
      },
      "13459": {
        "op": "DUP11"
      },
      "13460": {
        "op": "SUB"
      },
      "13461": {
        "op": "SLT"
      },
      "13462": {
        "op": "ISZERO"
      },
      "13463": {
        "op": "PUSH2",
        "value": "0x349E"
      },
      "13466": {
        "op": "JUMPI"
      },
      "13467": {
        "op": "DUP1"
      },
      "13468": {
        "op": "DUP2"
      },
      "13469": {
        "op": "REVERT"
      },
      "13470": {
        "op": "JUMPDEST"
      },
      "13471": {
        "op": "DUP8"
      },
      "13472": {
        "op": "MLOAD"
      },
      "13473": {
        "op": "PUSH2",
        "value": "0x34A9"
      },
      "13476": {
        "op": "DUP2"
      },
      "13477": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "13480": {
        "jump": "i",
        "op": "JUMP"
      },
      "13481": {
        "op": "JUMPDEST"
      },
      "13482": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13484": {
        "op": "DUP10"
      },
      "13485": {
        "op": "ADD"
      },
      "13486": {
        "op": "MLOAD"
      },
      "13487": {
        "op": "SWAP1"
      },
      "13488": {
        "op": "SWAP8"
      },
      "13489": {
        "op": "POP"
      },
      "13490": {
        "op": "PUSH2",
        "value": "0x34BA"
      },
      "13493": {
        "op": "DUP2"
      },
      "13494": {
        "op": "PUSH2",
        "value": "0x4052"
      },
      "13497": {
        "jump": "i",
        "op": "JUMP"
      },
      "13498": {
        "op": "JUMPDEST"
      },
      "13499": {
        "op": "SWAP6"
      },
      "13500": {
        "op": "POP"
      },
      "13501": {
        "op": "PUSH2",
        "value": "0x34C8"
      },
      "13504": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13506": {
        "op": "DUP10"
      },
      "13507": {
        "op": "ADD"
      },
      "13508": {
        "op": "PUSH2",
        "value": "0x314A"
      },
      "13511": {
        "jump": "i",
        "op": "JUMP"
      },
      "13512": {
        "op": "JUMPDEST"
      },
      "13513": {
        "op": "SWAP5"
      },
      "13514": {
        "op": "POP"
      },
      "13515": {
        "op": "PUSH2",
        "value": "0x34D6"
      },
      "13518": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "13520": {
        "op": "DUP10"
      },
      "13521": {
        "op": "ADD"
      },
      "13522": {
        "op": "PUSH2",
        "value": "0x314A"
      },
      "13525": {
        "jump": "i",
        "op": "JUMP"
      },
      "13526": {
        "op": "JUMPDEST"
      },
      "13527": {
        "op": "SWAP4"
      },
      "13528": {
        "op": "POP"
      },
      "13529": {
        "op": "PUSH2",
        "value": "0x34E4"
      },
      "13532": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "13534": {
        "op": "DUP10"
      },
      "13535": {
        "op": "ADD"
      },
      "13536": {
        "op": "PUSH2",
        "value": "0x314A"
      },
      "13539": {
        "jump": "i",
        "op": "JUMP"
      },
      "13540": {
        "op": "JUMPDEST"
      },
      "13541": {
        "op": "SWAP3"
      },
      "13542": {
        "op": "POP"
      },
      "13543": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "13545": {
        "op": "DUP9"
      },
      "13546": {
        "op": "ADD"
      },
      "13547": {
        "op": "MLOAD"
      },
      "13548": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "13550": {
        "op": "DUP2"
      },
      "13551": {
        "op": "AND"
      },
      "13552": {
        "op": "DUP2"
      },
      "13553": {
        "op": "EQ"
      },
      "13554": {
        "op": "PUSH2",
        "value": "0x34F9"
      },
      "13557": {
        "op": "JUMPI"
      },
      "13558": {
        "op": "DUP2"
      },
      "13559": {
        "op": "DUP3"
      },
      "13560": {
        "op": "REVERT"
      },
      "13561": {
        "op": "JUMPDEST"
      },
      "13562": {
        "op": "SWAP2"
      },
      "13563": {
        "op": "POP"
      },
      "13564": {
        "op": "PUSH2",
        "value": "0x3507"
      },
      "13567": {
        "op": "PUSH1",
        "value": "0xC0"
      },
      "13569": {
        "op": "DUP10"
      },
      "13570": {
        "op": "ADD"
      },
      "13571": {
        "op": "PUSH2",
        "value": "0x30F3"
      },
      "13574": {
        "jump": "i",
        "op": "JUMP"
      },
      "13575": {
        "op": "JUMPDEST"
      },
      "13576": {
        "op": "SWAP1"
      },
      "13577": {
        "op": "POP"
      },
      "13578": {
        "op": "SWAP3"
      },
      "13579": {
        "op": "SWAP6"
      },
      "13580": {
        "op": "SWAP9"
      },
      "13581": {
        "op": "SWAP2"
      },
      "13582": {
        "op": "SWAP5"
      },
      "13583": {
        "op": "SWAP8"
      },
      "13584": {
        "op": "POP"
      },
      "13585": {
        "op": "SWAP3"
      },
      "13586": {
        "op": "SWAP6"
      },
      "13587": {
        "op": "POP"
      },
      "13588": {
        "jump": "o",
        "op": "JUMP"
      },
      "13589": {
        "op": "JUMPDEST"
      },
      "13590": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13592": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13594": {
        "op": "DUP3"
      },
      "13595": {
        "op": "DUP5"
      },
      "13596": {
        "op": "SUB"
      },
      "13597": {
        "op": "SLT"
      },
      "13598": {
        "op": "ISZERO"
      },
      "13599": {
        "op": "PUSH2",
        "value": "0x3526"
      },
      "13602": {
        "op": "JUMPI"
      },
      "13603": {
        "op": "DUP1"
      },
      "13604": {
        "op": "DUP2"
      },
      "13605": {
        "op": "REVERT"
      },
      "13606": {
        "op": "JUMPDEST"
      },
      "13607": {
        "op": "POP"
      },
      "13608": {
        "op": "CALLDATALOAD"
      },
      "13609": {
        "op": "SWAP2"
      },
      "13610": {
        "op": "SWAP1"
      },
      "13611": {
        "op": "POP"
      },
      "13612": {
        "jump": "o",
        "op": "JUMP"
      },
      "13613": {
        "op": "JUMPDEST"
      },
      "13614": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13616": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13618": {
        "op": "DUP3"
      },
      "13619": {
        "op": "DUP5"
      },
      "13620": {
        "op": "SUB"
      },
      "13621": {
        "op": "SLT"
      },
      "13622": {
        "op": "ISZERO"
      },
      "13623": {
        "op": "PUSH2",
        "value": "0x353E"
      },
      "13626": {
        "op": "JUMPI"
      },
      "13627": {
        "op": "DUP1"
      },
      "13628": {
        "op": "DUP2"
      },
      "13629": {
        "op": "REVERT"
      },
      "13630": {
        "op": "JUMPDEST"
      },
      "13631": {
        "op": "POP"
      },
      "13632": {
        "op": "MLOAD"
      },
      "13633": {
        "op": "SWAP2"
      },
      "13634": {
        "op": "SWAP1"
      },
      "13635": {
        "op": "POP"
      },
      "13636": {
        "jump": "o",
        "op": "JUMP"
      },
      "13637": {
        "op": "JUMPDEST"
      },
      "13638": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13640": {
        "op": "DUP1"
      },
      "13641": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13643": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "13645": {
        "op": "DUP5"
      },
      "13646": {
        "op": "DUP7"
      },
      "13647": {
        "op": "SUB"
      },
      "13648": {
        "op": "SLT"
      },
      "13649": {
        "op": "ISZERO"
      },
      "13650": {
        "op": "PUSH2",
        "value": "0x3559"
      },
      "13653": {
        "op": "JUMPI"
      },
      "13654": {
        "op": "DUP1"
      },
      "13655": {
        "op": "DUP2"
      },
      "13656": {
        "op": "REVERT"
      },
      "13657": {
        "op": "JUMPDEST"
      },
      "13658": {
        "op": "DUP4"
      },
      "13659": {
        "op": "CALLDATALOAD"
      },
      "13660": {
        "op": "SWAP3"
      },
      "13661": {
        "op": "POP"
      },
      "13662": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13664": {
        "op": "DUP5"
      },
      "13665": {
        "op": "ADD"
      },
      "13666": {
        "op": "CALLDATALOAD"
      },
      "13667": {
        "op": "SWAP2"
      },
      "13668": {
        "op": "POP"
      },
      "13669": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13671": {
        "op": "DUP5"
      },
      "13672": {
        "op": "ADD"
      },
      "13673": {
        "op": "CALLDATALOAD"
      },
      "13674": {
        "op": "PUSH2",
        "value": "0x326B"
      },
      "13677": {
        "op": "DUP2"
      },
      "13678": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "13681": {
        "jump": "i",
        "op": "JUMP"
      },
      "13682": {
        "op": "JUMPDEST"
      },
      "13683": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13685": {
        "op": "DUP1"
      },
      "13686": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13688": {
        "op": "DUP1"
      },
      "13689": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "13691": {
        "op": "DUP6"
      },
      "13692": {
        "op": "DUP8"
      },
      "13693": {
        "op": "SUB"
      },
      "13694": {
        "op": "SLT"
      },
      "13695": {
        "op": "ISZERO"
      },
      "13696": {
        "op": "PUSH2",
        "value": "0x3587"
      },
      "13699": {
        "op": "JUMPI"
      },
      "13700": {
        "op": "DUP2"
      },
      "13701": {
        "op": "DUP3"
      },
      "13702": {
        "op": "REVERT"
      },
      "13703": {
        "op": "JUMPDEST"
      },
      "13704": {
        "op": "DUP5"
      },
      "13705": {
        "op": "CALLDATALOAD"
      },
      "13706": {
        "op": "SWAP4"
      },
      "13707": {
        "op": "POP"
      },
      "13708": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13710": {
        "op": "DUP6"
      },
      "13711": {
        "op": "ADD"
      },
      "13712": {
        "op": "CALLDATALOAD"
      },
      "13713": {
        "op": "SWAP3"
      },
      "13714": {
        "op": "POP"
      },
      "13715": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13717": {
        "op": "DUP6"
      },
      "13718": {
        "op": "ADD"
      },
      "13719": {
        "op": "CALLDATALOAD"
      },
      "13720": {
        "op": "SWAP2"
      },
      "13721": {
        "op": "POP"
      },
      "13722": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "13724": {
        "op": "DUP6"
      },
      "13725": {
        "op": "ADD"
      },
      "13726": {
        "op": "CALLDATALOAD"
      },
      "13727": {
        "op": "PUSH2",
        "value": "0x35A7"
      },
      "13730": {
        "op": "DUP2"
      },
      "13731": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "13734": {
        "jump": "i",
        "op": "JUMP"
      },
      "13735": {
        "op": "JUMPDEST"
      },
      "13736": {
        "op": "SWAP4"
      },
      "13737": {
        "op": "SWAP7"
      },
      "13738": {
        "op": "SWAP3"
      },
      "13739": {
        "op": "SWAP6"
      },
      "13740": {
        "op": "POP"
      },
      "13741": {
        "op": "SWAP1"
      },
      "13742": {
        "op": "SWAP4"
      },
      "13743": {
        "op": "POP"
      },
      "13744": {
        "op": "POP"
      },
      "13745": {
        "jump": "o",
        "op": "JUMP"
      },
      "13746": {
        "op": "JUMPDEST"
      },
      "13747": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13749": {
        "op": "DUP1"
      },
      "13750": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13752": {
        "op": "DUP1"
      },
      "13753": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13755": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "13757": {
        "op": "DUP7"
      },
      "13758": {
        "op": "DUP9"
      },
      "13759": {
        "op": "SUB"
      },
      "13760": {
        "op": "SLT"
      },
      "13761": {
        "op": "ISZERO"
      },
      "13762": {
        "op": "PUSH2",
        "value": "0x35C9"
      },
      "13765": {
        "op": "JUMPI"
      },
      "13766": {
        "op": "DUP3"
      },
      "13767": {
        "op": "DUP4"
      },
      "13768": {
        "op": "REVERT"
      },
      "13769": {
        "op": "JUMPDEST"
      },
      "13770": {
        "op": "DUP6"
      },
      "13771": {
        "op": "CALLDATALOAD"
      },
      "13772": {
        "op": "SWAP5"
      },
      "13773": {
        "op": "POP"
      },
      "13774": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13776": {
        "op": "DUP7"
      },
      "13777": {
        "op": "ADD"
      },
      "13778": {
        "op": "CALLDATALOAD"
      },
      "13779": {
        "op": "SWAP4"
      },
      "13780": {
        "op": "POP"
      },
      "13781": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13783": {
        "op": "DUP7"
      },
      "13784": {
        "op": "ADD"
      },
      "13785": {
        "op": "CALLDATALOAD"
      },
      "13786": {
        "op": "SWAP3"
      },
      "13787": {
        "op": "POP"
      },
      "13788": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "13790": {
        "op": "DUP7"
      },
      "13791": {
        "op": "ADD"
      },
      "13792": {
        "op": "CALLDATALOAD"
      },
      "13793": {
        "op": "SWAP2"
      },
      "13794": {
        "op": "POP"
      },
      "13795": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "13797": {
        "op": "DUP7"
      },
      "13798": {
        "op": "ADD"
      },
      "13799": {
        "op": "CALLDATALOAD"
      },
      "13800": {
        "op": "PUSH2",
        "value": "0x3476"
      },
      "13803": {
        "op": "DUP2"
      },
      "13804": {
        "op": "PUSH2",
        "value": "0x403A"
      },
      "13807": {
        "jump": "i",
        "op": "JUMP"
      },
      "13808": {
        "op": "JUMPDEST"
      },
      "13809": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "13811": {
        "op": "SWAP4"
      },
      "13812": {
        "op": "SWAP1"
      },
      "13813": {
        "op": "SWAP4"
      },
      "13814": {
        "op": "SHL"
      },
      "13815": {
        "op": "PUSH12",
        "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
      },
      "13828": {
        "op": "NOT"
      },
      "13829": {
        "op": "AND"
      },
      "13830": {
        "op": "DUP4"
      },
      "13831": {
        "op": "MSTORE"
      },
      "13832": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "13834": {
        "op": "SWAP2"
      },
      "13835": {
        "op": "DUP3"
      },
      "13836": {
        "op": "SIGNEXTEND"
      },
      "13837": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "13839": {
        "op": "SWAP1"
      },
      "13840": {
        "op": "DUP2"
      },
      "13841": {
        "op": "SHL"
      },
      "13842": {
        "op": "PUSH1",
        "value": "0x14"
      },
      "13844": {
        "op": "DUP6"
      },
      "13845": {
        "op": "ADD"
      },
      "13846": {
        "op": "MSTORE"
      },
      "13847": {
        "op": "SWAP2"
      },
      "13848": {
        "op": "SIGNEXTEND"
      },
      "13849": {
        "op": "SWAP1"
      },
      "13850": {
        "op": "SHL"
      },
      "13851": {
        "op": "PUSH1",
        "value": "0x17"
      },
      "13853": {
        "op": "DUP3"
      },
      "13854": {
        "op": "ADD"
      },
      "13855": {
        "op": "MSTORE"
      },
      "13856": {
        "op": "PUSH1",
        "value": "0x1A"
      },
      "13858": {
        "op": "ADD"
      },
      "13859": {
        "op": "SWAP1"
      },
      "13860": {
        "jump": "o",
        "op": "JUMP"
      },
      "13861": {
        "op": "JUMPDEST"
      },
      "13862": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13864": {
        "op": "DUP3"
      },
      "13865": {
        "op": "MLOAD"
      },
      "13866": {
        "op": "PUSH2",
        "value": "0x3637"
      },
      "13869": {
        "op": "DUP2"
      },
      "13870": {
        "op": "DUP5"
      },
      "13871": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13873": {
        "op": "DUP8"
      },
      "13874": {
        "op": "ADD"
      },
      "13875": {
        "op": "PUSH2",
        "value": "0x3F36"
      },
      "13878": {
        "jump": "i",
        "op": "JUMP"
      },
      "13879": {
        "op": "JUMPDEST"
      },
      "13880": {
        "op": "SWAP2"
      },
      "13881": {
        "op": "SWAP1"
      },
      "13882": {
        "op": "SWAP2"
      },
      "13883": {
        "op": "ADD"
      },
      "13884": {
        "op": "SWAP3"
      },
      "13885": {
        "op": "SWAP2"
      },
      "13886": {
        "op": "POP"
      },
      "13887": {
        "op": "POP"
      },
      "13888": {
        "jump": "o",
        "op": "JUMP"
      },
      "13889": {
        "op": "JUMPDEST"
      },
      "13890": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "13892": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "13894": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "13896": {
        "op": "SHL"
      },
      "13897": {
        "op": "SUB"
      },
      "13898": {
        "op": "SWAP2"
      },
      "13899": {
        "op": "SWAP1"
      },
      "13900": {
        "op": "SWAP2"
      },
      "13901": {
        "op": "AND"
      },
      "13902": {
        "op": "DUP2"
      },
      "13903": {
        "op": "MSTORE"
      },
      "13904": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13906": {
        "op": "ADD"
      },
      "13907": {
        "op": "SWAP1"
      },
      "13908": {
        "jump": "o",
        "op": "JUMP"
      },
      "13909": {
        "op": "JUMPDEST"
      },
      "13910": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "13912": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "13914": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "13916": {
        "op": "SHL"
      },
      "13917": {
        "op": "SUB"
      },
      "13918": {
        "op": "SWAP4"
      },
      "13919": {
        "op": "DUP5"
      },
      "13920": {
        "op": "AND"
      },
      "13921": {
        "op": "DUP2"
      },
      "13922": {
        "op": "MSTORE"
      },
      "13923": {
        "op": "SWAP2"
      },
      "13924": {
        "op": "SWAP1"
      },
      "13925": {
        "op": "SWAP3"
      },
      "13926": {
        "op": "AND"
      },
      "13927": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13929": {
        "op": "DUP3"
      },
      "13930": {
        "op": "ADD"
      },
      "13931": {
        "op": "MSTORE"
      },
      "13932": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13934": {
        "op": "DUP2"
      },
      "13935": {
        "op": "ADD"
      },
      "13936": {
        "op": "SWAP2"
      },
      "13937": {
        "op": "SWAP1"
      },
      "13938": {
        "op": "SWAP2"
      },
      "13939": {
        "op": "MSTORE"
      },
      "13940": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "13942": {
        "op": "ADD"
      },
      "13943": {
        "op": "SWAP1"
      },
      "13944": {
        "jump": "o",
        "op": "JUMP"
      },
      "13945": {
        "op": "JUMPDEST"
      },
      "13946": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "13948": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "13950": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "13952": {
        "op": "SHL"
      },
      "13953": {
        "op": "SUB"
      },
      "13954": {
        "op": "SWAP5"
      },
      "13955": {
        "op": "DUP6"
      },
      "13956": {
        "op": "AND"
      },
      "13957": {
        "op": "DUP2"
      },
      "13958": {
        "op": "MSTORE"
      },
      "13959": {
        "op": "SWAP3"
      },
      "13960": {
        "op": "ISZERO"
      },
      "13961": {
        "op": "ISZERO"
      },
      "13962": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "13964": {
        "op": "DUP5"
      },
      "13965": {
        "op": "ADD"
      },
      "13966": {
        "op": "MSTORE"
      },
      "13967": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "13969": {
        "op": "DUP4"
      },
      "13970": {
        "op": "ADD"
      },
      "13971": {
        "op": "SWAP2"
      },
      "13972": {
        "op": "SWAP1"
      },
      "13973": {
        "op": "SWAP2"
      },
      "13974": {
        "op": "MSTORE"
      },
      "13975": {
        "op": "SWAP1"
      },
      "13976": {
        "op": "SWAP2"
      },
      "13977": {
        "op": "AND"
      },
      "13978": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "13980": {
        "op": "DUP3"
      },
      "13981": {
        "op": "ADD"
      },
      "13982": {
        "op": "MSTORE"
      },
      "13983": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "13985": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "13987": {
        "op": "DUP3"
      },
      "13988": {
        "op": "ADD"
      },
      "13989": {
        "op": "DUP2"
      },
      "13990": {
        "op": "SWAP1"
      },
      "13991": {
        "op": "MSTORE"
      },
      "13992": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "13994": {
        "op": "SWAP1"
      },
      "13995": {
        "op": "DUP3"
      },
      "13996": {
        "op": "ADD"
      },
      "13997": {
        "op": "MSTORE"
      },
      "13998": {
        "op": "PUSH1",
        "value": "0xC0"
      },
      "14000": {
        "op": "ADD"
      },
      "14001": {
        "op": "SWAP1"
      },
      "14002": {
        "jump": "o",
        "op": "JUMP"
      },
      "14003": {
        "op": "JUMPDEST"
      },
      "14004": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14006": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14008": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "14010": {
        "op": "SHL"
      },
      "14011": {
        "op": "SUB"
      },
      "14012": {
        "op": "SWAP5"
      },
      "14013": {
        "op": "SWAP1"
      },
      "14014": {
        "op": "SWAP5"
      },
      "14015": {
        "op": "AND"
      },
      "14016": {
        "op": "DUP5"
      },
      "14017": {
        "op": "MSTORE"
      },
      "14018": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "14020": {
        "op": "SWAP3"
      },
      "14021": {
        "op": "DUP4"
      },
      "14022": {
        "op": "SIGNEXTEND"
      },
      "14023": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14025": {
        "op": "DUP6"
      },
      "14026": {
        "op": "ADD"
      },
      "14027": {
        "op": "MSTORE"
      },
      "14028": {
        "op": "SWAP2"
      },
      "14029": {
        "op": "SIGNEXTEND"
      },
      "14030": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14032": {
        "op": "DUP4"
      },
      "14033": {
        "op": "ADD"
      },
      "14034": {
        "op": "MSTORE"
      },
      "14035": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14037": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14039": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14041": {
        "op": "SHL"
      },
      "14042": {
        "op": "SUB"
      },
      "14043": {
        "op": "AND"
      },
      "14044": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14046": {
        "op": "DUP3"
      },
      "14047": {
        "op": "ADD"
      },
      "14048": {
        "op": "MSTORE"
      },
      "14049": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "14051": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14053": {
        "op": "DUP3"
      },
      "14054": {
        "op": "ADD"
      },
      "14055": {
        "op": "DUP2"
      },
      "14056": {
        "op": "SWAP1"
      },
      "14057": {
        "op": "MSTORE"
      },
      "14058": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "14060": {
        "op": "SWAP1"
      },
      "14061": {
        "op": "DUP3"
      },
      "14062": {
        "op": "ADD"
      },
      "14063": {
        "op": "MSTORE"
      },
      "14064": {
        "op": "PUSH1",
        "value": "0xC0"
      },
      "14066": {
        "op": "ADD"
      },
      "14067": {
        "op": "SWAP1"
      },
      "14068": {
        "jump": "o",
        "op": "JUMP"
      },
      "14069": {
        "op": "JUMPDEST"
      },
      "14070": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14072": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14074": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "14076": {
        "op": "SHL"
      },
      "14077": {
        "op": "SUB"
      },
      "14078": {
        "op": "SWAP6"
      },
      "14079": {
        "op": "SWAP1"
      },
      "14080": {
        "op": "SWAP6"
      },
      "14081": {
        "op": "AND"
      },
      "14082": {
        "op": "DUP6"
      },
      "14083": {
        "op": "MSTORE"
      },
      "14084": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "14086": {
        "op": "SWAP4"
      },
      "14087": {
        "op": "DUP5"
      },
      "14088": {
        "op": "SIGNEXTEND"
      },
      "14089": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14091": {
        "op": "DUP7"
      },
      "14092": {
        "op": "ADD"
      },
      "14093": {
        "op": "MSTORE"
      },
      "14094": {
        "op": "SWAP2"
      },
      "14095": {
        "op": "SWAP1"
      },
      "14096": {
        "op": "SWAP3"
      },
      "14097": {
        "op": "SIGNEXTEND"
      },
      "14098": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14100": {
        "op": "DUP5"
      },
      "14101": {
        "op": "ADD"
      },
      "14102": {
        "op": "MSTORE"
      },
      "14103": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14105": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14107": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14109": {
        "op": "SHL"
      },
      "14110": {
        "op": "SUB"
      },
      "14111": {
        "op": "SWAP2"
      },
      "14112": {
        "op": "DUP3"
      },
      "14113": {
        "op": "AND"
      },
      "14114": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14116": {
        "op": "DUP5"
      },
      "14117": {
        "op": "ADD"
      },
      "14118": {
        "op": "MSTORE"
      },
      "14119": {
        "op": "AND"
      },
      "14120": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14122": {
        "op": "DUP3"
      },
      "14123": {
        "op": "ADD"
      },
      "14124": {
        "op": "MSTORE"
      },
      "14125": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "14127": {
        "op": "ADD"
      },
      "14128": {
        "op": "SWAP1"
      },
      "14129": {
        "jump": "o",
        "op": "JUMP"
      },
      "14130": {
        "op": "JUMPDEST"
      },
      "14131": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14133": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14135": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "14137": {
        "op": "SHL"
      },
      "14138": {
        "op": "SUB"
      },
      "14139": {
        "op": "SWAP3"
      },
      "14140": {
        "op": "SWAP1"
      },
      "14141": {
        "op": "SWAP3"
      },
      "14142": {
        "op": "AND"
      },
      "14143": {
        "op": "DUP3"
      },
      "14144": {
        "op": "MSTORE"
      },
      "14145": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14147": {
        "op": "DUP3"
      },
      "14148": {
        "op": "ADD"
      },
      "14149": {
        "op": "MSTORE"
      },
      "14150": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14152": {
        "op": "ADD"
      },
      "14153": {
        "op": "SWAP1"
      },
      "14154": {
        "jump": "o",
        "op": "JUMP"
      },
      "14155": {
        "op": "JUMPDEST"
      },
      "14156": {
        "op": "SWAP1"
      },
      "14157": {
        "op": "ISZERO"
      },
      "14158": {
        "op": "ISZERO"
      },
      "14159": {
        "op": "DUP2"
      },
      "14160": {
        "op": "MSTORE"
      },
      "14161": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14163": {
        "op": "ADD"
      },
      "14164": {
        "op": "SWAP1"
      },
      "14165": {
        "jump": "o",
        "op": "JUMP"
      },
      "14166": {
        "op": "JUMPDEST"
      },
      "14167": {
        "op": "SWAP1"
      },
      "14168": {
        "op": "DUP2"
      },
      "14169": {
        "op": "MSTORE"
      },
      "14170": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14172": {
        "op": "ADD"
      },
      "14173": {
        "op": "SWAP1"
      },
      "14174": {
        "jump": "o",
        "op": "JUMP"
      },
      "14175": {
        "op": "JUMPDEST"
      },
      "14176": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "14178": {
        "op": "SWAP2"
      },
      "14179": {
        "op": "SWAP1"
      },
      "14180": {
        "op": "SWAP2"
      },
      "14181": {
        "op": "SIGNEXTEND"
      },
      "14182": {
        "op": "DUP2"
      },
      "14183": {
        "op": "MSTORE"
      },
      "14184": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14186": {
        "op": "ADD"
      },
      "14187": {
        "op": "SWAP1"
      },
      "14188": {
        "jump": "o",
        "op": "JUMP"
      },
      "14189": {
        "op": "JUMPDEST"
      },
      "14190": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "14192": {
        "op": "SWAP4"
      },
      "14193": {
        "op": "DUP5"
      },
      "14194": {
        "op": "SIGNEXTEND"
      },
      "14195": {
        "op": "DUP2"
      },
      "14196": {
        "op": "MSTORE"
      },
      "14197": {
        "op": "SWAP2"
      },
      "14198": {
        "op": "SWAP1"
      },
      "14199": {
        "op": "SWAP3"
      },
      "14200": {
        "op": "SIGNEXTEND"
      },
      "14201": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14203": {
        "op": "DUP3"
      },
      "14204": {
        "op": "ADD"
      },
      "14205": {
        "op": "MSTORE"
      },
      "14206": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14208": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "14210": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14212": {
        "op": "SHL"
      },
      "14213": {
        "op": "SUB"
      },
      "14214": {
        "op": "SWAP1"
      },
      "14215": {
        "op": "SWAP2"
      },
      "14216": {
        "op": "AND"
      },
      "14217": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14219": {
        "op": "DUP3"
      },
      "14220": {
        "op": "ADD"
      },
      "14221": {
        "op": "MSTORE"
      },
      "14222": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14224": {
        "op": "ADD"
      },
      "14225": {
        "op": "SWAP1"
      },
      "14226": {
        "jump": "o",
        "op": "JUMP"
      },
      "14227": {
        "op": "JUMPDEST"
      },
      "14228": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "14230": {
        "op": "SWAP5"
      },
      "14231": {
        "op": "SWAP1"
      },
      "14232": {
        "op": "SWAP5"
      },
      "14233": {
        "op": "SIGNEXTEND"
      },
      "14234": {
        "op": "DUP5"
      },
      "14235": {
        "op": "MSTORE"
      },
      "14236": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14238": {
        "op": "DUP5"
      },
      "14239": {
        "op": "ADD"
      },
      "14240": {
        "op": "SWAP3"
      },
      "14241": {
        "op": "SWAP1"
      },
      "14242": {
        "op": "SWAP3"
      },
      "14243": {
        "op": "MSTORE"
      },
      "14244": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14246": {
        "op": "DUP4"
      },
      "14247": {
        "op": "ADD"
      },
      "14248": {
        "op": "MSTORE"
      },
      "14249": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14251": {
        "op": "DUP3"
      },
      "14252": {
        "op": "ADD"
      },
      "14253": {
        "op": "MSTORE"
      },
      "14254": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14256": {
        "op": "ADD"
      },
      "14257": {
        "op": "SWAP1"
      },
      "14258": {
        "jump": "o",
        "op": "JUMP"
      },
      "14259": {
        "op": "JUMPDEST"
      },
      "14260": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "14262": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14264": {
        "op": "DUP3"
      },
      "14265": {
        "op": "MSTORE"
      },
      "14266": {
        "op": "DUP3"
      },
      "14267": {
        "op": "MLOAD"
      },
      "14268": {
        "op": "DUP1"
      },
      "14269": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14271": {
        "op": "DUP5"
      },
      "14272": {
        "op": "ADD"
      },
      "14273": {
        "op": "MSTORE"
      },
      "14274": {
        "op": "PUSH2",
        "value": "0x37D2"
      },
      "14277": {
        "op": "DUP2"
      },
      "14278": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14280": {
        "op": "DUP6"
      },
      "14281": {
        "op": "ADD"
      },
      "14282": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14284": {
        "op": "DUP8"
      },
      "14285": {
        "op": "ADD"
      },
      "14286": {
        "op": "PUSH2",
        "value": "0x3F36"
      },
      "14289": {
        "jump": "i",
        "op": "JUMP"
      },
      "14290": {
        "op": "JUMPDEST"
      },
      "14291": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "14293": {
        "op": "ADD"
      },
      "14294": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "14296": {
        "op": "NOT"
      },
      "14297": {
        "op": "AND"
      },
      "14298": {
        "op": "SWAP2"
      },
      "14299": {
        "op": "SWAP1"
      },
      "14300": {
        "op": "SWAP2"
      },
      "14301": {
        "op": "ADD"
      },
      "14302": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14304": {
        "op": "ADD"
      },
      "14305": {
        "op": "SWAP3"
      },
      "14306": {
        "op": "SWAP2"
      },
      "14307": {
        "op": "POP"
      },
      "14308": {
        "op": "POP"
      },
      "14309": {
        "jump": "o",
        "op": "JUMP"
      },
      "14310": {
        "op": "JUMPDEST"
      },
      "14311": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14313": {
        "op": "DUP1"
      },
      "14314": {
        "op": "DUP3"
      },
      "14315": {
        "op": "MSTORE"
      },
      "14316": {
        "op": "PUSH1",
        "value": "0x23"
      },
      "14318": {
        "op": "SWAP1"
      },
      "14319": {
        "op": "DUP3"
      },
      "14320": {
        "op": "ADD"
      },
      "14321": {
        "op": "MSTORE"
      },
      "14322": {
        "op": "PUSH32",
        "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
      },
      "14355": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14357": {
        "op": "DUP3"
      },
      "14358": {
        "op": "ADD"
      },
      "14359": {
        "op": "MSTORE"
      },
      "14360": {
        "op": "PUSH3",
        "value": "0x657373"
      },
      "14364": {
        "op": "PUSH1",
        "value": "0xE8"
      },
      "14366": {
        "op": "SHL"
      },
      "14367": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14369": {
        "op": "DUP3"
      },
      "14370": {
        "op": "ADD"
      },
      "14371": {
        "op": "MSTORE"
      },
      "14372": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14374": {
        "op": "ADD"
      },
      "14375": {
        "op": "SWAP1"
      },
      "14376": {
        "jump": "o",
        "op": "JUMP"
      },
      "14377": {
        "op": "JUMPDEST"
      },
      "14378": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14380": {
        "op": "DUP1"
      },
      "14381": {
        "op": "DUP3"
      },
      "14382": {
        "op": "MSTORE"
      },
      "14383": {
        "op": "PUSH1",
        "value": "0xA"
      },
      "14385": {
        "op": "SWAP1"
      },
      "14386": {
        "op": "DUP3"
      },
      "14387": {
        "op": "ADD"
      },
      "14388": {
        "op": "MSTORE"
      },
      "14389": {
        "op": "PUSH10",
        "value": "0x30B6B7BAB73A1826B4B7"
      },
      "14400": {
        "op": "PUSH1",
        "value": "0xB1"
      },
      "14402": {
        "op": "SHL"
      },
      "14403": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14405": {
        "op": "DUP3"
      },
      "14406": {
        "op": "ADD"
      },
      "14407": {
        "op": "MSTORE"
      },
      "14408": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14410": {
        "op": "ADD"
      },
      "14411": {
        "op": "SWAP1"
      },
      "14412": {
        "jump": "o",
        "op": "JUMP"
      },
      "14413": {
        "op": "JUMPDEST"
      },
      "14414": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14416": {
        "op": "DUP1"
      },
      "14417": {
        "op": "DUP3"
      },
      "14418": {
        "op": "MSTORE"
      },
      "14419": {
        "op": "PUSH1",
        "value": "0x22"
      },
      "14421": {
        "op": "SWAP1"
      },
      "14422": {
        "op": "DUP3"
      },
      "14423": {
        "op": "ADD"
      },
      "14424": {
        "op": "MSTORE"
      },
      "14425": {
        "op": "PUSH32",
        "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
      },
      "14458": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14460": {
        "op": "DUP3"
      },
      "14461": {
        "op": "ADD"
      },
      "14462": {
        "op": "MSTORE"
      },
      "14463": {
        "op": "PUSH2",
        "value": "0x6365"
      },
      "14466": {
        "op": "PUSH1",
        "value": "0xF0"
      },
      "14468": {
        "op": "SHL"
      },
      "14469": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14471": {
        "op": "DUP3"
      },
      "14472": {
        "op": "ADD"
      },
      "14473": {
        "op": "MSTORE"
      },
      "14474": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14476": {
        "op": "ADD"
      },
      "14477": {
        "op": "SWAP1"
      },
      "14478": {
        "jump": "o",
        "op": "JUMP"
      },
      "14479": {
        "op": "JUMPDEST"
      },
      "14480": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14482": {
        "op": "DUP1"
      },
      "14483": {
        "op": "DUP3"
      },
      "14484": {
        "op": "MSTORE"
      },
      "14485": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "14487": {
        "op": "SWAP1"
      },
      "14488": {
        "op": "DUP3"
      },
      "14489": {
        "op": "ADD"
      },
      "14490": {
        "op": "MSTORE"
      },
      "14491": {
        "op": "PUSH2",
        "value": "0x746F"
      },
      "14494": {
        "op": "PUSH1",
        "value": "0xF0"
      },
      "14496": {
        "op": "SHL"
      },
      "14497": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14499": {
        "op": "DUP3"
      },
      "14500": {
        "op": "ADD"
      },
      "14501": {
        "op": "MSTORE"
      },
      "14502": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14504": {
        "op": "ADD"
      },
      "14505": {
        "op": "SWAP1"
      },
      "14506": {
        "jump": "o",
        "op": "JUMP"
      },
      "14507": {
        "op": "JUMPDEST"
      },
      "14508": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14510": {
        "op": "DUP1"
      },
      "14511": {
        "op": "DUP3"
      },
      "14512": {
        "op": "MSTORE"
      },
      "14513": {
        "op": "PUSH1",
        "value": "0x15"
      },
      "14515": {
        "op": "SWAP1"
      },
      "14516": {
        "op": "DUP3"
      },
      "14517": {
        "op": "ADD"
      },
      "14518": {
        "op": "MSTORE"
      },
      "14519": {
        "op": "PUSH21",
        "value": "0x3A34B1B5A637BBB2B9101E103A34B1B5AAB83832B9"
      },
      "14541": {
        "op": "PUSH1",
        "value": "0x59"
      },
      "14543": {
        "op": "SHL"
      },
      "14544": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14546": {
        "op": "DUP3"
      },
      "14547": {
        "op": "ADD"
      },
      "14548": {
        "op": "MSTORE"
      },
      "14549": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14551": {
        "op": "ADD"
      },
      "14552": {
        "op": "SWAP1"
      },
      "14553": {
        "jump": "o",
        "op": "JUMP"
      },
      "14554": {
        "op": "JUMPDEST"
      },
      "14555": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14557": {
        "op": "DUP1"
      },
      "14558": {
        "op": "DUP3"
      },
      "14559": {
        "op": "MSTORE"
      },
      "14560": {
        "op": "PUSH1",
        "value": "0x22"
      },
      "14562": {
        "op": "SWAP1"
      },
      "14563": {
        "op": "DUP3"
      },
      "14564": {
        "op": "ADD"
      },
      "14565": {
        "op": "MSTORE"
      },
      "14566": {
        "op": "PUSH32",
        "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
      },
      "14599": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14601": {
        "op": "DUP3"
      },
      "14602": {
        "op": "ADD"
      },
      "14603": {
        "op": "MSTORE"
      },
      "14604": {
        "op": "PUSH2",
        "value": "0x7373"
      },
      "14607": {
        "op": "PUSH1",
        "value": "0xF0"
      },
      "14609": {
        "op": "SHL"
      },
      "14610": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14612": {
        "op": "DUP3"
      },
      "14613": {
        "op": "ADD"
      },
      "14614": {
        "op": "MSTORE"
      },
      "14615": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14617": {
        "op": "ADD"
      },
      "14618": {
        "op": "SWAP1"
      },
      "14619": {
        "jump": "o",
        "op": "JUMP"
      },
      "14620": {
        "op": "JUMPDEST"
      },
      "14621": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14623": {
        "op": "DUP1"
      },
      "14624": {
        "op": "DUP3"
      },
      "14625": {
        "op": "MSTORE"
      },
      "14626": {
        "op": "PUSH1",
        "value": "0x17"
      },
      "14628": {
        "op": "SWAP1"
      },
      "14629": {
        "op": "DUP3"
      },
      "14630": {
        "op": "ADD"
      },
      "14631": {
        "op": "MSTORE"
      },
      "14632": {
        "op": "PUSH32",
        "value": "0x7469636B4C6F7765722025207469636B53706163696E67000000000000000000"
      },
      "14665": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14667": {
        "op": "DUP3"
      },
      "14668": {
        "op": "ADD"
      },
      "14669": {
        "op": "MSTORE"
      },
      "14670": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14672": {
        "op": "ADD"
      },
      "14673": {
        "op": "SWAP1"
      },
      "14674": {
        "jump": "o",
        "op": "JUMP"
      },
      "14675": {
        "op": "JUMPDEST"
      },
      "14676": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14678": {
        "op": "DUP1"
      },
      "14679": {
        "op": "DUP3"
      },
      "14680": {
        "op": "MSTORE"
      },
      "14681": {
        "op": "PUSH1",
        "value": "0x1D"
      },
      "14683": {
        "op": "SWAP1"
      },
      "14684": {
        "op": "DUP3"
      },
      "14685": {
        "op": "ADD"
      },
      "14686": {
        "op": "MSTORE"
      },
      "14687": {
        "op": "PUSH32",
        "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
      },
      "14720": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14722": {
        "op": "DUP3"
      },
      "14723": {
        "op": "ADD"
      },
      "14724": {
        "op": "MSTORE"
      },
      "14725": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14727": {
        "op": "ADD"
      },
      "14728": {
        "op": "SWAP1"
      },
      "14729": {
        "jump": "o",
        "op": "JUMP"
      },
      "14730": {
        "op": "JUMPDEST"
      },
      "14731": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14733": {
        "op": "DUP1"
      },
      "14734": {
        "op": "DUP3"
      },
      "14735": {
        "op": "MSTORE"
      },
      "14736": {
        "op": "PUSH1",
        "value": "0x17"
      },
      "14738": {
        "op": "SWAP1"
      },
      "14739": {
        "op": "DUP3"
      },
      "14740": {
        "op": "ADD"
      },
      "14741": {
        "op": "MSTORE"
      },
      "14742": {
        "op": "PUSH32",
        "value": "0x7469636B55707065722025207469636B53706163696E67000000000000000000"
      },
      "14775": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14777": {
        "op": "DUP3"
      },
      "14778": {
        "op": "ADD"
      },
      "14779": {
        "op": "MSTORE"
      },
      "14780": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14782": {
        "op": "ADD"
      },
      "14783": {
        "op": "SWAP1"
      },
      "14784": {
        "jump": "o",
        "op": "JUMP"
      },
      "14785": {
        "op": "JUMPDEST"
      },
      "14786": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14788": {
        "op": "DUP1"
      },
      "14789": {
        "op": "DUP3"
      },
      "14790": {
        "op": "MSTORE"
      },
      "14791": {
        "op": "PUSH1",
        "value": "0x26"
      },
      "14793": {
        "op": "SWAP1"
      },
      "14794": {
        "op": "DUP3"
      },
      "14795": {
        "op": "ADD"
      },
      "14796": {
        "op": "MSTORE"
      },
      "14797": {
        "op": "PUSH32",
        "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
      },
      "14830": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14832": {
        "op": "DUP3"
      },
      "14833": {
        "op": "ADD"
      },
      "14834": {
        "op": "MSTORE"
      },
      "14835": {
        "op": "PUSH6",
        "value": "0x616C616E6365"
      },
      "14842": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "14844": {
        "op": "SHL"
      },
      "14845": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14847": {
        "op": "DUP3"
      },
      "14848": {
        "op": "ADD"
      },
      "14849": {
        "op": "MSTORE"
      },
      "14850": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14852": {
        "op": "ADD"
      },
      "14853": {
        "op": "SWAP1"
      },
      "14854": {
        "jump": "o",
        "op": "JUMP"
      },
      "14855": {
        "op": "JUMPDEST"
      },
      "14856": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14858": {
        "op": "DUP1"
      },
      "14859": {
        "op": "DUP3"
      },
      "14860": {
        "op": "MSTORE"
      },
      "14861": {
        "op": "PUSH1",
        "value": "0x8"
      },
      "14863": {
        "op": "SWAP1"
      },
      "14864": {
        "op": "DUP3"
      },
      "14865": {
        "op": "ADD"
      },
      "14866": {
        "op": "MSTORE"
      },
      "14867": {
        "op": "PUSH8",
        "value": "0x3134B22AB83832B9"
      },
      "14876": {
        "op": "PUSH1",
        "value": "0xC1"
      },
      "14878": {
        "op": "SHL"
      },
      "14879": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14881": {
        "op": "DUP3"
      },
      "14882": {
        "op": "ADD"
      },
      "14883": {
        "op": "MSTORE"
      },
      "14884": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14886": {
        "op": "ADD"
      },
      "14887": {
        "op": "SWAP1"
      },
      "14888": {
        "jump": "o",
        "op": "JUMP"
      },
      "14889": {
        "op": "JUMPDEST"
      },
      "14890": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14892": {
        "op": "DUP1"
      },
      "14893": {
        "op": "DUP3"
      },
      "14894": {
        "op": "MSTORE"
      },
      "14895": {
        "op": "PUSH1",
        "value": "0x26"
      },
      "14897": {
        "op": "SWAP1"
      },
      "14898": {
        "op": "DUP3"
      },
      "14899": {
        "op": "ADD"
      },
      "14900": {
        "op": "MSTORE"
      },
      "14901": {
        "op": "PUSH32",
        "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
      },
      "14934": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "14936": {
        "op": "DUP3"
      },
      "14937": {
        "op": "ADD"
      },
      "14938": {
        "op": "MSTORE"
      },
      "14939": {
        "op": "PUSH6",
        "value": "0x1C8818D85B1B"
      },
      "14946": {
        "op": "PUSH1",
        "value": "0xD2"
      },
      "14948": {
        "op": "SHL"
      },
      "14949": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "14951": {
        "op": "DUP3"
      },
      "14952": {
        "op": "ADD"
      },
      "14953": {
        "op": "MSTORE"
      },
      "14954": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "14956": {
        "op": "ADD"
      },
      "14957": {
        "op": "SWAP1"
      },
      "14958": {
        "jump": "o",
        "op": "JUMP"
      },
      "14959": {
        "op": "JUMPDEST"
      },
      "14960": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "14962": {
        "op": "DUP1"
      },
      "14963": {
        "op": "DUP3"
      },
      "14964": {
        "op": "MSTORE"
      },
      "14965": {
        "op": "DUP2"
      },
      "14966": {
        "op": "DUP2"
      },
      "14967": {
        "op": "ADD"
      },
      "14968": {
        "op": "MSTORE"
      },
      "14969": {
        "op": "PUSH32",
        "value": "0x616D6F756E743044657369726564206F7220616D6F756E743144657369726564"
      },
      "15002": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15004": {
        "op": "DUP3"
      },
      "15005": {
        "op": "ADD"
      },
      "15006": {
        "op": "MSTORE"
      },
      "15007": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15009": {
        "op": "ADD"
      },
      "15010": {
        "op": "SWAP1"
      },
      "15011": {
        "jump": "o",
        "op": "JUMP"
      },
      "15012": {
        "op": "JUMPDEST"
      },
      "15013": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15015": {
        "op": "DUP1"
      },
      "15016": {
        "op": "DUP3"
      },
      "15017": {
        "op": "MSTORE"
      },
      "15018": {
        "op": "PUSH1",
        "value": "0x11"
      },
      "15020": {
        "op": "SWAP1"
      },
      "15021": {
        "op": "DUP3"
      },
      "15022": {
        "op": "ADD"
      },
      "15023": {
        "op": "MSTORE"
      },
      "15024": {
        "op": "PUSH17",
        "value": "0x70656E64696E67476F7665726E616E6365"
      },
      "15042": {
        "op": "PUSH1",
        "value": "0x78"
      },
      "15044": {
        "op": "SHL"
      },
      "15045": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15047": {
        "op": "DUP3"
      },
      "15048": {
        "op": "ADD"
      },
      "15049": {
        "op": "MSTORE"
      },
      "15050": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15052": {
        "op": "ADD"
      },
      "15053": {
        "op": "SWAP1"
      },
      "15054": {
        "jump": "o",
        "op": "JUMP"
      },
      "15055": {
        "op": "JUMPDEST"
      },
      "15056": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15058": {
        "op": "DUP1"
      },
      "15059": {
        "op": "DUP3"
      },
      "15060": {
        "op": "MSTORE"
      },
      "15061": {
        "op": "PUSH1",
        "value": "0xB"
      },
      "15063": {
        "op": "SWAP1"
      },
      "15064": {
        "op": "DUP3"
      },
      "15065": {
        "op": "ADD"
      },
      "15066": {
        "op": "MSTORE"
      },
      "15067": {
        "op": "PUSH11",
        "value": "0x70726F746F636F6C466565"
      },
      "15079": {
        "op": "PUSH1",
        "value": "0xA8"
      },
      "15081": {
        "op": "SHL"
      },
      "15082": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15084": {
        "op": "DUP3"
      },
      "15085": {
        "op": "ADD"
      },
      "15086": {
        "op": "MSTORE"
      },
      "15087": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15089": {
        "op": "ADD"
      },
      "15090": {
        "op": "SWAP1"
      },
      "15091": {
        "jump": "o",
        "op": "JUMP"
      },
      "15092": {
        "op": "JUMPDEST"
      },
      "15093": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15095": {
        "op": "DUP1"
      },
      "15096": {
        "op": "DUP3"
      },
      "15097": {
        "op": "MSTORE"
      },
      "15098": {
        "op": "PUSH1",
        "value": "0x5"
      },
      "15100": {
        "op": "SWAP1"
      },
      "15101": {
        "op": "DUP3"
      },
      "15102": {
        "op": "ADD"
      },
      "15103": {
        "op": "MSTORE"
      },
      "15104": {
        "op": "PUSH5",
        "value": "0x3A37B5B2B7"
      },
      "15110": {
        "op": "PUSH1",
        "value": "0xD9"
      },
      "15112": {
        "op": "SHL"
      },
      "15113": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15115": {
        "op": "DUP3"
      },
      "15116": {
        "op": "ADD"
      },
      "15117": {
        "op": "MSTORE"
      },
      "15118": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15120": {
        "op": "ADD"
      },
      "15121": {
        "op": "SWAP1"
      },
      "15122": {
        "jump": "o",
        "op": "JUMP"
      },
      "15123": {
        "op": "JUMPDEST"
      },
      "15124": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15126": {
        "op": "DUP1"
      },
      "15127": {
        "op": "DUP3"
      },
      "15128": {
        "op": "MSTORE"
      },
      "15129": {
        "op": "PUSH1",
        "value": "0xC"
      },
      "15131": {
        "op": "SWAP1"
      },
      "15132": {
        "op": "DUP3"
      },
      "15133": {
        "op": "ADD"
      },
      "15134": {
        "op": "MSTORE"
      },
      "15135": {
        "op": "PUSH12",
        "value": "0x29B430B93832A5B2B2B832B9"
      },
      "15148": {
        "op": "PUSH1",
        "value": "0xA1"
      },
      "15150": {
        "op": "SHL"
      },
      "15151": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15153": {
        "op": "DUP3"
      },
      "15154": {
        "op": "ADD"
      },
      "15155": {
        "op": "MSTORE"
      },
      "15156": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15158": {
        "op": "ADD"
      },
      "15159": {
        "op": "SWAP1"
      },
      "15160": {
        "jump": "o",
        "op": "JUMP"
      },
      "15161": {
        "op": "JUMPDEST"
      },
      "15162": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15164": {
        "op": "DUP1"
      },
      "15165": {
        "op": "DUP3"
      },
      "15166": {
        "op": "MSTORE"
      },
      "15167": {
        "op": "PUSH1",
        "value": "0xA"
      },
      "15169": {
        "op": "SWAP1"
      },
      "15170": {
        "op": "DUP3"
      },
      "15171": {
        "op": "ADD"
      },
      "15172": {
        "op": "MSTORE"
      },
      "15173": {
        "op": "PUSH10",
        "value": "0x676F7665726E616E6365"
      },
      "15184": {
        "op": "PUSH1",
        "value": "0xB0"
      },
      "15186": {
        "op": "SHL"
      },
      "15187": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15189": {
        "op": "DUP3"
      },
      "15190": {
        "op": "ADD"
      },
      "15191": {
        "op": "MSTORE"
      },
      "15192": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15194": {
        "op": "ADD"
      },
      "15195": {
        "op": "SWAP1"
      },
      "15196": {
        "jump": "o",
        "op": "JUMP"
      },
      "15197": {
        "op": "JUMPDEST"
      },
      "15198": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15200": {
        "op": "DUP1"
      },
      "15201": {
        "op": "DUP3"
      },
      "15202": {
        "op": "MSTORE"
      },
      "15203": {
        "op": "PUSH1",
        "value": "0x6"
      },
      "15205": {
        "op": "SWAP1"
      },
      "15206": {
        "op": "DUP3"
      },
      "15207": {
        "op": "ADD"
      },
      "15208": {
        "op": "MSTORE"
      },
      "15209": {
        "op": "PUSH6",
        "value": "0x736861726573"
      },
      "15216": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "15218": {
        "op": "SHL"
      },
      "15219": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15221": {
        "op": "DUP3"
      },
      "15222": {
        "op": "ADD"
      },
      "15223": {
        "op": "MSTORE"
      },
      "15224": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15226": {
        "op": "ADD"
      },
      "15227": {
        "op": "SWAP1"
      },
      "15228": {
        "jump": "o",
        "op": "JUMP"
      },
      "15229": {
        "op": "JUMPDEST"
      },
      "15230": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15232": {
        "op": "DUP1"
      },
      "15233": {
        "op": "DUP3"
      },
      "15234": {
        "op": "MSTORE"
      },
      "15235": {
        "op": "PUSH1",
        "value": "0x21"
      },
      "15237": {
        "op": "SWAP1"
      },
      "15238": {
        "op": "DUP3"
      },
      "15239": {
        "op": "ADD"
      },
      "15240": {
        "op": "MSTORE"
      },
      "15241": {
        "op": "PUSH32",
        "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
      },
      "15274": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15276": {
        "op": "DUP3"
      },
      "15277": {
        "op": "ADD"
      },
      "15278": {
        "op": "MSTORE"
      },
      "15279": {
        "op": "PUSH1",
        "value": "0x73"
      },
      "15281": {
        "op": "PUSH1",
        "value": "0xF8"
      },
      "15283": {
        "op": "SHL"
      },
      "15284": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15286": {
        "op": "DUP3"
      },
      "15287": {
        "op": "ADD"
      },
      "15288": {
        "op": "MSTORE"
      },
      "15289": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "15291": {
        "op": "ADD"
      },
      "15292": {
        "op": "SWAP1"
      },
      "15293": {
        "jump": "o",
        "op": "JUMP"
      },
      "15294": {
        "op": "JUMPDEST"
      },
      "15295": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15297": {
        "op": "DUP1"
      },
      "15298": {
        "op": "DUP3"
      },
      "15299": {
        "op": "MSTORE"
      },
      "15300": {
        "op": "PUSH1",
        "value": "0x5"
      },
      "15302": {
        "op": "SWAP1"
      },
      "15303": {
        "op": "DUP3"
      },
      "15304": {
        "op": "ADD"
      },
      "15305": {
        "op": "MSTORE"
      },
      "15306": {
        "op": "PUSH5",
        "value": "0x63726F7373"
      },
      "15312": {
        "op": "PUSH1",
        "value": "0xD8"
      },
      "15314": {
        "op": "SHL"
      },
      "15315": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15317": {
        "op": "DUP3"
      },
      "15318": {
        "op": "ADD"
      },
      "15319": {
        "op": "MSTORE"
      },
      "15320": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15322": {
        "op": "ADD"
      },
      "15323": {
        "op": "SWAP1"
      },
      "15324": {
        "jump": "o",
        "op": "JUMP"
      },
      "15325": {
        "op": "JUMPDEST"
      },
      "15326": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15328": {
        "op": "DUP1"
      },
      "15329": {
        "op": "DUP3"
      },
      "15330": {
        "op": "MSTORE"
      },
      "15331": {
        "op": "PUSH1",
        "value": "0x25"
      },
      "15333": {
        "op": "SWAP1"
      },
      "15334": {
        "op": "DUP3"
      },
      "15335": {
        "op": "ADD"
      },
      "15336": {
        "op": "MSTORE"
      },
      "15337": {
        "op": "PUSH32",
        "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
      },
      "15370": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15372": {
        "op": "DUP3"
      },
      "15373": {
        "op": "ADD"
      },
      "15374": {
        "op": "MSTORE"
      },
      "15375": {
        "op": "PUSH5",
        "value": "0x6472657373"
      },
      "15381": {
        "op": "PUSH1",
        "value": "0xD8"
      },
      "15383": {
        "op": "SHL"
      },
      "15384": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15386": {
        "op": "DUP3"
      },
      "15387": {
        "op": "ADD"
      },
      "15388": {
        "op": "MSTORE"
      },
      "15389": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "15391": {
        "op": "ADD"
      },
      "15392": {
        "op": "SWAP1"
      },
      "15393": {
        "jump": "o",
        "op": "JUMP"
      },
      "15394": {
        "op": "JUMPDEST"
      },
      "15395": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15397": {
        "op": "DUP1"
      },
      "15398": {
        "op": "DUP3"
      },
      "15399": {
        "op": "MSTORE"
      },
      "15400": {
        "op": "PUSH1",
        "value": "0xA"
      },
      "15402": {
        "op": "SWAP1"
      },
      "15403": {
        "op": "DUP3"
      },
      "15404": {
        "op": "ADD"
      },
      "15405": {
        "op": "MSTORE"
      },
      "15406": {
        "op": "PUSH10",
        "value": "0x30B6B7BAB73A18A6B4B7"
      },
      "15417": {
        "op": "PUSH1",
        "value": "0xB1"
      },
      "15419": {
        "op": "SHL"
      },
      "15420": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15422": {
        "op": "DUP3"
      },
      "15423": {
        "op": "ADD"
      },
      "15424": {
        "op": "MSTORE"
      },
      "15425": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15427": {
        "op": "ADD"
      },
      "15428": {
        "op": "SWAP1"
      },
      "15429": {
        "jump": "o",
        "op": "JUMP"
      },
      "15430": {
        "op": "JUMPDEST"
      },
      "15431": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15433": {
        "op": "DUP1"
      },
      "15434": {
        "op": "DUP3"
      },
      "15435": {
        "op": "MSTORE"
      },
      "15436": {
        "op": "PUSH1",
        "value": "0x8"
      },
      "15438": {
        "op": "SWAP1"
      },
      "15439": {
        "op": "DUP3"
      },
      "15440": {
        "op": "ADD"
      },
      "15441": {
        "op": "MSTORE"
      },
      "15442": {
        "op": "PUSH8",
        "value": "0x30B9B5A637BBB2B9"
      },
      "15451": {
        "op": "PUSH1",
        "value": "0xC1"
      },
      "15453": {
        "op": "SHL"
      },
      "15454": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15456": {
        "op": "DUP3"
      },
      "15457": {
        "op": "ADD"
      },
      "15458": {
        "op": "MSTORE"
      },
      "15459": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15461": {
        "op": "ADD"
      },
      "15462": {
        "op": "SWAP1"
      },
      "15463": {
        "jump": "o",
        "op": "JUMP"
      },
      "15464": {
        "op": "JUMPDEST"
      },
      "15465": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15467": {
        "op": "DUP1"
      },
      "15468": {
        "op": "DUP3"
      },
      "15469": {
        "op": "MSTORE"
      },
      "15470": {
        "op": "PUSH1",
        "value": "0x11"
      },
      "15472": {
        "op": "SWAP1"
      },
      "15473": {
        "op": "DUP3"
      },
      "15474": {
        "op": "ADD"
      },
      "15475": {
        "op": "MSTORE"
      },
      "15476": {
        "op": "PUSH17",
        "value": "0x7469636B4C6F77657220746F6F206C6F77"
      },
      "15494": {
        "op": "PUSH1",
        "value": "0x78"
      },
      "15496": {
        "op": "SHL"
      },
      "15497": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15499": {
        "op": "DUP3"
      },
      "15500": {
        "op": "ADD"
      },
      "15501": {
        "op": "MSTORE"
      },
      "15502": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15504": {
        "op": "ADD"
      },
      "15505": {
        "op": "SWAP1"
      },
      "15506": {
        "jump": "o",
        "op": "JUMP"
      },
      "15507": {
        "op": "JUMPDEST"
      },
      "15508": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15510": {
        "op": "DUP1"
      },
      "15511": {
        "op": "DUP3"
      },
      "15512": {
        "op": "MSTORE"
      },
      "15513": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "15515": {
        "op": "SWAP1"
      },
      "15516": {
        "op": "DUP3"
      },
      "15517": {
        "op": "ADD"
      },
      "15518": {
        "op": "MSTORE"
      },
      "15519": {
        "op": "PUSH32",
        "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
      },
      "15552": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15554": {
        "op": "DUP3"
      },
      "15555": {
        "op": "ADD"
      },
      "15556": {
        "op": "MSTORE"
      },
      "15557": {
        "op": "PUSH4",
        "value": "0x72657373"
      },
      "15562": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "15564": {
        "op": "SHL"
      },
      "15565": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15567": {
        "op": "DUP3"
      },
      "15568": {
        "op": "ADD"
      },
      "15569": {
        "op": "MSTORE"
      },
      "15570": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "15572": {
        "op": "ADD"
      },
      "15573": {
        "op": "SWAP1"
      },
      "15574": {
        "jump": "o",
        "op": "JUMP"
      },
      "15575": {
        "op": "JUMPDEST"
      },
      "15576": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15578": {
        "op": "DUP1"
      },
      "15579": {
        "op": "DUP3"
      },
      "15580": {
        "op": "MSTORE"
      },
      "15581": {
        "op": "PUSH1",
        "value": "0x12"
      },
      "15583": {
        "op": "SWAP1"
      },
      "15584": {
        "op": "DUP3"
      },
      "15585": {
        "op": "ADD"
      },
      "15586": {
        "op": "MSTORE"
      },
      "15587": {
        "op": "PUSH18",
        "value": "0xE8D2C6D6AAE0E0CAE440E8DEDE40D0D2CED"
      },
      "15606": {
        "op": "PUSH1",
        "value": "0x73"
      },
      "15608": {
        "op": "SHL"
      },
      "15609": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15611": {
        "op": "DUP3"
      },
      "15612": {
        "op": "ADD"
      },
      "15613": {
        "op": "MSTORE"
      },
      "15614": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15616": {
        "op": "ADD"
      },
      "15617": {
        "op": "SWAP1"
      },
      "15618": {
        "jump": "o",
        "op": "JUMP"
      },
      "15619": {
        "op": "JUMPDEST"
      },
      "15620": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15622": {
        "op": "DUP1"
      },
      "15623": {
        "op": "DUP3"
      },
      "15624": {
        "op": "MSTORE"
      },
      "15625": {
        "op": "PUSH1",
        "value": "0x1D"
      },
      "15627": {
        "op": "SWAP1"
      },
      "15628": {
        "op": "DUP3"
      },
      "15629": {
        "op": "ADD"
      },
      "15630": {
        "op": "MSTORE"
      },
      "15631": {
        "op": "PUSH32",
        "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
      },
      "15664": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15666": {
        "op": "DUP3"
      },
      "15667": {
        "op": "ADD"
      },
      "15668": {
        "op": "MSTORE"
      },
      "15669": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15671": {
        "op": "ADD"
      },
      "15672": {
        "op": "SWAP1"
      },
      "15673": {
        "jump": "o",
        "op": "JUMP"
      },
      "15674": {
        "op": "JUMPDEST"
      },
      "15675": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15677": {
        "op": "DUP1"
      },
      "15678": {
        "op": "DUP3"
      },
      "15679": {
        "op": "MSTORE"
      },
      "15680": {
        "op": "PUSH1",
        "value": "0xE"
      },
      "15682": {
        "op": "SWAP1"
      },
      "15683": {
        "op": "DUP3"
      },
      "15684": {
        "op": "ADD"
      },
      "15685": {
        "op": "MSTORE"
      },
      "15686": {
        "op": "PUSH14",
        "value": "0x6D6178546F74616C537570706C79"
      },
      "15701": {
        "op": "PUSH1",
        "value": "0x90"
      },
      "15703": {
        "op": "SHL"
      },
      "15704": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15706": {
        "op": "DUP3"
      },
      "15707": {
        "op": "ADD"
      },
      "15708": {
        "op": "MSTORE"
      },
      "15709": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15711": {
        "op": "ADD"
      },
      "15712": {
        "op": "SWAP1"
      },
      "15713": {
        "jump": "o",
        "op": "JUMP"
      },
      "15714": {
        "op": "JUMPDEST"
      },
      "15715": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15717": {
        "op": "DUP1"
      },
      "15718": {
        "op": "DUP3"
      },
      "15719": {
        "op": "MSTORE"
      },
      "15720": {
        "op": "PUSH1",
        "value": "0x2A"
      },
      "15722": {
        "op": "SWAP1"
      },
      "15723": {
        "op": "DUP3"
      },
      "15724": {
        "op": "ADD"
      },
      "15725": {
        "op": "MSTORE"
      },
      "15726": {
        "op": "PUSH32",
        "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
      },
      "15759": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15761": {
        "op": "DUP3"
      },
      "15762": {
        "op": "ADD"
      },
      "15763": {
        "op": "MSTORE"
      },
      "15764": {
        "op": "PUSH10",
        "value": "0x1BDD081CDD58D8D95959"
      },
      "15775": {
        "op": "PUSH1",
        "value": "0xB2"
      },
      "15777": {
        "op": "SHL"
      },
      "15778": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15780": {
        "op": "DUP3"
      },
      "15781": {
        "op": "ADD"
      },
      "15782": {
        "op": "MSTORE"
      },
      "15783": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "15785": {
        "op": "ADD"
      },
      "15786": {
        "op": "SWAP1"
      },
      "15787": {
        "jump": "o",
        "op": "JUMP"
      },
      "15788": {
        "op": "JUMPDEST"
      },
      "15789": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15791": {
        "op": "DUP1"
      },
      "15792": {
        "op": "DUP3"
      },
      "15793": {
        "op": "MSTORE"
      },
      "15794": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "15796": {
        "op": "SWAP1"
      },
      "15797": {
        "op": "DUP3"
      },
      "15798": {
        "op": "ADD"
      },
      "15799": {
        "op": "MSTORE"
      },
      "15800": {
        "op": "PUSH32",
        "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
      },
      "15833": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15835": {
        "op": "DUP3"
      },
      "15836": {
        "op": "ADD"
      },
      "15837": {
        "op": "MSTORE"
      },
      "15838": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15840": {
        "op": "ADD"
      },
      "15841": {
        "op": "SWAP1"
      },
      "15842": {
        "jump": "o",
        "op": "JUMP"
      },
      "15843": {
        "op": "JUMPDEST"
      },
      "15844": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15846": {
        "op": "DUP1"
      },
      "15847": {
        "op": "DUP3"
      },
      "15848": {
        "op": "MSTORE"
      },
      "15849": {
        "op": "PUSH1",
        "value": "0x25"
      },
      "15851": {
        "op": "SWAP1"
      },
      "15852": {
        "op": "DUP3"
      },
      "15853": {
        "op": "ADD"
      },
      "15854": {
        "op": "MSTORE"
      },
      "15855": {
        "op": "PUSH32",
        "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
      },
      "15888": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15890": {
        "op": "DUP3"
      },
      "15891": {
        "op": "ADD"
      },
      "15892": {
        "op": "MSTORE"
      },
      "15893": {
        "op": "PUSH5",
        "value": "0x207A65726F"
      },
      "15899": {
        "op": "PUSH1",
        "value": "0xD8"
      },
      "15901": {
        "op": "SHL"
      },
      "15902": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15904": {
        "op": "DUP3"
      },
      "15905": {
        "op": "ADD"
      },
      "15906": {
        "op": "MSTORE"
      },
      "15907": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "15909": {
        "op": "ADD"
      },
      "15910": {
        "op": "SWAP1"
      },
      "15911": {
        "jump": "o",
        "op": "JUMP"
      },
      "15912": {
        "op": "JUMPDEST"
      },
      "15913": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15915": {
        "op": "DUP1"
      },
      "15916": {
        "op": "DUP3"
      },
      "15917": {
        "op": "MSTORE"
      },
      "15918": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "15920": {
        "op": "SWAP1"
      },
      "15921": {
        "op": "DUP3"
      },
      "15922": {
        "op": "ADD"
      },
      "15923": {
        "op": "MSTORE"
      },
      "15924": {
        "op": "PUSH32",
        "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
      },
      "15957": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15959": {
        "op": "DUP3"
      },
      "15960": {
        "op": "ADD"
      },
      "15961": {
        "op": "MSTORE"
      },
      "15962": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "15964": {
        "op": "ADD"
      },
      "15965": {
        "op": "SWAP1"
      },
      "15966": {
        "jump": "o",
        "op": "JUMP"
      },
      "15967": {
        "op": "JUMPDEST"
      },
      "15968": {
        "op": "SWAP2"
      },
      "15969": {
        "op": "DUP3"
      },
      "15970": {
        "op": "MSTORE"
      },
      "15971": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15973": {
        "op": "DUP3"
      },
      "15974": {
        "op": "ADD"
      },
      "15975": {
        "op": "MSTORE"
      },
      "15976": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15978": {
        "op": "ADD"
      },
      "15979": {
        "op": "SWAP1"
      },
      "15980": {
        "jump": "o",
        "op": "JUMP"
      },
      "15981": {
        "op": "JUMPDEST"
      },
      "15982": {
        "op": "SWAP3"
      },
      "15983": {
        "op": "DUP4"
      },
      "15984": {
        "op": "MSTORE"
      },
      "15985": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "15987": {
        "op": "DUP4"
      },
      "15988": {
        "op": "ADD"
      },
      "15989": {
        "op": "SWAP2"
      },
      "15990": {
        "op": "SWAP1"
      },
      "15991": {
        "op": "SWAP2"
      },
      "15992": {
        "op": "MSTORE"
      },
      "15993": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "15995": {
        "op": "DUP3"
      },
      "15996": {
        "op": "ADD"
      },
      "15997": {
        "op": "MSTORE"
      },
      "15998": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "16000": {
        "op": "ADD"
      },
      "16001": {
        "op": "SWAP1"
      },
      "16002": {
        "jump": "o",
        "op": "JUMP"
      },
      "16003": {
        "op": "JUMPDEST"
      },
      "16004": {
        "op": "SWAP4"
      },
      "16005": {
        "op": "DUP5"
      },
      "16006": {
        "op": "MSTORE"
      },
      "16007": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "16009": {
        "op": "DUP5"
      },
      "16010": {
        "op": "ADD"
      },
      "16011": {
        "op": "SWAP3"
      },
      "16012": {
        "op": "SWAP1"
      },
      "16013": {
        "op": "SWAP3"
      },
      "16014": {
        "op": "MSTORE"
      },
      "16015": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "16017": {
        "op": "DUP4"
      },
      "16018": {
        "op": "ADD"
      },
      "16019": {
        "op": "MSTORE"
      },
      "16020": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "16022": {
        "op": "DUP3"
      },
      "16023": {
        "op": "ADD"
      },
      "16024": {
        "op": "MSTORE"
      },
      "16025": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "16027": {
        "op": "ADD"
      },
      "16028": {
        "op": "SWAP1"
      },
      "16029": {
        "jump": "o",
        "op": "JUMP"
      },
      "16030": {
        "op": "JUMPDEST"
      },
      "16031": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "16033": {
        "op": "SWAP2"
      },
      "16034": {
        "op": "SWAP1"
      },
      "16035": {
        "op": "SWAP2"
      },
      "16036": {
        "op": "AND"
      },
      "16037": {
        "op": "DUP2"
      },
      "16038": {
        "op": "MSTORE"
      },
      "16039": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "16041": {
        "op": "ADD"
      },
      "16042": {
        "op": "SWAP1"
      },
      "16043": {
        "jump": "o",
        "op": "JUMP"
      },
      "16044": {
        "op": "JUMPDEST"
      },
      "16045": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16047": {
        "op": "DUP3"
      },
      "16048": {
        "op": "NOT"
      },
      "16049": {
        "op": "DUP3"
      },
      "16050": {
        "op": "GT"
      },
      "16051": {
        "op": "ISZERO"
      },
      "16052": {
        "op": "PUSH2",
        "value": "0x3EBF"
      },
      "16055": {
        "op": "JUMPI"
      },
      "16056": {
        "op": "PUSH2",
        "value": "0x3EBF"
      },
      "16059": {
        "op": "PUSH2",
        "value": "0x400E"
      },
      "16062": {
        "jump": "i",
        "op": "JUMP"
      },
      "16063": {
        "op": "JUMPDEST"
      },
      "16064": {
        "op": "POP"
      },
      "16065": {
        "op": "ADD"
      },
      "16066": {
        "op": "SWAP1"
      },
      "16067": {
        "jump": "o",
        "op": "JUMP"
      },
      "16068": {
        "op": "JUMPDEST"
      },
      "16069": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16071": {
        "op": "DUP3"
      },
      "16072": {
        "op": "PUSH2",
        "value": "0x3ED3"
      },
      "16075": {
        "op": "JUMPI"
      },
      "16076": {
        "op": "PUSH2",
        "value": "0x3ED3"
      },
      "16079": {
        "op": "PUSH2",
        "value": "0x4024"
      },
      "16082": {
        "jump": "i",
        "op": "JUMP"
      },
      "16083": {
        "op": "JUMPDEST"
      },
      "16084": {
        "op": "POP"
      },
      "16085": {
        "op": "DIV"
      },
      "16086": {
        "op": "SWAP1"
      },
      "16087": {
        "jump": "o",
        "op": "JUMP"
      },
      "16088": {
        "op": "JUMPDEST"
      },
      "16089": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16091": {
        "op": "DUP2"
      },
      "16092": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16094": {
        "op": "NOT"
      },
      "16095": {
        "op": "DIV"
      },
      "16096": {
        "op": "DUP4"
      },
      "16097": {
        "op": "GT"
      },
      "16098": {
        "op": "DUP3"
      },
      "16099": {
        "op": "ISZERO"
      },
      "16100": {
        "op": "ISZERO"
      },
      "16101": {
        "op": "AND"
      },
      "16102": {
        "op": "ISZERO"
      },
      "16103": {
        "op": "PUSH2",
        "value": "0x3EF2"
      },
      "16106": {
        "op": "JUMPI"
      },
      "16107": {
        "op": "PUSH2",
        "value": "0x3EF2"
      },
      "16110": {
        "op": "PUSH2",
        "value": "0x400E"
      },
      "16113": {
        "jump": "i",
        "op": "JUMP"
      },
      "16114": {
        "op": "JUMPDEST"
      },
      "16115": {
        "op": "POP"
      },
      "16116": {
        "op": "MUL"
      },
      "16117": {
        "op": "SWAP1"
      },
      "16118": {
        "jump": "o",
        "op": "JUMP"
      },
      "16119": {
        "op": "JUMPDEST"
      },
      "16120": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16122": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "16124": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "16126": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "16128": {
        "op": "SHL"
      },
      "16129": {
        "op": "SUB"
      },
      "16130": {
        "op": "DUP4"
      },
      "16131": {
        "op": "DUP2"
      },
      "16132": {
        "op": "AND"
      },
      "16133": {
        "op": "SWAP1"
      },
      "16134": {
        "op": "DUP4"
      },
      "16135": {
        "op": "AND"
      },
      "16136": {
        "op": "DUP2"
      },
      "16137": {
        "op": "DUP2"
      },
      "16138": {
        "op": "LT"
      },
      "16139": {
        "op": "ISZERO"
      },
      "16140": {
        "op": "PUSH2",
        "value": "0x3F17"
      },
      "16143": {
        "op": "JUMPI"
      },
      "16144": {
        "op": "PUSH2",
        "value": "0x3F17"
      },
      "16147": {
        "op": "PUSH2",
        "value": "0x400E"
      },
      "16150": {
        "jump": "i",
        "op": "JUMP"
      },
      "16151": {
        "op": "JUMPDEST"
      },
      "16152": {
        "op": "SUB"
      },
      "16153": {
        "op": "SWAP4"
      },
      "16154": {
        "op": "SWAP3"
      },
      "16155": {
        "op": "POP"
      },
      "16156": {
        "op": "POP"
      },
      "16157": {
        "op": "POP"
      },
      "16158": {
        "jump": "o",
        "op": "JUMP"
      },
      "16159": {
        "op": "JUMPDEST"
      },
      "16160": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16162": {
        "op": "DUP3"
      },
      "16163": {
        "op": "DUP3"
      },
      "16164": {
        "op": "LT"
      },
      "16165": {
        "op": "ISZERO"
      },
      "16166": {
        "op": "PUSH2",
        "value": "0x3F31"
      },
      "16169": {
        "op": "JUMPI"
      },
      "16170": {
        "op": "PUSH2",
        "value": "0x3F31"
      },
      "16173": {
        "op": "PUSH2",
        "value": "0x400E"
      },
      "16176": {
        "jump": "i",
        "op": "JUMP"
      },
      "16177": {
        "op": "JUMPDEST"
      },
      "16178": {
        "op": "POP"
      },
      "16179": {
        "op": "SUB"
      },
      "16180": {
        "op": "SWAP1"
      },
      "16181": {
        "jump": "o",
        "op": "JUMP"
      },
      "16182": {
        "op": "JUMPDEST"
      },
      "16183": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16185": {
        "op": "JUMPDEST"
      },
      "16186": {
        "op": "DUP4"
      },
      "16187": {
        "op": "DUP2"
      },
      "16188": {
        "op": "LT"
      },
      "16189": {
        "op": "ISZERO"
      },
      "16190": {
        "op": "PUSH2",
        "value": "0x3F51"
      },
      "16193": {
        "op": "JUMPI"
      },
      "16194": {
        "op": "DUP2"
      },
      "16195": {
        "op": "DUP2"
      },
      "16196": {
        "op": "ADD"
      },
      "16197": {
        "op": "MLOAD"
      },
      "16198": {
        "op": "DUP4"
      },
      "16199": {
        "op": "DUP3"
      },
      "16200": {
        "op": "ADD"
      },
      "16201": {
        "op": "MSTORE"
      },
      "16202": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "16204": {
        "op": "ADD"
      },
      "16205": {
        "op": "PUSH2",
        "value": "0x3F39"
      },
      "16208": {
        "op": "JUMP"
      },
      "16209": {
        "op": "JUMPDEST"
      },
      "16210": {
        "op": "DUP4"
      },
      "16211": {
        "op": "DUP2"
      },
      "16212": {
        "op": "GT"
      },
      "16213": {
        "op": "ISZERO"
      },
      "16214": {
        "op": "PUSH2",
        "value": "0x17A8"
      },
      "16217": {
        "op": "JUMPI"
      },
      "16218": {
        "op": "POP"
      },
      "16219": {
        "op": "POP"
      },
      "16220": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16222": {
        "op": "SWAP2"
      },
      "16223": {
        "op": "ADD"
      },
      "16224": {
        "op": "MSTORE"
      },
      "16225": {
        "jump": "o",
        "op": "JUMP"
      },
      "16226": {
        "op": "JUMPDEST"
      },
      "16227": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "16229": {
        "op": "DUP2"
      },
      "16230": {
        "op": "DIV"
      },
      "16231": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "16233": {
        "op": "DUP3"
      },
      "16234": {
        "op": "AND"
      },
      "16235": {
        "op": "DUP1"
      },
      "16236": {
        "op": "PUSH2",
        "value": "0x3F76"
      },
      "16239": {
        "op": "JUMPI"
      },
      "16240": {
        "op": "PUSH1",
        "value": "0x7F"
      },
      "16242": {
        "op": "DUP3"
      },
      "16243": {
        "op": "AND"
      },
      "16244": {
        "op": "SWAP2"
      },
      "16245": {
        "op": "POP"
      },
      "16246": {
        "op": "JUMPDEST"
      },
      "16247": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "16249": {
        "op": "DUP3"
      },
      "16250": {
        "op": "LT"
      },
      "16251": {
        "op": "DUP2"
      },
      "16252": {
        "op": "EQ"
      },
      "16253": {
        "op": "ISZERO"
      },
      "16254": {
        "op": "PUSH2",
        "value": "0x3F97"
      },
      "16257": {
        "op": "JUMPI"
      },
      "16258": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "16263": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "16265": {
        "op": "SHL"
      },
      "16266": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16268": {
        "op": "MSTORE"
      },
      "16269": {
        "op": "PUSH1",
        "value": "0x22"
      },
      "16271": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "16273": {
        "op": "MSTORE"
      },
      "16274": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "16276": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16278": {
        "op": "REVERT"
      },
      "16279": {
        "op": "JUMPDEST"
      },
      "16280": {
        "op": "POP"
      },
      "16281": {
        "op": "SWAP2"
      },
      "16282": {
        "op": "SWAP1"
      },
      "16283": {
        "op": "POP"
      },
      "16284": {
        "jump": "o",
        "op": "JUMP"
      },
      "16285": {
        "op": "JUMPDEST"
      },
      "16286": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16288": {
        "op": "DUP3"
      },
      "16289": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "16291": {
        "op": "SIGNEXTEND"
      },
      "16292": {
        "op": "DUP1"
      },
      "16293": {
        "op": "PUSH2",
        "value": "0x3FB0"
      },
      "16296": {
        "op": "JUMPI"
      },
      "16297": {
        "op": "PUSH2",
        "value": "0x3FB0"
      },
      "16300": {
        "op": "PUSH2",
        "value": "0x4024"
      },
      "16303": {
        "jump": "i",
        "op": "JUMP"
      },
      "16304": {
        "op": "JUMPDEST"
      },
      "16305": {
        "op": "DUP1"
      },
      "16306": {
        "op": "DUP4"
      },
      "16307": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "16309": {
        "op": "SIGNEXTEND"
      },
      "16310": {
        "op": "SMOD"
      },
      "16311": {
        "op": "SWAP2"
      },
      "16312": {
        "op": "POP"
      },
      "16313": {
        "op": "POP"
      },
      "16314": {
        "op": "SWAP3"
      },
      "16315": {
        "op": "SWAP2"
      },
      "16316": {
        "op": "POP"
      },
      "16317": {
        "op": "POP"
      },
      "16318": {
        "jump": "o",
        "op": "JUMP"
      },
      "16319": {
        "op": "JUMPDEST"
      },
      "16320": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16322": {
        "op": "DUP3"
      },
      "16323": {
        "op": "PUSH2",
        "value": "0x3FCE"
      },
      "16326": {
        "op": "JUMPI"
      },
      "16327": {
        "op": "PUSH2",
        "value": "0x3FCE"
      },
      "16330": {
        "op": "PUSH2",
        "value": "0x4024"
      },
      "16333": {
        "jump": "i",
        "op": "JUMP"
      },
      "16334": {
        "op": "JUMPDEST"
      },
      "16335": {
        "op": "POP"
      },
      "16336": {
        "op": "MOD"
      },
      "16337": {
        "op": "SWAP1"
      },
      "16338": {
        "jump": "o",
        "op": "JUMP"
      },
      "16339": {
        "op": "JUMPDEST"
      },
      "16340": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16342": {
        "op": "DUP2"
      },
      "16343": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "16345": {
        "op": "SIGNEXTEND"
      },
      "16346": {
        "op": "PUSH3",
        "value": "0x7FFFFF"
      },
      "16350": {
        "op": "NOT"
      },
      "16351": {
        "op": "DUP2"
      },
      "16352": {
        "op": "EQ"
      },
      "16353": {
        "op": "ISZERO"
      },
      "16354": {
        "op": "PUSH2",
        "value": "0x3FED"
      },
      "16357": {
        "op": "JUMPI"
      },
      "16358": {
        "op": "PUSH2",
        "value": "0x3FED"
      },
      "16361": {
        "op": "PUSH2",
        "value": "0x400E"
      },
      "16364": {
        "jump": "i",
        "op": "JUMP"
      },
      "16365": {
        "op": "JUMPDEST"
      },
      "16366": {
        "op": "SWAP1"
      },
      "16367": {
        "op": "SUB"
      },
      "16368": {
        "op": "SWAP2"
      },
      "16369": {
        "op": "SWAP1"
      },
      "16370": {
        "op": "POP"
      },
      "16371": {
        "jump": "o",
        "op": "JUMP"
      },
      "16372": {
        "op": "JUMPDEST"
      },
      "16373": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16375": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "16377": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "16379": {
        "op": "SHL"
      },
      "16380": {
        "op": "DUP3"
      },
      "16381": {
        "op": "EQ"
      },
      "16382": {
        "op": "ISZERO"
      },
      "16383": {
        "op": "PUSH2",
        "value": "0x400A"
      },
      "16386": {
        "op": "JUMPI"
      },
      "16387": {
        "op": "PUSH2",
        "value": "0x400A"
      },
      "16390": {
        "op": "PUSH2",
        "value": "0x400E"
      },
      "16393": {
        "jump": "i",
        "op": "JUMP"
      },
      "16394": {
        "op": "JUMPDEST"
      },
      "16395": {
        "op": "SUB"
      },
      "16396": {
        "op": "SWAP1"
      },
      "16397": {
        "jump": "o",
        "op": "JUMP"
      },
      "16398": {
        "op": "JUMPDEST"
      },
      "16399": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "16404": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "16406": {
        "op": "SHL"
      },
      "16407": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16409": {
        "op": "MSTORE"
      },
      "16410": {
        "op": "PUSH1",
        "value": "0x11"
      },
      "16412": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "16414": {
        "op": "MSTORE"
      },
      "16415": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "16417": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16419": {
        "op": "REVERT"
      },
      "16420": {
        "op": "JUMPDEST"
      },
      "16421": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "16426": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "16428": {
        "op": "SHL"
      },
      "16429": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16431": {
        "op": "MSTORE"
      },
      "16432": {
        "op": "PUSH1",
        "value": "0x12"
      },
      "16434": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "16436": {
        "op": "MSTORE"
      },
      "16437": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "16439": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16441": {
        "op": "REVERT"
      },
      "16442": {
        "op": "JUMPDEST"
      },
      "16443": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "16445": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "16447": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "16449": {
        "op": "SHL"
      },
      "16450": {
        "op": "SUB"
      },
      "16451": {
        "op": "DUP2"
      },
      "16452": {
        "op": "AND"
      },
      "16453": {
        "op": "DUP2"
      },
      "16454": {
        "op": "EQ"
      },
      "16455": {
        "op": "PUSH2",
        "value": "0x404F"
      },
      "16458": {
        "op": "JUMPI"
      },
      "16459": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16461": {
        "op": "DUP1"
      },
      "16462": {
        "op": "REVERT"
      },
      "16463": {
        "op": "JUMPDEST"
      },
      "16464": {
        "op": "POP"
      },
      "16465": {
        "jump": "o",
        "op": "JUMP"
      },
      "16466": {
        "op": "JUMPDEST"
      },
      "16467": {
        "op": "DUP1"
      },
      "16468": {
        "op": "PUSH1",
        "value": "0x2"
      },
      "16470": {
        "op": "SIGNEXTEND"
      },
      "16471": {
        "op": "DUP2"
      },
      "16472": {
        "op": "EQ"
      },
      "16473": {
        "op": "PUSH2",
        "value": "0x404F"
      },
      "16476": {
        "op": "JUMPI"
      },
      "16477": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16479": {
        "op": "DUP1"
      },
      "16480": {
        "op": "REVERT"
      },
      "16481": {
        "op": "JUMPDEST"
      },
      "16482": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "16484": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "16486": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "16488": {
        "op": "SHL"
      },
      "16489": {
        "op": "SUB"
      },
      "16490": {
        "op": "DUP2"
      },
      "16491": {
        "op": "AND"
      },
      "16492": {
        "op": "DUP2"
      },
      "16493": {
        "op": "EQ"
      },
      "16494": {
        "op": "PUSH2",
        "value": "0x404F"
      },
      "16497": {
        "op": "JUMPI"
      },
      "16498": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "16500": {
        "op": "DUP1"
      },
      "16501": {
        "op": "REVERT"
      }
    },
    "sha1": "8946d09a7e2c7cbc02824e93df775c75dc8b82b5",
    "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@uniswap/v3-core/contracts/libraries/TickMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/LiquidityAmounts.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/PositionKey.sol\";\nimport \"../interfaces/IVault.sol\";\n\n\ncontract SharpeAI is\n    IVault,\n    IUniswapV3MintCallback,\n    IUniswapV3SwapCallback,\n    ERC20,\n    ReentrancyGuard\n{\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    event Deposit(\n        address indexed sender,\n        address indexed to,\n        uint256 shares,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    event Withdraw(\n        address indexed sender,\n        address indexed to,\n        uint256 shares,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    event CollectFees(\n        uint256 feesToVault0,\n        uint256 feesToVault1,\n        uint256 feesToProtocol0,\n        uint256 feesToProtocol1\n    );\n\n    event Snapshot(int24 tick, uint256 totalAmount0, uint256 totalAmount1, uint256 totalSupply);\n\n    IUniswapV3Pool public immutable pool;\n    IERC20 public immutable token0;\n    IERC20 public immutable token1;\n    int24 public immutable tickSpacing;\n\n    uint256 public protocolFee;\n    uint256 public maxTotalSupply;\n    address public SharpeKeeper;\n    address public governance;\n    address public pendingGovernance;\n\n    int24 public baseLower;\n    int24 public baseUpper;\n    int24 public limitLower;\n    int24 public limitUpper;\n    uint256 public accruedProtocolFees0;\n    uint256 public accruedProtocolFees1;\n\n    /**\n     * dev After deploying, strategy needs to be set by offchain devs\n     * param _pool Underlying Uniswap V3 pool\n     * param _protocolFee Protocol fee expressed as multiple of 1e-6\n     * param _maxTotalSupply Cap on total supply\n     */\n    constructor(\n        address _pool,\n        uint256 _protocolFee,\n        uint256 _maxTotalSupply\n    ) ERC20(\"SharpeAI\", \"AI\") {\n        pool = IUniswapV3Pool(_pool);\n        token0 = IERC20(IUniswapV3Pool(_pool).token0());\n        token1 = IERC20(IUniswapV3Pool(_pool).token1());\n        tickSpacing = IUniswapV3Pool(_pool).tickSpacing();\n\n        protocolFee = _protocolFee;\n        maxTotalSupply = _maxTotalSupply;\n        governance = msg.sender;\n        \n        require(_protocolFee < 1e6, \"protocolFee\");\n    }\n    \n\n    /**\n     * @notice Deposits tokens in proportion to the vault's current holdings.\n     * @dev These tokens sit in the vault and are not used for liquidity on\n     * Uniswap until the next rebalance. Also note it's not necessary to check\n     * if user manipulated price to deposit cheaper, as the value of range\n     * orders can only by manipulated higher.\n     * @param amount0Desired Max amount of token0 to deposit\n     * @param amount1Desired Max amount of token1 to deposit\n     * @param amount0Min Revert if resulting `amount0` is less than this\n     * @param amount1Min Revert if resulting `amount1` is less than this\n     * @param to Recipient of shares\n     * @return shares Number of shares minted\n     * @return amount0 Amount of token0 deposited\n     * @return amount1 Amount of token1 deposited\n     */\n    function deposit(\n        uint256 amount0Desired,\n        uint256 amount1Desired,\n        uint256 amount0Min,\n        uint256 amount1Min,\n        address to\n    )\n        external\n        override\n        nonReentrant\n        returns (\n            uint256 shares,\n            uint256 amount0,\n            uint256 amount1\n        )\n    {\n        require(amount0Desired > 0 || amount1Desired > 0, \"amount0Desired or amount1Desired\");\n        require(to != address(0) && to != address(this), \"to\");\n\n        // Poke positions so vault's current holdings are up-to-date\n        _poke(baseLower, baseUpper);\n        _poke(limitLower, limitUpper);\n\n        // Calculate amounts proportional to vault's holdings\n        (shares, amount0, amount1) = _calcSharesAndAmounts(amount0Desired, amount1Desired);\n        require(shares > 0, \"shares\");\n        require(amount0 >= amount0Min, \"amount0Min\");\n        require(amount1 >= amount1Min, \"amount1Min\");\n\n        // Pull in tokens from sender\n        if (amount0 > 0) token0.safeTransferFrom(msg.sender, address(this), amount0);\n        if (amount1 > 0) token1.safeTransferFrom(msg.sender, address(this), amount1);\n\n        // Mint shares to recipient\n        _mint(to, shares);\n        emit Deposit(msg.sender, to, shares, amount0, amount1);\n        require(totalSupply() <= maxTotalSupply, \"maxTotalSupply\");\n    }\n\n    /// @dev Do zero-burns to poke a position on Uniswap so earned fees are\n    /// updated. Should be called if total amounts needs to include up-to-date\n    /// fees.\n    function _poke(int24 tickLower, int24 tickUpper) internal {\n        (uint128 liquidity, , , , ) = _position(tickLower, tickUpper);\n        if (liquidity > 0) {\n            pool.burn(tickLower, tickUpper, 0);\n        }\n    }\n\n    /// @dev Calculates the largest possible `amount0` and `amount1` such that\n    /// they're in the same proportion as total amounts, but not greater than\n    /// `amount0Desired` and `amount1Desired` respectively.\n    function _calcSharesAndAmounts(uint256 amount0Desired, uint256 amount1Desired)\n        internal\n        view\n        returns (\n            uint256 shares,\n            uint256 amount0,\n            uint256 amount1\n        )\n    {\n        uint256 totalSupply = totalSupply();\n        (uint256 total0, uint256 total1) = getTotalAmounts();\n\n        // If total supply > 0, vault can't be empty\n        assert(totalSupply == 0 || total0 > 0 || total1 > 0);\n\n        if (totalSupply == 0) {\n            // For first deposit, just use the amounts desired\n            amount0 = amount0Desired;\n            amount1 = amount1Desired;\n            shares = Math.max(amount0, amount1);\n        } else if (total0 == 0) {\n            amount1 = amount1Desired;\n            shares = amount1.mul(totalSupply).div(total1);\n        } else if (total1 == 0) {\n            amount0 = amount0Desired;\n            shares = amount0.mul(totalSupply).div(total0);\n        } else {\n            uint256 cross = Math.min(amount0Desired.mul(total1), amount1Desired.mul(total0));\n            require(cross > 0, \"cross\");\n\n            // Round up amounts\n            amount0 = cross.sub(1).div(total1).add(1);\n            amount1 = cross.sub(1).div(total0).add(1);\n            shares = cross.mul(totalSupply).div(total0).div(total1);\n        }\n    }\n\n    /**\n     * @notice Withdraws tokens in proportion to the vault's holdings.\n     * @param shares Shares burned by sender\n     * @param amount0Min Revert if resulting `amount0` is smaller than this\n     * @param amount1Min Revert if resulting `amount1` is smaller than this\n     * @param to Recipient of tokens\n     * @return amount0 Amount of token0 sent to recipient\n     * @return amount1 Amount of token1 sent to recipient\n     */\n    function withdraw(\n        uint256 shares,\n        uint256 amount0Min,\n        uint256 amount1Min,\n        address to\n    ) external override nonReentrant returns (uint256 amount0, uint256 amount1) {\n        require(shares > 0, \"shares\");\n        require(to != address(0) && to != address(this), \"to\");\n        uint256 totalSupply = totalSupply();\n\n        // Burn shares\n        _burn(msg.sender, shares);\n\n        // Calculate token amounts proportional to unused balances\n        uint256 unusedAmount0 = getBalance0().mul(shares).div(totalSupply);\n        uint256 unusedAmount1 = getBalance1().mul(shares).div(totalSupply);\n\n        // Withdraw proportion of liquidity from Uniswap pool\n        (uint256 baseAmount0, uint256 baseAmount1) =\n            _burnLiquidityShare(baseLower, baseUpper, shares, totalSupply);\n        (uint256 limitAmount0, uint256 limitAmount1) =\n            _burnLiquidityShare(limitLower, limitUpper, shares, totalSupply);\n\n        // Sum up total amounts owed to recipient\n        amount0 = unusedAmount0.add(baseAmount0).add(limitAmount0);\n        amount1 = unusedAmount1.add(baseAmount1).add(limitAmount1);\n        require(amount0 >= amount0Min, \"amount0Min\");\n        require(amount1 >= amount1Min, \"amount1Min\");\n\n        // Push tokens to recipient\n        if (amount0 > 0) token0.safeTransfer(to, amount0);\n        if (amount1 > 0) token1.safeTransfer(to, amount1);\n\n        emit Withdraw(msg.sender, to, shares, amount0, amount1);\n    }\n\n    /// @dev Withdraws share of liquidity in a range from Uniswap pool.\n    function _burnLiquidityShare(\n        int24 tickLower,\n        int24 tickUpper,\n        uint256 shares,\n        uint256 totalSupply\n    ) internal returns (uint256 amount0, uint256 amount1) {\n        (uint128 totalLiquidity, , , , ) = _position(tickLower, tickUpper);\n        uint256 liquidity = uint256(totalLiquidity).mul(shares).div(totalSupply);\n\n        if (liquidity > 0) {\n            (uint256 burned0, uint256 burned1, uint256 fees0, uint256 fees1) =\n                _burnAndCollect(tickLower, tickUpper, _toUint128(liquidity));\n\n            // Add share of fees\n            amount0 = burned0.add(fees0.mul(shares).div(totalSupply));\n            amount1 = burned1.add(fees1.mul(shares).div(totalSupply));\n        }\n    }\n\n    /**\n     * @notice Updates vault's positions. Can only be called by the strategy.\n     * @dev Two orders are placed - a base order and a limit order. The base\n     * order is placed first with as much liquidity as possible. This order\n     * should use up all of one token, leaving only the other one. This excess\n     * amount is then placed as a single-sided bid or ask order.\n     */\n    function rebalance(\n        int256 swapAmount,\n        uint160 sqrtPriceLimitX96,\n        int24 _baseLower,\n        int24 _baseUpper,\n        int24 _bidLower,\n        int24 _bidUpper,\n        int24 _askLower,\n        int24 _askUpper\n    ) external nonReentrant{\n        require(msg.sender == SharpeKeeper, \"SharpeKeeper\");\n        _checkRange(_baseLower, _baseUpper);\n        _checkRange(_bidLower, _bidUpper);\n        _checkRange(_askLower, _askUpper);\n\n        (, int24 tick, , , , , ) = pool.slot0();\n        require(_bidUpper <= tick, \"bidUpper\");\n        require(_askLower > tick, \"askLower\"); // inequality is strict as tick is rounded down\n\n        // Withdraw all current liquidity from Uniswap pool\n        {\n            (uint128 baseLiquidity, , , , ) = _position(baseLower, baseUpper);\n            (uint128 limitLiquidity, , , , ) = _position(limitLower, limitUpper);\n            _burnAndCollect(baseLower, baseUpper, baseLiquidity);\n            _burnAndCollect(limitLower, limitUpper, limitLiquidity);\n        }\n\n        // Emit snapshot to record balances and supply\n        uint256 balance0 = getBalance0();\n        uint256 balance1 = getBalance1();\n        emit Snapshot(tick, balance0, balance1, totalSupply());\n\n        if (swapAmount != 0) {\n            pool.swap(\n                address(this),\n                swapAmount > 0,\n                swapAmount > 0 ? swapAmount : -swapAmount,\n                sqrtPriceLimitX96,\n                \"\"\n            );\n            balance0 = getBalance0();\n            balance1 = getBalance1();\n        }\n\n        // Place base order on Uniswap\n        uint128 liquidity = _liquidityForAmounts(_baseLower, _baseUpper, balance0, balance1);\n        _mintLiquidity(_baseLower, _baseUpper, liquidity);\n        (baseLower, baseUpper) = (_baseLower, _baseUpper);\n\n        balance0 = getBalance0();\n        balance1 = getBalance1();\n\n        // Place bid or ask order on Uniswap depending on which token is left\n        uint128 bidLiquidity = _liquidityForAmounts(_bidLower, _bidUpper, balance0, balance1);\n        uint128 askLiquidity = _liquidityForAmounts(_askLower, _askUpper, balance0, balance1);\n        if (bidLiquidity > askLiquidity) {\n            _mintLiquidity(_bidLower, _bidUpper, bidLiquidity);\n            (limitLower, limitUpper) = (_bidLower, _bidUpper);\n        } else {\n            _mintLiquidity(_askLower, _askUpper, askLiquidity);\n            (limitLower, limitUpper) = (_askLower, _askUpper);\n        }\n    }\n    \n    function _checkRange(int24 tickLower, int24 tickUpper) internal view {\n        int24 _tickSpacing = tickSpacing;\n        require(tickLower < tickUpper, \"tickLower < tickUpper\");\n        require(tickLower >= TickMath.MIN_TICK, \"tickLower too low\");\n        require(tickUpper <= TickMath.MAX_TICK, \"tickUpper too high\");\n        require(tickLower % _tickSpacing == 0, \"tickLower % tickSpacing\");\n        require(tickUpper % _tickSpacing == 0, \"tickUpper % tickSpacing\");\n    }\n\n    /// @dev Withdraws liquidity from a range and collects all fees in the\n    /// process.\n    function _burnAndCollect(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    )\n        internal\n        returns (\n            uint256 burned0,\n            uint256 burned1,\n            uint256 feesToVault0,\n            uint256 feesToVault1\n        )\n    {\n        if (liquidity > 0) {\n            (burned0, burned1) = pool.burn(tickLower, tickUpper, liquidity);\n        }\n\n        // Collect all owed tokens including earned fees\n        (uint256 collect0, uint256 collect1) =\n            pool.collect(\n                address(this),\n                tickLower,\n                tickUpper,\n                type(uint128).max,\n                type(uint128).max\n            );\n\n        feesToVault0 = collect0.sub(burned0);\n        feesToVault1 = collect1.sub(burned1);\n        uint256 feesToProtocol0;\n        uint256 feesToProtocol1;\n\n        // Update accrued protocol fees\n        uint256 _protocolFee = protocolFee;\n        if (_protocolFee > 0) {\n            feesToProtocol0 = feesToVault0.mul(_protocolFee).div(1e6);\n            feesToProtocol1 = feesToVault1.mul(_protocolFee).div(1e6);\n            feesToVault0 = feesToVault0.sub(feesToProtocol0);\n            feesToVault1 = feesToVault1.sub(feesToProtocol1);\n            accruedProtocolFees0 = accruedProtocolFees0.add(feesToProtocol0);\n            accruedProtocolFees1 = accruedProtocolFees1.add(feesToProtocol1);\n        }\n        emit CollectFees(feesToVault0, feesToVault1, feesToProtocol0, feesToProtocol1);\n    }\n\n    /// @dev Deposits liquidity in a range on the Uniswap pool.\n    function _mintLiquidity(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) internal {\n        if (liquidity > 0) {\n            pool.mint(address(this), tickLower, tickUpper, liquidity, \"\");\n        }\n    }\n\n    /**\n     * @notice Calculates the vault's total holdings of token0 and token1 - in\n     * other words, how much of each token the vault would hold if it withdrew\n     * all its liquidity from Uniswap.\n     */\n    function getTotalAmounts() public view override returns (uint256 total0, uint256 total1) {\n        (uint256 baseAmount0, uint256 baseAmount1) = getPositionAmounts(baseLower, baseUpper);\n        (uint256 limitAmount0, uint256 limitAmount1) =\n            getPositionAmounts(limitLower, limitUpper);\n        total0 = getBalance0().add(baseAmount0).add(limitAmount0);\n        total1 = getBalance1().add(baseAmount1).add(limitAmount1);\n    }\n\n    /**\n     * @notice Amounts of token0 and token1 held in vault's position. Includes\n     * owed fees but excludes the proportion of fees that will be paid to the\n     * protocol. Doesn't include fees accrued since last poke.\n     */\n    function getPositionAmounts(int24 tickLower, int24 tickUpper)\n        public\n        view\n        returns (uint256 amount0, uint256 amount1)\n    {\n        (uint128 liquidity, , , uint128 tokensOwed0, uint128 tokensOwed1) =\n            _position(tickLower, tickUpper);\n        (amount0, amount1) = _amountsForLiquidity(tickLower, tickUpper, liquidity);\n\n        // Subtract protocol fees\n        uint256 oneMinusFee = uint256(1e6).sub(protocolFee);\n        amount0 = amount0.add(uint256(tokensOwed0).mul(oneMinusFee).div(1e6));\n        amount1 = amount1.add(uint256(tokensOwed1).mul(oneMinusFee).div(1e6));\n    }\n\n    /**\n     * @notice Balance of token0 in vault not used in any position.\n     */\n    function getBalance0() public view returns (uint256) {\n        return token0.balanceOf(address(this)).sub(accruedProtocolFees0);\n    }\n\n    /**\n     * @notice Balance of token1 in vault not used in any position.\n     */\n    function getBalance1() public view returns (uint256) {\n        return token1.balanceOf(address(this)).sub(accruedProtocolFees1);\n    }\n\n    /// @dev Wrapper around `IUniswapV3Pool.positions()`.\n    function _position(int24 tickLower, int24 tickUpper)\n        internal\n        view\n        returns (\n            uint128,\n            uint256,\n            uint256,\n            uint128,\n            uint128\n        )\n    {\n        \n        bytes32 positionKey = PositionKey.compute(address(this), tickLower, tickUpper);\n        return pool.positions(positionKey);\n    }\n    \n    /// @dev Wrapper around `LiquidityAmounts.getAmountsForLiquidity()`.\n    function _amountsForLiquidity(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) internal view returns (uint256, uint256) {\n        (uint160 sqrtRatioX96, , , , , , ) = pool.slot0();\n        return\n            LiquidityAmounts.getAmountsForLiquidity(\n                sqrtRatioX96,\n                TickMath.getSqrtRatioAtTick(tickLower),\n                TickMath.getSqrtRatioAtTick(tickUpper),\n                liquidity\n            );\n    }\n\n    /// @dev Wrapper around `LiquidityAmounts.getLiquidityForAmounts()`.\n    function _liquidityForAmounts(\n        int24 tickLower,\n        int24 tickUpper,\n        uint256 amount0,\n        uint256 amount1\n    ) internal view returns (uint128) {\n        (uint160 sqrtRatioX96, , , , , , ) = pool.slot0();\n        return\n            LiquidityAmounts.getLiquidityForAmounts(\n                sqrtRatioX96,\n                TickMath.getSqrtRatioAtTick(tickLower),\n                TickMath.getSqrtRatioAtTick(tickUpper),\n                amount0,\n                amount1\n            );\n    }\n\n    /// @dev Casts uint256 to uint128 with overflow check.\n    function _toUint128(uint256 x) internal pure returns (uint128) {\n        assert(x <= type(uint128).max);\n        return uint128(x);\n    }\n\n    /// @dev Callback for Uniswap V3 pool.\n    function uniswapV3MintCallback(\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external override {\n        require(msg.sender == address(pool));\n        if (amount0 > 0) token0.safeTransfer(msg.sender, amount0);\n        if (amount1 > 0) token1.safeTransfer(msg.sender, amount1);\n    }\n\n    /// @dev Callback for Uniswap V3 pool.\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external override {\n        require(msg.sender == address(pool));\n        if (amount0Delta > 0) token0.safeTransfer(msg.sender, uint256(amount0Delta));\n        if (amount1Delta > 0) token1.safeTransfer(msg.sender, uint256(amount1Delta));\n    }\n\n    /**\n     * @notice Used to collect accumulated protocol fees.\n     */\n    function collectProtocol(\n        uint256 amount0,\n        uint256 amount1,\n        address to\n    ) external onlyGovernance {\n        accruedProtocolFees0 = accruedProtocolFees0.sub(amount0);\n        accruedProtocolFees1 = accruedProtocolFees1.sub(amount1);\n        if (amount0 > 0) token0.safeTransfer(to, amount0);\n        if (amount1 > 0) token1.safeTransfer(to, amount1);\n    }\n\n    /**\n     * @notice Removes tokens accidentally sent to this vault.\n     */\n    function sweep(\n        IERC20 token,\n        uint256 amount,\n        address to\n    ) external onlyGovernance {\n        require(token != token0 && token != token1, \"token\");\n        token.safeTransfer(to, amount);\n    }\n\n    /**\n     * @notice Used to set the keeper contract that determines the position\n     * ranges and calls rebalance(). Must be called after this vault is\n     * deployed.\n     */\n    function setSharpeKeeper(address _SharpeKeeper) external onlyGovernance {\n        SharpeKeeper = _SharpeKeeper;\n    }\n\n    /**\n     * @notice Used to change the protocol fee charged on pool fees earned from\n     * Uniswap, expressed as multiple of 1e-6.\n     */\n    function setProtocolFee(uint256 _protocolFee) external onlyGovernance {\n        require(_protocolFee < 1e6, \"protocolFee\");\n        protocolFee = _protocolFee;\n    }\n\n    /**\n     * @notice Used to change deposit cap for a guarded launch or to ensure\n     * vault doesn't grow too large relative to the pool. Cap is on total\n     * supply rather than amounts of token0 and token1 as those amounts\n     * fluctuate naturally over time.\n     */\n    function setMaxTotalSupply(uint256 _maxTotalSupply) external onlyGovernance {\n        maxTotalSupply = _maxTotalSupply;\n    }\n\n    /**\n     * @notice Removes liquidity in case of emergency.\n     */\n    function emergencyBurn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) external onlyGovernance {\n        pool.burn(tickLower, tickUpper, liquidity);\n        pool.collect(address(this), tickLower, tickUpper, type(uint128).max, type(uint128).max);\n    }\n\n    /**\n     * @notice Governance address is not updated until the new governance\n     * address has called `acceptGovernance()` to accept this responsibility.\n     */\n    function setGovernance(address _governance) external onlyGovernance {\n        pendingGovernance = _governance;\n    }\n\n    /**\n     * @notice `setGovernance()` should be called by the existing governance\n     * address prior to calling this function.\n     */\n    function acceptGovernance() external {\n        require(msg.sender == pendingGovernance, \"pendingGovernance\");\n        governance = msg.sender;\n    }\n\n    modifier onlyGovernance {\n        require(msg.sender == governance, \"governance\");\n        _;\n    }\n}",
    "sourceMap": "1648:22126:23:-:0;;;3245:534;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:1;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1701:1:0;1806:7;:22;-1:-1:-1;;;;;;;3388:28:23::1;::::0;;;;::::1;::::0;3443:30:::1;::::0;;-1:-1:-1;;;3443:30:23;;;;-1:-1:-1;;;;;3388:28:23;::::1;::::0;3443::::1;::::0;:30:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;3388:28;3443:30;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3427:47:23::1;;;-1:-1:-1::0;;;;;3427:47:23::1;;;;;::::0;::::1;3516:5;-1:-1:-1::0;;;;;3501:28:23::1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3485:47:23::1;;;-1:-1:-1::0;;;;;3485:47:23::1;;;;;::::0;::::1;3572:5;-1:-1:-1::0;;;;;3557:33:23::1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3543:49;::::0;;::::1;::::0;::::1;;;;::::0;3605:11:::1;:26:::0;;;3642:14:::1;:32:::0;;;3685:10:::1;:23:::0;;-1:-1:-1;;;;;;3685:23:23::1;3698:10;3685:23;::::0;;3752:3:::1;3737:18:::0;::::1;3729:42;;;;-1:-1:-1::0;;;3729:42:23::1;;;;;;;:::i;:::-;;;;;;;;;3245:534:::0;;;1648:22126;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1648:22126:23;;;-1:-1:-1;1648:22126:23;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:26;95:13;;-1:-1:-1;;;;;137:31:26;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:220::-;;321:2;309:9;300:7;296:23;292:32;289:2;;;342:6;334;327:22;289:2;370:42;402:9;370:42;:::i;:::-;360:52;279:139;-1:-1:-1;;;279:139:26:o;423:342::-;;;;580:2;568:9;559:7;555:23;551:32;548:2;;;601:6;593;586:22;548:2;629:42;661:9;629:42;:::i;:::-;619:52;;711:2;700:9;696:18;690:25;680:35;;755:2;744:9;740:18;734:25;724:35;;538:227;;;;;:::o;770:297::-;;891:2;879:9;870:7;866:23;862:32;859:2;;;912:6;904;897:22;859:2;949:9;943:16;1002:5;999:1;988:20;981:5;978:31;968:2;;1028:6;1020;1013:22;1072:335;1274:2;1256:21;;;1313:2;1293:18;;;1286:30;-1:-1:-1;;;1347:2:26;1332:18;;1325:41;1398:2;1383:18;;1246:161::o;1412:380::-;1497:1;1487:12;;1544:1;1534:12;;;1555:2;;1609:4;1601:6;1597:17;1587:27;;1555:2;1662;1654:6;1651:14;1631:18;1628:38;1625:2;;;1708:10;1703:3;1699:20;1696:1;1689:31;1743:4;1740:1;1733:15;1771:4;1768:1;1761:15;1625:2;;1467:325;;;:::o;:::-;1648:22126:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "sourcePath": "contracts/SharpeAI.sol",
    "type": "contract"
  }